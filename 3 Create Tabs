Dim Project, TableDoc, Sample[], Cntry[], CStart, CEnd, SampStart, SampEnd, C, S, AxisTop, AxisSide, DDF_FILE, MDD_FILE, EXPORT_FILE, Screener,PrevWt, Client, Neilsen, Counts, PerCounts

'*******************************************'
'	Define Path	& Project					'
'*******************************************'
#define myPath "K:\TV Now Tracker\Tracking\Wave 1\"
Project  = "TV Now"


'*******************************************'
'	Define Samples & Countries				'
'*******************************************'

Sample[1] = "General"
Sample[2] = "Screener"
Sample[3] = "Kids"

Cntry[0] = "All Countries"
Cntry[1] = "US"
Cntry[2] = "UK"
Cntry[3] = "FR"
Cntry[4] = "DE"
Cntry[5] = "ES"
Cntry[6] = "MX"
Cntry[7] = "BR"
Cntry[8] = "RU"
Cntry[9] = "CN"
Cntry[10] = "JP"
Cntry[11] = "KR"
Cntry[12] = "HK"


'*******************************************'
'	Which tabs are running					'
'*******************************************'
Screener = 0
PrevWt = 0
Client = 1
Neilsen = 0
Counts = 0 'Use Indices in VergeAll
PerCounts = 1 'Click on StatTesting 
'*******************************************'
'	Country Numbers to Run					'
'*******************************************'
CStart   = 1
CEnd	 = 1


For C = CStart to CEnd

	'*******************************************'
	'	Sample Numbers to Run					'
	'*******************************************'

	If Screener = 1 then SampStart = 2
	If Screener = 0 then SampStart = 1
	If Screener = 1 then SampEnd = 2
	If Screener = 0 then SampEnd = 1
	
	For S = SampStart to SampEnd
	
		'*******************************************'
		'	Read in Data							'
		'*******************************************'
		
		Set TableDoc = CreateObject("TOM.Document")
		
		DDF_FILE = myPath + "Tabs\Tab Prep\Data1 " + Cntry[1] + ".ddf"
		MDD_FILE = myPath + "Tabs\Tab Prep\Data1 " + Cntry[1] + ".mdd"
		
		if S = 2 then DDF_FILE = myPath + "Tabs\Tab Prep\Data1 " + Cntry[1] + " Screener.ddf"
		if S = 2 then MDD_FILE = myPath + "Tabs\Tab Prep\Data1 " + Cntry[1] + " Screener.mdd"	
		
		TableDoc.DataSet.Load(MDD_FILE, , DDF_FILE, "mrDataFileDsc")	
		
		'*******************************************'
		'	Global Table Properties					'
		'*******************************************'
		
		TableDoc.Default.CellItems.Clear()
		if Counts = 0 OR PerCounts = 1 then TableDoc.Default.CellItems.AddNew(&H0001,2)
		if Counts = 1 OR PerCounts = 1  then TableDoc.Default.CellItems.AddNew(&H0000,0)
		TableDoc.Default.Properties["AutoUnweightedBases"] = False
		TableDoc.Default.Annotations.ClearAll()
		
		TableDoc.Global.Clear()
		With TableDoc.Global      
		   .Annotations[0].Specification = Project + " Tracking Study (" + Sample[S] + " Sample) - " + Cntry[C]
		   .Annotations[1].Specification = "{TableDescription \n}"
		   .Annotations[3].Specification = "Table: {TableNumber}"
		   .Annotations[5].Specification = "{WeightVariable \n\p}{Filters \n\p}{SortColumn \n\p}{Statistics }"
		End With
		
		'!	Screener = 1
			PrevWt = 0
			Client = 1
			Neilsen = 0
			Counts = 1 'Use Indices in VergeAll
			PerCounts = 0
!'

		Dim PW, CL, NLS, CNTS, PCNTS
		
		PW = ""
		CL = ""
		NLS = ""
		CNTS = ""
		PCNTS = ""
		
		IF PrevWt=1 then PW = " Previous Wave Weight "
		IF Client = 1 then CL = " Client "
		IF Neilsen = 1 then NLS = " Neilsen "
		if Counts = 1 then CNTS = " Counts "
		if PerCounts = 1 then PCNTS = " Percents and Counts "
		
		EXPORT_FILE = PW + CL + NLS + CNTS + PCNTS
		
		'----------------------------
		'Global Filters				'
		'----------------------------
		
'		If Sample[S] = "General" then TableDoc.Global.Filters.AddNew("Sample", "Sample_Type.ContainsAny({General})")
'		If Sample[S] = "Parent" then TableDoc.Global.Filters.AddNew("Sample", "Sample_Type.ContainsAny({Parent})")

'		if Cntry[C] = "US" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({United_States})")
'		if Cntry[C] = "UK" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({United_Kingdom})")
'		if Cntry[C] = "FR" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({France})")
'		if Cntry[C] = "DE" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({Germany})")
'		if Cntry[C] = "ES" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({Spain})")
'		if Cntry[C] = "MX" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({Mexico})")
'		if Cntry[C] = "BR" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({Brazil})")
'		if Cntry[C] = "RU" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({Russia})")
'		if Cntry[C] = "CN" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({China})")
'		if Cntry[C] = "JP" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({Japan})")
'		if Cntry[C] = "KR" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({South_Korea})")
'		if Cntry[C] = "HK" then TableDoc.Global.Filters.AddNew("Terr", "TerrCheck.ContainsAny({Hong_Kong})")		
		
		'*******************************************'
		'	Create Banner(s)						'
		'*******************************************'
		
		Set AxisTop = TableDoc.Axes.AddNew("TopBanner") 
		Set AxisSide = TableDoc.Axes.AddNew("SideBanner")
		
		'---------------
		'Top Banner
		'---------------
		'Temp banner for building tabs
'		AxisTop.Specification = "Overall + Gender"
		
'		if C = 0 then 
'			if S = 1 then AxisTop.Specification = "Overall + Country + GenderG + Country as C2 > GenderG + Age5 + Age5gen +  Quads + Age2 + Country as C3 > Age2 + IntEp8 + SWFan + SegA + Seg2 + Seg1 + CompFan + TFAView + OldSW + RateBan + ROInt + Action + Adventure + SciFi + Super + Hollywood"
'			if S = 2 then AxisTop.Specification = "Overall + Country + GenderP + Country as C2 > GenderP + GenderK + AgeK + AgeGenK + pIntEp8 + SWFan + SegA + Seg2 + Seg1 + CompFan + TFAView + OldSW + pOldSW + RateBan + ROInt + Action + Adventure + SciFi + Super + Hollywood"
'		end if
		
		if C = 1 then 
			if S = 1 then AxisTop.Specification = "Overall + GenderG + Age2 + Quads + Age5 + Age5gen + OtherAge +  ParBan + Race + Money + Student + EquipOwn + TVSum + PlatUse + DevUse + NetflixUse + HuluUse + AmazonUse + MultStrmUse + SubType + PayTVProv + CordType + Sports + TVEvUse + YTFreq + StreamOrigSeen + ModulesCompletes + q_panel + HHNumb"
			if S = 2 then AxisTop.Specification = "OverallC + GenderG + Age6gen + Age9 + Age2{base() [IsHidden = TRUE],..} + ParBan + RaceBan 'Race' + Money + Student + YTFreqClient + TVSum + PlatUseClient + EquipOwn + PayTVSVOD + DevUseClient + ContView + PayTVSubType + PayTVNonSubA + HHLifeChange +  ModulesClient"
			if S = 1 AND Client = 1 then AxisTop.Specification =  "OverallC + GenderG + Age6gen + Age9  + Age2{base() [IsHidden = TRUE],..} + ParBan + RaceBan 'Race' + Money + Student + HouseNum + HHStatA + HHStatB + HHStatC + SportsBan + YTFreqClient + YTRedUse + TVSum + PlatUseClient + EquipOwn + NetflixUse + HuluUse + AmazonUse + PayTVSVOD + DevUseClient + ContView + PayTVSubType + PayTVNonSubA + CordType + HHLifeChange + CommercAtt + TVEvUseC +  ModulesClient + SVODTenure + ATTCust + HHNumb "
		end if
'		
'		if C > 1 then 
'			if S = 1 then AxisTop.Specification = "Overall + GenderG + Age5 + Age5gen +  Quads + Age2 + IntEp8 + SWFan + SegA + Seg2 + Seg1 + CompFan + TFAView + OldSW + RateBan + ROInt + Action + Adventure + SciFi + Super + Hollywood"
'			if S = 2 then AxisTop.Specification = "Overall + GenderP + GenderK + AgeK + AgeGenK + pIntEp8 + SWFan + SegA + Seg2 + Seg1 + CompFan + TFAView + OldSW + pOldSW + RateBan + ROInt + Action + Adventure + SciFi + Super + Hollywood"
'		end if
		
		'-----------------------------------------
		'Side Banner for Banner X Banner (Table1)
		'-----------------------------------------
'		if C = 0 then 
'			if S = 1 then AxisSide.Specification = "Overall2 + Country + GenderG + Age5 + Age5gen +  Quads + Age2 + IntEp8 + SWFan + SegA + Seg2 + Seg1 + CompFan + TFAView + OldSW + RateBan + ROInt + Action + Adventure + SciFi + Super + Hollywood"
'			if S = 2 then AxisSide.Specification = "Overall2 + Country + GenderP + GenderK + AgeK + AgeGenK + pIntEp8 + SWFan + SegA + Seg2 + Seg1 + CompFan + TFAView + OldSW + pOldSW + RateBan + ROInt + Action + Adventure + SciFi + Super + Hollywood"
'		end if
		
		If C > 0 then 
			AxisSide.Specification = AxisTop.Specification
			AxisSide.SubAxes.Remove(0)			
			AxisSide.Specification = "Overall2 +" + AxisSide.Specification
		end if
		
		'----------------------------
		'Create Tables				'
		'----------------------------
		
		Dim i, Ttl[], Amg[], QRE[], Banner, var[], ListNum, SortCol, we, OEList[], WgtVar, GridBanner, Brands[], Titl
	
		SortCol = "first"
		if PrevWt = 0 then WgtVar = "weight"	
		if PrevWt = 1 then WgtVar = "weightM"		
		if Neilsen = 1 then WgtVar = "weightUE"
		
		With TableDoc
		
			Banner = "Axis(TopBanner)"
			
			Ttl[1] = "Banner"
			QRE[1] = "Banner"
			Amg[1] = "All"
			Var[1] = "Axis(SideBanner)"
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
			
	if PrevWt = 0 then 	
	
			Amg[2] = "Pay TV Subscribers (Excluding IPTV)"
			Amg[3] = "Pay TV Non-Subscribers (Excluding IPTV)"
			Amg[4] = "Pay TV Subscribers (Including IPTV) "
			Amg[5] = "Pay TV Non-Subscribers (Including IPTV)"
			Amg[6] = "Cord Nevers"
			Amg[7] = "Cord Cutters"
			Amg[8] = "Used TV Everywhere P3M" 
			Amg[9] = "Have Cable, Satellite, or Fiber TV Service"
			Amg[10] = "Own 2+ of: TV, Tablet, Smartphone, or Computer "
			Amg[11] = "Watched Video Content on Social Media P3M"
			Amg[12] = "Own 1+ of: TV, Tablet, Smartphone, or Computer"
			
			QRE[1] = "Parent, Kids, KidAgeGen"
			Ttl[1] = "Parent Status"
			If Client = 0 then Amg[1] = "17+/Parents"
			If Client = 1 then Amg[1] = "All/Parents"
			If Client = 0 then Var[1] = "Parent + Kids{base (), e1 '1' expression('Kids=1'), e2 '2' expression('Kids=2'),e3 '3' expression('Kids=3'), e4 '4+ ' expression('Kids=>4')} + KidAgeGen"
			If Client = 1 then Var[1] = "Parent{base(), Yes, No [IsHidden=True], eExpression 'No' expression('PARENT.ContainsAny({No}) Or Age < 18')} + Kids{base (), e1 '1' expression('Kids=1'), e2 '2' expression('Kids=2'),e3 '3' expression('Kids=3'), e4 '4+ ' expression('Kids=>4')} + KidAgeGen"
			MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				
			QRE[1] = "S12_Internet"
			Ttl[1] = "Internet Connection"
			Amg[1] = "All"
			Var[1] = QRE[1]
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
			
			QRE[1] = "S13_TVService"
			Ttl[1] = "TV Service Type"
			Amg[1] = "All"
			Var[1] = QRE[1]
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
			
			QRE[1] = "TVServiceDV, TVServiceDVB"
			Ttl[1] = "TV Reception Autocodes"
			Amg[1] = "All"
			Var[1] = RemCom(QRE[1])
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				
			QRE[1] = "S14_PayB"
			Ttl[1] = "Nevers vs. Cutters"
			Var[1] = QRE[1]
				MakeTab(var[1], Banner, Amg[3], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
			
			ListNum = 9
			
			QRE[1] = "S15_Equipment"
			Ttl[1] = "Equipment in Household"
			Amg[1] = "All"
			Var[1] = ListVars(QRE[1], ListNum)
				'MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
			Var[1] = ListVarsByBox(QRE[1], 3)
			Ttl[1] = Ttl[1] + " (By Box)"
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")

			ListNum = 6
			
			QRE[1] = "S16_ContentP3M"
			Ttl[1] = "Device Used for Content P3M"
			Amg[1] = "All"
			Var[1] = ListVars(QRE[1], ListNum) + " + " + "ContentP3MNet"
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
			Ttl[0] = Ttl[1] + " (By Box)"
			Var[1] = "S16_ContentP3M" + "_T4B '%Any Portable Device'" + "+" +  "S16_ContentP3M" + "_MB '%Mobile Device (Smartphone, Tablet)'" + "+" +  ListVarsByBox(QRE[1], 7)
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[0], TableDoc, 1, "first", 0, "None")
			Amg[1] = "Has Device"	
			Var[1] = "S16_ContentP3M_T4B{base('S15_Equipment5.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment6.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment8.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months})'), S16_ContentP3M1, S16_ContentP3M2, S16_ContentP3M3, S16_ContentP3M4, S16_ContentP3M5, S16_ContentP3M6} '%Any Portable Device' + S16_ContentP3M_MB{base('S15_Equipment5.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment6.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment8.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months})'), S16_ContentP3M1, S16_ContentP3M2, S16_ContentP3M3, S16_ContentP3M4, S16_ContentP3M5, S16_ContentP3M6} '%Mobile Device (Smartphone, Tablet)' + S16_ContentP3M_TB{base('S15_Equipment1.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment2.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment3.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment4.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment7.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months})'), S16_ContentP3M1, S16_ContentP3M2, S16_ContentP3M3, S16_ContentP3M4, S16_ContentP3M5, S16_ContentP3M6} + S16_ContentP3M_2B{base('S15_Equipment8.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months})'), S16_ContentP3M1, S16_ContentP3M2, S16_ContentP3M3, S16_ContentP3M4, S16_ContentP3M5, S16_ContentP3M6} + S16_ContentP3M_3B{base('S15_Equipment6.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months})'), S16_ContentP3M1, S16_ContentP3M2, S16_ContentP3M3, S16_ContentP3M4, S16_ContentP3M5, S16_ContentP3M6} + S16_ContentP3M_4B{base('S15_Equipment5.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months})'), S16_ContentP3M1, S16_ContentP3M2, S16_ContentP3M3, S16_ContentP3M4, S16_ContentP3M5, S16_ContentP3M6} + S16_ContentP3M_5B{base('S15_Equipment9.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months})'), S16_ContentP3M1, S16_ContentP3M2, S16_ContentP3M3, S16_ContentP3M4, S16_ContentP3M5, S16_ContentP3M6} + S16_ContentP3M_6B + S16_ContentP3M_7B"
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[0], TableDoc, 1, "first", 0, "None")	

			ListNum = 24

			QRE[1] = "S17_PlatformP3M"
			Ttl[1] = "Platforms Used in P3M"
			Amg[1] = "Own TV, Tablet, Smartphone, and/or Computer"
			Var[1] = ListVarsPlatform(QRE[1], 1, ListNum) + "+PlatP3ME+PlatP3MB"
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
'			Ttl[1] = Ttl[1] + " (without items 3, 10, 18, 19)"
'			Var[1] = ListVarsPlatform(QRE[1], 1, 2) + " + " + ListVarsPlatform(QRE[1], 4, 9) + " + " + ListVarsPlatform(QRE[1], 11, 17)
'				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
			Ttl[0] = "Platforms Used in P3M (By Box)"
			Var[1] = QRE[1] + "_T4B '% on TV, Computer, Tablet or Smartphone'" + " + " + QRE[1] + "_MB" + " + " + ListVarsByBoxPlat338(QRE[1], 5)
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[0], TableDoc, 1, "first", 0, "None")	
			Ttl[0] = Ttl[1] + " Grid"
			GridBanner = QRE[1] + "{base(), S17_PlatformP3M1, S17_PlatformP3M10, S17_PlatformP3M15, S17_PlatformP3M16, S17_PlatformP3M17, S17_PlatformP3M18, S17_PlatformP3M2, S17_PlatformP3M3, S17_PlatformP3M6, S17_PlatformP3M7, S17_PlatformP3M8, S17_PlatformP3M11 'Through a Netflix subscription ', S17_PlatformP3M12 'Through a Hulu subscription', S17_PlatformP3M13 'Through an Amazon Prime subscription ', S17_PlatformP3M14 'Through another paid subscription streaming service (e.g. CBS All Access, HBO Now, or Showtime (the standalone service))', S17_PlatformP3M9, S17_PlatformP3M4 'Using Video On Demand for free with commercials through my TV provider’s set-top box ', S17_PlatformP3M5 'Using Video On Demand through your subscription to premium channels (e.g. HBO or Showtime) ', S17_PlatformP3M21 [IsFixed=True], S17_PlatformP3M22 [IsFixed=True], S17_PlatformP3M23 [IsFixed=True], S17_PlatformP3M24 [IsFixed=True], comb1 'Net : SVOD' combine({S17_PlatformP3M11 'Through a Netflix subscription ', S17_PlatformP3M12 'Through a Hulu subscription', S17_PlatformP3M13 'Through an Amazon Prime subscription ', S17_PlatformP3M14 'Through another paid subscription streaming service (e.g. CBS All Access, HBO Now, or Showtime (the standalone service))'}) [IsFixed=True], 'Net : VOD through TV Provider' net({S17_PlatformP3M4 'Using Video On Demand for free with commercials through my TV provider’s set-top box ' [IsHidden=True], S17_PlatformP3M5 'Using Video On Demand through your subscription to premium channels (e.g. HBO or Showtime) ' [IsHidden=True]}) [IsFixed=True]}"
			Var[1] = QRE[1] + "[..].Column{base(), 'On a TV, Computer, Tablet or Smartphone' net({On_a_TV 'On a TV', On_a_computer 'On a computer', Net45 'Mobile Device' net({On_a_tablet 'On a tablet', On_a_smartphone 'On a smartphone'})}), None_of_these}"
				MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")	
				.Tables[TableDoc.Tables.Count-1].Level = "HDATA"
			Amg[1] = "All"
			Var[1] = ListVarsOvPlatform(QRE[1], ListNum)
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
			Ttl[0] = Ttl[1] + " (By Box)"
			Var[1] = QRE[1] + "_T4B{base('Overall=1'), .., S17_PlatformP3M19 [isFixed = True], S17_PlatformP3M20 [isFixed = True] , S17_PlatformP3M21 [IsFixed = TRUE], S17_PlatformP3M22 [IsFixed = TRUE], S17_PlatformP3M23 [IsFixed = TRUE], S17_PlatformP3M24 [IsFixed = TRUE]}" + " + " + QRE[1] + "_MB{base('Overall=1'), .., S17_PlatformP3M19 [isFixed = True], S17_PlatformP3M20 [isFixed = True] , S17_PlatformP3M21 [IsFixed = TRUE], S17_PlatformP3M22 [IsFixed = TRUE], S17_PlatformP3M23 [IsFixed = TRUE], S17_PlatformP3M24 [IsFixed = TRUE]}" + " + " + ListVarsByBoxPlatOv(QRE[1], 5)
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[0], TableDoc, 1, "first", 0, "None")	
			Ttl[0] = Ttl[1] + " Grid"
			GridBanner = QRE[1] + "{base(), S17_PlatformP3M1, S17_PlatformP3M10, S17_PlatformP3M15, S17_PlatformP3M16, S17_PlatformP3M17, S17_PlatformP3M18, S17_PlatformP3M2, S17_PlatformP3M3, S17_PlatformP3M6, S17_PlatformP3M7, S17_PlatformP3M8, S17_PlatformP3M11 'Through a Netflix subscription ', S17_PlatformP3M12 'Through a Hulu subscription', S17_PlatformP3M13 'Through an Amazon Prime subscription ', S17_PlatformP3M14 'Through another paid subscription streaming service (e.g. CBS All Access, HBO Now, or Showtime (the standalone service))', S17_PlatformP3M9, S17_PlatformP3M4 'Using Video On Demand for free with commercials through my TV provider’s set-top box ', S17_PlatformP3M5 'Using Video On Demand through your subscription to premium channels (e.g. HBO or Showtime) ', S17_PlatformP3M21 [IsFixed=True], S17_PlatformP3M22 [IsFixed=True], S17_PlatformP3M23 [IsFixed=True], S17_PlatformP3M24 [IsFixed=True], comb1 'Net : SVOD' combine({S17_PlatformP3M11 'Through a Netflix subscription ', S17_PlatformP3M12 'Through a Hulu subscription', S17_PlatformP3M13 'Through an Amazon Prime subscription ', S17_PlatformP3M14 'Through another paid subscription streaming service (e.g. CBS All Access, HBO Now, or Showtime (the standalone service))'}) [IsFixed=True], 'Net : VOD through TV Provider' net({S17_PlatformP3M4 'Using Video On Demand for free with commercials through my TV provider’s set-top box ' [IsHidden=True], S17_PlatformP3M5 'Using Video On Demand through your subscription to premium channels (e.g. HBO or Showtime) ' [IsHidden=True]}) [IsFixed=True]}"
			Var[1] = QRE[1] + "[..].Column{base('^.Overall=1'), 'On a TV, Computer, Tablet or Smartphone' net({On_a_TV 'On a TV', On_a_computer 'On a computer', Net45 'Mobile Device' net({On_a_tablet 'On a tablet', On_a_smartphone 'On a smartphone'})}), None_of_these}"
				MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")				
				.Tables[TableDoc.Tables.Count-1].Level = "HDATA"
				
			QRE[1] = "S18_ShowView"
			Ttl[1] = "Shows Watched Regularly"
			Amg[1] = "All"
			Var[1] = QRE[1] + "{Base(),..,None_of_these [IsFixed = TRUE]}"
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
			Ttl[0] = Ttl[1] + " - Type Nets"
			Var[1] = QRE[1] + "{base(), comb1 'Net : Broadcast' combine({ARROW, BLACK_ISH, BROOKLYN_NINE_NINE, CHICAGO_FIRE, CRIMINAL_MINDS, EMPIRE, GREAT_BRITISH_BAKE_OFF, GREY_S_ANATOMY, KEVIN_CAN_WAIT, LETHAL_WEAPON, LITTLE_BIG_SHOTS, MODERN_FAMILY, NCIS, NEW_GIRL, QUANTICO, SCANDAL, SUPERGIRL, SURVIVOR, THE_BACHELOR, THE_BIG_BANG_THEORY, THE_BLACKLIST, THE_FLASH, THE_GOLDBERGS, THE_VOICE, THIS_IS_US}), comb2 'Net : Streaming' combine({BOSCH, FULLER_HOUSE, HOUSE_OF_CARDS, ORANGE_IS_THE_NEW_BLACK,  STRANGER_THINGS, THE_HANDMAID_S_TALE, THE_RANCH, TRANSPARENT, ULTIMATE_BEAST_MASTER}), comb3 'Net : Premium' combine({GAME_OF_THRONES, GIRLS,  SILICON_VALLEY, THE_AFFAIR, VEEP, WESTWORLD}), 'Net : Cable' combine({AMERICAN_DAD, AMERICAN_HORROR_STORY, ANGIE_TRIBECA, ANIMAL_KINGDOM, BEING_MARY_JANE, CLAWS, GOLD_RUSH, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA,  LOVE_HIP_HOP, PRETTY_LITTLE_LIARS,  QUEEN_SUGAR,  SOUTH_PARK,  SUITS, TEEN_MOM, THE_DETOUR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_WALKING_DEAD, VIKINGS, WRECKED}), None_of_these [IsFixed = TRUE]} 'Shows'"
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
			Ttl[0] = Ttl[1] + " - Genre 1  Nets"
			Var[1] = QRE[1] + "{base(), comb2 'Net : Unscripted' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS,  LOVE_HIP_HOP, SURVIVOR, TEEN_MOM, THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Drama' combine({AMERICAN_HORROR_STORY, ANIMAL_KINGDOM, ARROW, BEING_MARY_JANE, BOSCH, CHICAGO_FIRE, CLAWS, CRIMINAL_MINDS, EMPIRE, GAME_OF_THRONES, GREY_S_ANATOMY, HOUSE_OF_CARDS, LETHAL_WEAPON, NCIS, PRETTY_LITTLE_LIARS, QUANTICO,  QUEEN_SUGAR, SCANDAL,  STRANGER_THINGS,  SUITS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), 'Net : Comedy' combine({AMERICAN_DAD, ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT, MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK,  SILICON_VALLEY,  SOUTH_PARK, THE_BIG_BANG_THEORY, THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED}), None_of_these [IsFixed = TRUE]} 'Shows'"
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
			Ttl[0] = Ttl[1] + " - Genre 2  Nets"
			Var[1] = QRE[1] + "{base(), ARROW 'Superhero : ARROW', INSIDE_AMY_SCHUMER 'Not Animated : INSIDE AMY SCHUMER', comb10 'Net : Animated' combine({AMERICAN_DAD, SOUTH_PARK}), comb3 'Net : Procedural' combine({CHICAGO_FIRE,CRIMINAL_MINDS, GREY_S_ANATOMY,LETHAL_WEAPON, NCIS, SUITS}), comb4 'Net : Other (Unscripted)' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS, LOVE_HIP_HOP, SURVIVOR, TEEN_MOM,  THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA,THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Serialized' combine({AMERICAN_HORROR_STORY,ANIMAL_KINGDOM, BEING_MARY_JANE, BOSCH, CLAWS, EMPIRE, GAME_OF_THRONES, HOUSE_OF_CARDS, PRETTY_LITTLE_LIARS, QUANTICO, QUEEN_SUGAR, SCANDAL, STRANGER_THINGS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), comb2 'Net : Sitcom' combine({ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT,MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK, SILICON_VALLEY, THE_BIG_BANG_THEORY,THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED}), None_of_these [IsFixed = TRUE]} 'Shows'"	
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")

			QRE[1] = "S20_ShortVidP3M"
			Ttl[1] = "Social Media/Platforms Where Watched Video Content P3M"
			Amg[1] = "All"
			Var[1] = QRE[1]
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				
			QRE[1] = "S21_HouseholdA, S22_HouseholdB, S23_LifeEvents"
			Ttl[1] = "Living Situation and Major Life Events P6M"
			Amg[1] = "All"
			Var[1] = RemCom(QRE[1])
				MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")

end if	

if Screener <> 1 then ExportTables("Weighted", TableDoc, Project, Sample[S], Cntry[C] +EXPORT_FILE + " part 1")

if S = 1 AND PrevWt = 0 then 

				ListNum = 4		
							
				QRE[1] = "NumTVType, SumTVType, NumTVPay"			
				Ttl[1] = "TVs in HH"
				Amg[1] = "Own TV"
				Var[1] = ListVars("NumTVType", ListNum) + "+" + "!
					SUMTVType
					+ NumTVPay
					!"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					'{base(), eMean 'Mean' mean(SUMTVType), eMinimum 'Minimum' min(SUMTVType), eMaximum 'Maximum' max(SUMTVType), eStdDev 'Standard deviation' stddev(SUMTVType)}
					'{base(), eMean 'Mean' mean(NumTVPay), eMinimum 'Minimum' min(NumTVPay), eMaximum 'Maximum' max(NumTVPay), eStdDev 'Standard deviation' stddev(NumTVPay)}
				Amg[1] = "All"
				Var[1] = ListVarsOv("NumTVType", ListNum) + "+" + "!
					SUMTVTypeA{base(), eMean 'Mean' mean(SUMTVTypeA), eMinimum 'Minimum' min(SUMTVTypeA), eMaximum 'Maximum' max(SUMTVTypeA), eStdDev 'Standard deviation' stddev(SUMTVTypeA)}
					+ NumTVPayA{base(), eMean 'Mean' mean(NumTVPayA), eMinimum 'Minimum' min(NumTVPayA), eMaximum 'Maximum' max(NumTVPayA), eStdDev 'Standard deviation' stddev(NumTVPayA)}
					!"
					'MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
				QRE[1] = "S25_StreamDevice, S26_ConsoleType, S27_TabletType, S28_SmartphoneType"
				Ttl[1] = "Streaming Device/Console/Tablet/Smartphone Type"
				Amg[1] = "Own Device"
				Var[1] = RemCom(QRE[1]) 
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")				
'				Amg[1] = "All"
'				Var[1] = RemComOv(QRE[1])
'					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
					
				ListNum = 19
					
				QRE[1] = "S29_StreamUse"
				Ttl[1] = "Streaming Service Usage"
				Amg[1] = "All"
				Var[1] = ListVars(QRE[1], ListNum) + "+ S29_StreamUseExcl{base('Overall=1'),..}"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Ttl[1] = Ttl[1] + " (By Box)"
				Var[1] = ListVarsByBox(QRE[1], 4)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")	
					
				
				Ttl[1] = "Age by Streaming Service Usage"	
				Var[2] = "Age{base(), e1 'Median Age' median(Age), e2 'Mean Age' mean(Age)}"	
					MakeTab(var[2], var[1], Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
'				ListNum = 3
'				QRE[1] = "DevicesShareB"
'				
'				Ttl[1] = "Laptop or desktop computer"
'				Ttl[2] = "My cable set-top box"
'				Ttl[3] = "Smart TV apps"
'				Ttl[4] = "Apple TV"
'				Ttl[5] = "Cables and/or software that allow me to directly connect my computer and TV"
'				Ttl[6] = "Google Chromecast for video "
'				Ttl[7] = "Roku (streaming stick or box)"
'				Ttl[8] = "TiVo HD, HDXL, Roamio, Roamio Plus or Roamio Pro"
'				Ttl[9] = "Amazon Fire TV (streaming stick or box)"
'				Ttl[10] = "Video game consoles (e.g. Xbox, PlayStation, Nintendo)"
'				Ttl[11] = "Blu-ray player"
'				Ttl[12] = "Tablet"
'				Ttl[13] = "Smartphone"
'	
'				Amg[1] = "Current User and Owns Device"
'				for i = 1 to 13
'					Titl = "Share of Time Streaming Services on " + Ttl[i]
'					Var[1] = ListVarsShare(QRE[1] + makestring(i) + "_", ListNum)
'					MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 0, "None")
'				
'				next	

				ListNum = 16
				QRE[1] = "DevicesShareB"
				
				Ttl[1] = "Netflix"
				Ttl[2] = "Hulu"
				Ttl[3] = "Amazon"
				Amg[1] = "Current User and Owns Device"
				for i = 1 to 3
					Titl = "Share of Time Streaming " + Ttl[i] + " by Platform"
					Var[1] = ListVarsShare(QRE[1] + "N" + makestring(i) + "_", ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 0, "S29_StreamUse1.ContainsAny({I_currently_use_this}) Or S29_StreamUse2.ContainsAny({I_currently_use_this}) Or S29_StreamUse3.ContainsAny({I_currently_use_this})")
				
				next
								
				GridBanner = "DevicesShareGrid"
				Ttl[1] = "Share of Time Streaming Grid"
				Var[1] = GridBanner + "[..].E1 + " + GridBanner + "[..].E2 + " + GridBanner + "[..].E3"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 1, "S29_StreamUse1.ContainsAny({I_currently_use_this}) or S29_StreamUse2.ContainsAny({I_currently_use_this}) or S29_StreamUse3.ContainsAny({I_currently_use_this})")

				Ttl[1] = "Netflix"
				Ttl[2] = "Hulu"
				Ttl[3] = "Amazon"					
				Amg[1] = "Current Users"
				for i = 1 to 3
					Titl = "Share of Time Streaming " + Ttl[i] + " by Platform (Rebased)"
					Var[1] = ListVarsShare(QRE[1] + "AN" + makestring(i) + "_", ListNum)
					if i = 1 Then MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 1, "S29_StreamUse1.ContainsAny({I_currently_use_this})")
					if i = 2 Then MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 1, "S29_StreamUse2.ContainsAny({I_currently_use_this})")
					if i = 3 Then MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 1, "S29_StreamUse3.ContainsAny({I_currently_use_this})")
				
				next
				
				GridBanner = "DevicesShareAGrid"
				Ttl[1] = "Share of Time Streaming Grid (Rebased)"
				Var[1] = GridBanner + "[..].E1 + " + GridBanner + "[..].E2 + " + GridBanner + "[..].E3"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 1, "S29_StreamUse1.ContainsAny({I_currently_use_this}) Or S29_StreamUse2.ContainsAny({I_currently_use_this}) Or S29_StreamUse3.ContainsAny({I_currently_use_this})")	
				
				
				
				
				
				QRE[1] = "S31_NetflixSub, S32_HuluSubA, S33_HuluSubB, S34_AmazonSubA, S35_AmazonSubB"
				Ttl[1] = "Type of Netflix/Hulu/Amazon Prime Subscription"
				Amg[1] = "Current Users/Aware"
				Var[1] = RemCom(QRE[1])
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					            
	            QRE[1] = "NumStrmSub"
				Ttl[1] = "Number of Current Streaming Subscriptions"
				Amg[1] = "All"
				Var[1] = "!
					NumStrmSub{base(), eMean 'Mean' mean(S41_MaxStreamSub), eMin 'Min' min(S41_MaxStreamSub), eMax 'Max' max(S41_MaxStreamSub), eStddev 'Standard Deviation' stddev(S41_MaxStreamSub), eMedian 'Median' median(S41_MaxStreamSub), _1To50 '1+' expression('S41_MaxStreamSub >= 1 AND S41_MaxStreamSub <= 50'), _2To50 '2+' expression('S41_MaxStreamSub >= 2 AND S41_MaxStreamSub <= 50'), _3To50 '3+' expression('S41_MaxStreamSub >= 3 AND S41_MaxStreamSub <= 50'), _5To50 '5+' expression('S41_MaxStreamSub >= 5 AND S41_MaxStreamSub <= 50'), _10To50 '10+' expression('S41_MaxStreamSub >= 10 AND S41_MaxStreamSub <= 50')}
						!"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")            
					
				ListNum = 19
'			Duplicate?
'				QRE[1] = "S36_SVODJoin"
'				Ttl[1] = "When Join Streaming Services"
'				Amg[1] = "Ever Used"
'				Var[1] = ListVarsSVODA(QRE[1], ListNum)
'					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")

				QRE[1] = "S36_SVODJoin"				
				Ttl[1] = "When Join Streaming Services"
				Amg[1] = "Ever Used"
				Var[1] = ListVarsSVODA(QRE[1], ListNum) + "+ S36_SVODJoin20{base('S36_SVODJoin1 is not null or S36_SVODJoin2 is not null or S36_SVODJoin3 is not null'), eDerived 'Net : Less than a year' derived('(eST1+eST2+eST3)/eTotal1 + (fST1+fST2+fST3)/eTotal1') [Decimals=4], eD1 'AVG: Within the past six months' derived('(eST1+eST2+eST3)/eTotal1') [Decimals=4], fD1 'AVG: Six months to less than 1 year ago' derived('(fST1+fST2+fST3)/eTotal1') [Decimals=4], eDerived1 'Net : More than a year' derived('(gST1+gST2+gST3)/eTotal1 + (hST1+hST2+hST3)/eTotal1+ (iST1+iST2+iST3)/eTotal1') [Decimals=4], gD1 'AVG: 1 year to less than 3 years ago' derived('(gST1+gST2+gST3)/eTotal1') [Decimals=4], hD1 'AVG: 3 years to less than 7 years ago' derived('(hST1+hST2+hST3)/eTotal1') [Decimals=4], iD1 'AVG: 7 or more years ago' derived('(iST1+iST2+iST3)/eTotal1') [Decimals=4], e1 'Netflix=1' expression('S36_SVODJoin1.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST1 'Subtotal-eST1' subtotal() [IsHidden=True], e2 'Hulu=1' expression('S36_SVODJoin2.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST2 'Subtotal-eST2' subtotal() [IsHidden=True], e3 'Amazon=1' expression('S36_SVODJoin3.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST3 'Subtotal-eST3' subtotal() [IsHidden=True], f1 'Netflix=2' expression('S36_SVODJoin1.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST1 'Subtotal-fST1' subtotal() [IsHidden=True], f2 'Hulu=2' expression('S36_SVODJoin2.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST2 'Subtotal-fST2' subtotal() [IsHidden=True], f3 'Amazon=2' expression('S36_SVODJoin3.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST3 'Subtotal-fST3' subtotal() [IsHidden=True], g1 'Netflix=3' expression('S36_SVODJoin1.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST1 'Subtotal-gST1' subtotal() [IsHidden=True], g2 'Hulu=3' expression('S36_SVODJoin2.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST2 'Subtotal-gST2' subtotal() [IsHidden=True], g3 'Amazon=3' expression('S36_SVODJoin3.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST3 'Subtotal-gST3' subtotal() [IsHidden=True], h1 'Netflix=4' expression('S36_SVODJoin1.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST1 'Subtotal-hST1' subtotal() [IsHidden=True], h2 'Hulu=4' expression('S36_SVODJoin2.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST2 'Subtotal-hST2' subtotal() [IsHidden=True], h3 'Amazon=4' expression('S36_SVODJoin3.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST3 'Subtotal-hST3' subtotal() [IsHidden=True], i1 'Netflix=5' expression('S36_SVODJoin1.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST1 'Subtotal-iST1' subtotal() [IsHidden=True], i2 'Hulu=5' expression('S36_SVODJoin2.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST2 'Subtotal-iST2' subtotal() [IsHidden=True], i3 'Amazon=5' expression('S36_SVODJoin3.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST3 'Subtotal-iST3' subtotal() [IsHidden=True], eBase1 'Base' base() [IsHidden=True], eb1 'Netflix Base' expression('S36_SVODJoin1 Is Not Null') [IsHidden=True], eb2 'Hulu Base' expression('S36_SVODJoin2 Is Not Null') [IsHidden=True], eb3 'Amazon Base' expression('S36_SVODJoin3 Is Not Null') [IsHidden=True], eTotal1 'eTotal1' subtotal() [IsHidden=True]}"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")											
				Amg[1] = "Current Users of Each Service"	
				Var[1] = ListVarsSVODA(QRE[1] + "CU", ListNum) + " + S36_SVODJoin20CU{base('S36_SVODJoinCU1 is not null or S36_SVODJoinCU2 is not null or S36_SVODJoinCU3 is not null'), eDerived 'Net : Less than a year' derived('(eST1+eST2+eST3)/eTotal1 + (fST1+fST2+fST3)/eTotal1') [Decimals=4], eD1 'AVG: Within the past six months' derived('(eST1+eST2+eST3)/eTotal1') [Decimals=4], fD1 'AVG: Six months to less than 1 year ago' derived('(fST1+fST2+fST3)/eTotal1') [Decimals=4], eDerived1 'Net : More than a year' derived('(gST1+gST2+gST3)/eTotal1 + (hST1+hST2+hST3)/eTotal1+ (iST1+iST2+iST3)/eTotal1') [Decimals=4], gD1 'AVG: 1 year to less than 3 years ago' derived('(gST1+gST2+gST3)/eTotal1') [Decimals=4], hD1 'AVG: 3 years to less than 7 years ago' derived('(hST1+hST2+hST3)/eTotal1') [Decimals=4], iD1 'AVG: 7 or more years ago' derived('(iST1+iST2+iST3)/eTotal1') [Decimals=4], e1 'Netflix=1' expression('S36_SVODJoinCU1.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST1 'Subtotal-eST1' subtotal() [IsHidden=True], e2 'Hulu=1' expression('S36_SVODJoinCU2.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST2 'Subtotal-eST2' subtotal() [IsHidden=True], e3 'Amazon=1' expression('S36_SVODJoinCU3.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST3 'Subtotal-eST3' subtotal() [IsHidden=True], f1 'Netflix=2' expression('S36_SVODJoinCU1.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST1 'Subtotal-fST1' subtotal() [IsHidden=True], f2 'Hulu=2' expression('S36_SVODJoinCU2.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST2 'Subtotal-fST2' subtotal() [IsHidden=True], f3 'Amazon=2' expression('S36_SVODJoinCU3.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST3 'Subtotal-fST3' subtotal() [IsHidden=True], g1 'Netflix=3' expression('S36_SVODJoinCU1.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST1 'Subtotal-gST1' subtotal() [IsHidden=True], g2 'Hulu=3' expression('S36_SVODJoinCU2.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST2 'Subtotal-gST2' subtotal() [IsHidden=True], g3 'Amazon=3' expression('S36_SVODJoinCU3.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST3 'Subtotal-gST3' subtotal() [IsHidden=True], h1 'Netflix=4' expression('S36_SVODJoinCU1.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST1 'Subtotal-hST1' subtotal() [IsHidden=True], h2 'Hulu=4' expression('S36_SVODJoinCU2.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST2 'Subtotal-hST2' subtotal() [IsHidden=True], h3 'Amazon=4' expression('S36_SVODJoinCU3.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST3 'Subtotal-hST3' subtotal() [IsHidden=True], i1 'Netflix=5' expression('S36_SVODJoinCU1.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST1 'Subtotal-iST1' subtotal() [IsHidden=True], i2 'Hulu=5' expression('S36_SVODJoinCU2.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST2 'Subtotal-iST2' subtotal() [IsHidden=True], i3 'Amazon=5' expression('S36_SVODJoinCU3.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST3 'Subtotal-iST3' subtotal() [IsHidden=True], eBase1 'Base' base() [IsHidden=True], eb1 'Netflix Base' expression('S36_SVODJoinCU1 Is Not Null') [IsHidden=True], eb2 'Hulu Base' expression('S36_SVODJoinCU2 Is Not Null') [IsHidden=True], eb3 'Amazon Base' expression('S36_SVODJoinCU3 Is Not Null') [IsHidden=True], eTotal1 'eTotal1' subtotal() [IsHidden=True]}"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Amg[1] = "Lapsed Users of Each Service"	
				Var[1] = ListVarsSVODA(QRE[1] + "LU", ListNum) + " + S36_SVODJoin20LU{base('S36_SVODJoinLU1 is not null or S36_SVODJoinLU2 is not null or S36_SVODJoinLU3 is not null'), eDerived 'Net : Less than a year' derived('(eST1+eST2+eST3)/eTotal1 + (fST1+fST2+fST3)/eTotal1') [Decimals=4], eD1 'AVG: Within the past six months' derived('(eST1+eST2+eST3)/eTotal1') [Decimals=4], fD1 'AVG: Six months to less than 1 year ago' derived('(fST1+fST2+fST3)/eTotal1') [Decimals=4], eDerived1 'Net : More than a year' derived('(gST1+gST2+gST3)/eTotal1 + (hST1+hST2+hST3)/eTotal1+ (iST1+iST2+iST3)/eTotal1') [Decimals=4], gD1 'AVG: 1 year to less than 3 years ago' derived('(gST1+gST2+gST3)/eTotal1') [Decimals=4], hD1 'AVG: 3 years to less than 7 years ago' derived('(hST1+hST2+hST3)/eTotal1') [Decimals=4], iD1 'AVG: 7 or more years ago' derived('(iST1+iST2+iST3)/eTotal1') [Decimals=4], e1 'Netflix=1' expression('S36_SVODJoinLU1.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST1 'Subtotal-eST1' subtotal() [IsHidden=True], e2 'Hulu=1' expression('S36_SVODJoinLU2.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST2 'Subtotal-eST2' subtotal() [IsHidden=True], e3 'Amazon=1' expression('S36_SVODJoinLU3.ContainsAny({Within_the_past_six_months})') [IsHidden=True], eST3 'Subtotal-eST3' subtotal() [IsHidden=True], f1 'Netflix=2' expression('S36_SVODJoinLU1.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST1 'Subtotal-fST1' subtotal() [IsHidden=True], f2 'Hulu=2' expression('S36_SVODJoinLU2.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST2 'Subtotal-fST2' subtotal() [IsHidden=True], f3 'Amazon=2' expression('S36_SVODJoinLU3.ContainsAny({Six_months_to_less_than_1_year_ago})') [IsHidden=True], fST3 'Subtotal-fST3' subtotal() [IsHidden=True], g1 'Netflix=3' expression('S36_SVODJoinLU1.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST1 'Subtotal-gST1' subtotal() [IsHidden=True], g2 'Hulu=3' expression('S36_SVODJoinLU2.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST2 'Subtotal-gST2' subtotal() [IsHidden=True], g3 'Amazon=3' expression('S36_SVODJoinLU3.ContainsAny({_1_year_to_less_than_3_years_ago})') [IsHidden=True], gST3 'Subtotal-gST3' subtotal() [IsHidden=True], h1 'Netflix=4' expression('S36_SVODJoinLU1.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST1 'Subtotal-hST1' subtotal() [IsHidden=True], h2 'Hulu=4' expression('S36_SVODJoinLU2.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST2 'Subtotal-hST2' subtotal() [IsHidden=True], h3 'Amazon=4' expression('S36_SVODJoinLU3.ContainsAny({_3_years_to_less_than_7_years_ago})') [IsHidden=True], hST3 'Subtotal-hST3' subtotal() [IsHidden=True], i1 'Netflix=5' expression('S36_SVODJoinLU1.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST1 'Subtotal-iST1' subtotal() [IsHidden=True], i2 'Hulu=5' expression('S36_SVODJoinLU2.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST2 'Subtotal-iST2' subtotal() [IsHidden=True], i3 'Amazon=5' expression('S36_SVODJoinLU3.ContainsAny({_7_or_more_years_ago})') [IsHidden=True], iST3 'Subtotal-iST3' subtotal() [IsHidden=True], eBase1 'Base' base() [IsHidden=True], eb1 'Netflix Base' expression('S36_SVODJoinLU1 Is Not Null') [IsHidden=True], eb2 'Hulu Base' expression('S36_SVODJoinLU2 Is Not Null') [IsHidden=True], eb3 'Amazon Base' expression('S36_SVODJoinLU3 Is Not Null') [IsHidden=True], eTotal1 'eTotal1' subtotal() [IsHidden=True]}"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "S29_StreamUse1.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse2.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse3.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse4.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse5.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse6.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse7.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse8.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse9.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse10.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse11.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse12.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse13.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse14.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse15.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse16.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse17.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse18.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse19.ContainsAny({I_used_to_use_this_but_no_longer_do})")
		
				Ttl[1] = "When Join Streaming Services (By Box)"
				Amg[1] = "Ever Used"
				'Var[1] = QRE[1] + "_T2B '%Less than a year'" + "+" + ListVarsByBox(QRE[1], 5) + "+" +  QRE[1] + "_B3B '%More than a year'"
				Var[1] = "!
						S36_SVODJoin_T2B{base() [IsHidden=True], eDerived 'Net: Netflix, Hulu, Amazon' derived('(est1+est2+est3)/eTotal') [Decimals=4], eBase 'Base' base() [IsHidden=True], eb1 'NetflixBase' expression('S36_SVODJoin1 is not null') [IsHidden=True], eb2 'HuluBase' expression('S36_SVODJoin2 is not null') [IsHidden=True], eb3 'AmazonBase' expression('S36_SVODJoin3 is not null') [IsHidden=True], eTotal 'Total' total() [IsHidden=True], b1 'Base' base('S36_SVODJoin1 is not null') [IsHidden=True], S36_SVODJoin1, est1 'Subtotal-est1' subtotal() [IsHidden=True], b2 'Base' base('S36_SVODJoin2 is not null') [IsHidden=True], S36_SVODJoin2, est2 'Subtotal-est2' subtotal() [IsHidden=True], b3 'Base' base('S36_SVODJoin3 is not null') [IsHidden=True], S36_SVODJoin3, est3 'Subtotal-est3' subtotal() [IsHidden=True], b4 'Base' base('S36_SVODJoin4 is not null') [IsHidden=True], S36_SVODJoin4, b5 'Base' base('S36_SVODJoin5 is not null') [IsHidden=True], S36_SVODJoin5, b6 'Base' base('S36_SVODJoin6 is not null') [IsHidden=True], S36_SVODJoin6, b7 'Base' base('S36_SVODJoin7 is not null') [IsHidden=True], S36_SVODJoin7, b8 'Base' base('S36_SVODJoin8 is not null') [IsHidden=True], S36_SVODJoin8, b9 'Base' base('S36_SVODJoin9 is not null') [IsHidden=True], S36_SVODJoin9, b10 'Base' base('S36_SVODJoin10 is not null') [IsHidden=True], S36_SVODJoin10, b11 'Base' base('S36_SVODJoin11 is not null') [IsHidden=True], S36_SVODJoin11, b12 'Base' base('S36_SVODJoin12 is not null') [IsHidden=True], S36_SVODJoin12, b13 'Base' base('S36_SVODJoin13 is not null') [IsHidden=True], S36_SVODJoin13, b14 'Base' base('S36_SVODJoin14 is not null') [IsHidden=True], S36_SVODJoin14, b15 'Base' base('S36_SVODJoin15 is not null') [IsHidden=True], S36_SVODJoin15, b16 'Base' base('S36_SVODJoin16 is not null') [IsHidden=True], S36_SVODJoin16, b17 'Base' base('S36_SVODJoin17 is not null') [IsHidden=True], S36_SVODJoin17, b18 'Base' base('S36_SVODJoin18 is not null') [IsHidden=True], S36_SVODJoin18, b19 'Base' base('S36_SVODJoin19 is not null') [IsHidden=True], S36_SVODJoin19} '%Less than a year'
						+ S36_SVODJoin_TB{base() [IsHidden=True], eDerived 'Net: Netflix, Hulu, Amazon' derived('(est1+est2+est3)/eTotal') [Decimals=4], eBase 'Base' base() [IsHidden=True], eb1 'NetflixBase' expression('S36_SVODJoin1 is not null') [IsHidden=True], eb2 'HuluBase' expression('S36_SVODJoin2 is not null') [IsHidden=True], eb3 'AmazonBase' expression('S36_SVODJoin3 is not null') [IsHidden=True], eTotal 'Total' total() [IsHidden=True], b1 'Base' base('S36_SVODJoin1 is not null') [IsHidden=True], S36_SVODJoin1, est1 'Subtotal-est1' subtotal() [IsHidden=True], b2 'Base' base('S36_SVODJoin2 is not null') [IsHidden=True], S36_SVODJoin2, est2 'Subtotal-est2' subtotal() [IsHidden=True], b3 'Base' base('S36_SVODJoin3 is not null') [IsHidden=True], S36_SVODJoin3, est3 'Subtotal-est3' subtotal() [IsHidden=True], b4 'Base' base('S36_SVODJoin4 is not null') [IsHidden=True], S36_SVODJoin4, b5 'Base' base('S36_SVODJoin5 is not null') [IsHidden=True], S36_SVODJoin5, b6 'Base' base('S36_SVODJoin6 is not null') [IsHidden=True], S36_SVODJoin6, b7 'Base' base('S36_SVODJoin7 is not null') [IsHidden=True], S36_SVODJoin7, b8 'Base' base('S36_SVODJoin8 is not null') [IsHidden=True], S36_SVODJoin8, b9 'Base' base('S36_SVODJoin9 is not null') [IsHidden=True], S36_SVODJoin9, b10 'Base' base('S36_SVODJoin10 is not null') [IsHidden=True], S36_SVODJoin10, b11 'Base' base('S36_SVODJoin11 is not null') [IsHidden=True], S36_SVODJoin11, b12 'Base' base('S36_SVODJoin12 is not null') [IsHidden=True], S36_SVODJoin12, b13 'Base' base('S36_SVODJoin13 is not null') [IsHidden=True], S36_SVODJoin13, b14 'Base' base('S36_SVODJoin14 is not null') [IsHidden=True], S36_SVODJoin14, b15 'Base' base('S36_SVODJoin15 is not null') [IsHidden=True], S36_SVODJoin15, b16 'Base' base('S36_SVODJoin16 is not null') [IsHidden=True], S36_SVODJoin16, b17 'Base' base('S36_SVODJoin17 is not null') [IsHidden=True], S36_SVODJoin17, b18 'Base' base('S36_SVODJoin18 is not null') [IsHidden=True], S36_SVODJoin18, b19 'Base' base('S36_SVODJoin19 is not null') [IsHidden=True], S36_SVODJoin19} 
						+ S36_SVODJoin_2B{base() [IsHidden=True], eDerived 'Net: Netflix, Hulu, Amazon' derived('(est1+est2+est3)/eTotal') [Decimals=4], eBase 'Base' base() [IsHidden=True], eb1 'NetflixBase' expression('S36_SVODJoin1 is not null') [IsHidden=True], eb2 'HuluBase' expression('S36_SVODJoin2 is not null') [IsHidden=True], eb3 'AmazonBase' expression('S36_SVODJoin3 is not null') [IsHidden=True], eTotal 'Total' total() [IsHidden=True], b1 'Base' base('S36_SVODJoin1 is not null') [IsHidden=True], S36_SVODJoin1, est1 'Subtotal-est1' subtotal() [IsHidden=True], b2 'Base' base('S36_SVODJoin2 is not null') [IsHidden=True], S36_SVODJoin2, est2 'Subtotal-est2' subtotal() [IsHidden=True], b3 'Base' base('S36_SVODJoin3 is not null') [IsHidden=True], S36_SVODJoin3, est3 'Subtotal-est3' subtotal() [IsHidden=True], b4 'Base' base('S36_SVODJoin4 is not null') [IsHidden=True], S36_SVODJoin4, b5 'Base' base('S36_SVODJoin5 is not null') [IsHidden=True], S36_SVODJoin5, b6 'Base' base('S36_SVODJoin6 is not null') [IsHidden=True], S36_SVODJoin6, b7 'Base' base('S36_SVODJoin7 is not null') [IsHidden=True], S36_SVODJoin7, b8 'Base' base('S36_SVODJoin8 is not null') [IsHidden=True], S36_SVODJoin8, b9 'Base' base('S36_SVODJoin9 is not null') [IsHidden=True], S36_SVODJoin9, b10 'Base' base('S36_SVODJoin10 is not null') [IsHidden=True], S36_SVODJoin10, b11 'Base' base('S36_SVODJoin11 is not null') [IsHidden=True], S36_SVODJoin11, b12 'Base' base('S36_SVODJoin12 is not null') [IsHidden=True], S36_SVODJoin12, b13 'Base' base('S36_SVODJoin13 is not null') [IsHidden=True], S36_SVODJoin13, b14 'Base' base('S36_SVODJoin14 is not null') [IsHidden=True], S36_SVODJoin14, b15 'Base' base('S36_SVODJoin15 is not null') [IsHidden=True], S36_SVODJoin15, b16 'Base' base('S36_SVODJoin16 is not null') [IsHidden=True], S36_SVODJoin16, b17 'Base' base('S36_SVODJoin17 is not null') [IsHidden=True], S36_SVODJoin17, b18 'Base' base('S36_SVODJoin18 is not null') [IsHidden=True], S36_SVODJoin18, b19 'Base' base('S36_SVODJoin19 is not null') [IsHidden=True], S36_SVODJoin19} 
						+ S36_SVODJoin_3B{base() [IsHidden=True], eDerived 'Net: Netflix, Hulu, Amazon' derived('(est1+est2+est3)/eTotal') [Decimals=4], eBase 'Base' base() [IsHidden=True], eb1 'NetflixBase' expression('S36_SVODJoin1 is not null') [IsHidden=True], eb2 'HuluBase' expression('S36_SVODJoin2 is not null') [IsHidden=True], eb3 'AmazonBase' expression('S36_SVODJoin3 is not null') [IsHidden=True], eTotal 'Total' total() [IsHidden=True], b1 'Base' base('S36_SVODJoin1 is not null') [IsHidden=True], S36_SVODJoin1, est1 'Subtotal-est1' subtotal() [IsHidden=True], b2 'Base' base('S36_SVODJoin2 is not null') [IsHidden=True], S36_SVODJoin2, est2 'Subtotal-est2' subtotal() [IsHidden=True], b3 'Base' base('S36_SVODJoin3 is not null') [IsHidden=True], S36_SVODJoin3, est3 'Subtotal-est3' subtotal() [IsHidden=True], b4 'Base' base('S36_SVODJoin4 is not null') [IsHidden=True], S36_SVODJoin4, b5 'Base' base('S36_SVODJoin5 is not null') [IsHidden=True], S36_SVODJoin5, b6 'Base' base('S36_SVODJoin6 is not null') [IsHidden=True], S36_SVODJoin6, b7 'Base' base('S36_SVODJoin7 is not null') [IsHidden=True], S36_SVODJoin7, b8 'Base' base('S36_SVODJoin8 is not null') [IsHidden=True], S36_SVODJoin8, b9 'Base' base('S36_SVODJoin9 is not null') [IsHidden=True], S36_SVODJoin9, b10 'Base' base('S36_SVODJoin10 is not null') [IsHidden=True], S36_SVODJoin10, b11 'Base' base('S36_SVODJoin11 is not null') [IsHidden=True], S36_SVODJoin11, b12 'Base' base('S36_SVODJoin12 is not null') [IsHidden=True], S36_SVODJoin12, b13 'Base' base('S36_SVODJoin13 is not null') [IsHidden=True], S36_SVODJoin13, b14 'Base' base('S36_SVODJoin14 is not null') [IsHidden=True], S36_SVODJoin14, b15 'Base' base('S36_SVODJoin15 is not null') [IsHidden=True], S36_SVODJoin15, b16 'Base' base('S36_SVODJoin16 is not null') [IsHidden=True], S36_SVODJoin16, b17 'Base' base('S36_SVODJoin17 is not null') [IsHidden=True], S36_SVODJoin17, b18 'Base' base('S36_SVODJoin18 is not null') [IsHidden=True], S36_SVODJoin18, b19 'Base' base('S36_SVODJoin19 is not null') [IsHidden=True], S36_SVODJoin19} 
						+ S36_SVODJoin_4B{base() [IsHidden=True], eDerived 'Net: Netflix, Hulu, Amazon' derived('(est1+est2+est3)/eTotal') [Decimals=4], eBase 'Base' base() [IsHidden=True], eb1 'NetflixBase' expression('S36_SVODJoin1 is not null') [IsHidden=True], eb2 'HuluBase' expression('S36_SVODJoin2 is not null') [IsHidden=True], eb3 'AmazonBase' expression('S36_SVODJoin3 is not null') [IsHidden=True], eTotal 'Total' total() [IsHidden=True], b1 'Base' base('S36_SVODJoin1 is not null') [IsHidden=True], S36_SVODJoin1, est1 'Subtotal-est1' subtotal() [IsHidden=True], b2 'Base' base('S36_SVODJoin2 is not null') [IsHidden=True], S36_SVODJoin2, est2 'Subtotal-est2' subtotal() [IsHidden=True], b3 'Base' base('S36_SVODJoin3 is not null') [IsHidden=True], S36_SVODJoin3, est3 'Subtotal-est3' subtotal() [IsHidden=True], b4 'Base' base('S36_SVODJoin4 is not null') [IsHidden=True], S36_SVODJoin4, b5 'Base' base('S36_SVODJoin5 is not null') [IsHidden=True], S36_SVODJoin5, b6 'Base' base('S36_SVODJoin6 is not null') [IsHidden=True], S36_SVODJoin6, b7 'Base' base('S36_SVODJoin7 is not null') [IsHidden=True], S36_SVODJoin7, b8 'Base' base('S36_SVODJoin8 is not null') [IsHidden=True], S36_SVODJoin8, b9 'Base' base('S36_SVODJoin9 is not null') [IsHidden=True], S36_SVODJoin9, b10 'Base' base('S36_SVODJoin10 is not null') [IsHidden=True], S36_SVODJoin10, b11 'Base' base('S36_SVODJoin11 is not null') [IsHidden=True], S36_SVODJoin11, b12 'Base' base('S36_SVODJoin12 is not null') [IsHidden=True], S36_SVODJoin12, b13 'Base' base('S36_SVODJoin13 is not null') [IsHidden=True], S36_SVODJoin13, b14 'Base' base('S36_SVODJoin14 is not null') [IsHidden=True], S36_SVODJoin14, b15 'Base' base('S36_SVODJoin15 is not null') [IsHidden=True], S36_SVODJoin15, b16 'Base' base('S36_SVODJoin16 is not null') [IsHidden=True], S36_SVODJoin16, b17 'Base' base('S36_SVODJoin17 is not null') [IsHidden=True], S36_SVODJoin17, b18 'Base' base('S36_SVODJoin18 is not null') [IsHidden=True], S36_SVODJoin18, b19 'Base' base('S36_SVODJoin19 is not null') [IsHidden=True], S36_SVODJoin19} 
						+ S36_SVODJoin_5B{base() [IsHidden=True], eDerived 'Net: Netflix, Hulu, Amazon' derived('(est1+est2+est3)/eTotal') [Decimals=4], eBase 'Base' base() [IsHidden=True], eb1 'NetflixBase' expression('S36_SVODJoin1 is not null') [IsHidden=True], eb2 'HuluBase' expression('S36_SVODJoin2 is not null') [IsHidden=True], eb3 'AmazonBase' expression('S36_SVODJoin3 is not null') [IsHidden=True], eTotal 'Total' total() [IsHidden=True], b1 'Base' base('S36_SVODJoin1 is not null') [IsHidden=True], S36_SVODJoin1, est1 'Subtotal-est1' subtotal() [IsHidden=True], b2 'Base' base('S36_SVODJoin2 is not null') [IsHidden=True], S36_SVODJoin2, est2 'Subtotal-est2' subtotal() [IsHidden=True], b3 'Base' base('S36_SVODJoin3 is not null') [IsHidden=True], S36_SVODJoin3, est3 'Subtotal-est3' subtotal() [IsHidden=True], b4 'Base' base('S36_SVODJoin4 is not null') [IsHidden=True], S36_SVODJoin4, b5 'Base' base('S36_SVODJoin5 is not null') [IsHidden=True], S36_SVODJoin5, b6 'Base' base('S36_SVODJoin6 is not null') [IsHidden=True], S36_SVODJoin6, b7 'Base' base('S36_SVODJoin7 is not null') [IsHidden=True], S36_SVODJoin7, b8 'Base' base('S36_SVODJoin8 is not null') [IsHidden=True], S36_SVODJoin8, b9 'Base' base('S36_SVODJoin9 is not null') [IsHidden=True], S36_SVODJoin9, b10 'Base' base('S36_SVODJoin10 is not null') [IsHidden=True], S36_SVODJoin10, b11 'Base' base('S36_SVODJoin11 is not null') [IsHidden=True], S36_SVODJoin11, b12 'Base' base('S36_SVODJoin12 is not null') [IsHidden=True], S36_SVODJoin12, b13 'Base' base('S36_SVODJoin13 is not null') [IsHidden=True], S36_SVODJoin13, b14 'Base' base('S36_SVODJoin14 is not null') [IsHidden=True], S36_SVODJoin14, b15 'Base' base('S36_SVODJoin15 is not null') [IsHidden=True], S36_SVODJoin15, b16 'Base' base('S36_SVODJoin16 is not null') [IsHidden=True], S36_SVODJoin16, b17 'Base' base('S36_SVODJoin17 is not null') [IsHidden=True], S36_SVODJoin17, b18 'Base' base('S36_SVODJoin18 is not null') [IsHidden=True], S36_SVODJoin18, b19 'Base' base('S36_SVODJoin19 is not null') [IsHidden=True], S36_SVODJoin19} 
						+ S36_SVODJoin_B3B{base() [IsHidden=True], eDerived 'Net: Netflix, Hulu, Amazon' derived('(est1+est2+est3)/eTotal') [Decimals=4], eBase 'Base' base() [IsHidden=True], eb1 'NetflixBase' expression('S36_SVODJoin1 is not null') [IsHidden=True], eb2 'HuluBase' expression('S36_SVODJoin2 is not null') [IsHidden=True], eb3 'AmazonBase' expression('S36_SVODJoin3 is not null') [IsHidden=True], eTotal 'Total' total() [IsHidden=True], b1 'Base' base('S36_SVODJoin1 is not null') [IsHidden=True], S36_SVODJoin1, est1 'Subtotal-est1' subtotal() [IsHidden=True], b2 'Base' base('S36_SVODJoin2 is not null') [IsHidden=True], S36_SVODJoin2, est2 'Subtotal-est2' subtotal() [IsHidden=True], b3 'Base' base('S36_SVODJoin3 is not null') [IsHidden=True], S36_SVODJoin3, est3 'Subtotal-est3' subtotal() [IsHidden=True], b4 'Base' base('S36_SVODJoin4 is not null') [IsHidden=True], S36_SVODJoin4, b5 'Base' base('S36_SVODJoin5 is not null') [IsHidden=True], S36_SVODJoin5, b6 'Base' base('S36_SVODJoin6 is not null') [IsHidden=True], S36_SVODJoin6, b7 'Base' base('S36_SVODJoin7 is not null') [IsHidden=True], S36_SVODJoin7, b8 'Base' base('S36_SVODJoin8 is not null') [IsHidden=True], S36_SVODJoin8, b9 'Base' base('S36_SVODJoin9 is not null') [IsHidden=True], S36_SVODJoin9, b10 'Base' base('S36_SVODJoin10 is not null') [IsHidden=True], S36_SVODJoin10, b11 'Base' base('S36_SVODJoin11 is not null') [IsHidden=True], S36_SVODJoin11, b12 'Base' base('S36_SVODJoin12 is not null') [IsHidden=True], S36_SVODJoin12, b13 'Base' base('S36_SVODJoin13 is not null') [IsHidden=True], S36_SVODJoin13, b14 'Base' base('S36_SVODJoin14 is not null') [IsHidden=True], S36_SVODJoin14, b15 'Base' base('S36_SVODJoin15 is not null') [IsHidden=True], S36_SVODJoin15, b16 'Base' base('S36_SVODJoin16 is not null') [IsHidden=True], S36_SVODJoin16, b17 'Base' base('S36_SVODJoin17 is not null') [IsHidden=True], S36_SVODJoin17, b18 'Base' base('S36_SVODJoin18 is not null') [IsHidden=True], S36_SVODJoin18, b19 'Base' base('S36_SVODJoin19 is not null') [IsHidden=True], S36_SVODJoin19} '%More than a year'
				!"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "^.S29_StreamUse1.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse2.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse3.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse4.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse5.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse6.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse7.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse8.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse9.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse10.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse11.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse12.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse13.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse14.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse15.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse16.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse17.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse18.ContainsAny({I_currently_use_this}) Or ^.S29_StreamUse19.ContainsAny({I_currently_use_this})")
				Ttl[1] = "When Join Streaming Services (By Box)"
				Amg[1] = "Current Users of Each Service"	
				Var[1] = QRE[1] + "CU_T2B '%Less than a year'" + "+" + ListVarsByBox(QRE[1] + "CU", 5) + "+" +  QRE[1] + "CU_B3B '%More than a year'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "S29_StreamUse1.ContainsAny({I_currently_use_this}) Or S29_StreamUse2.ContainsAny({I_currently_use_this}) Or S29_StreamUse3.ContainsAny({I_currently_use_this}) Or S29_StreamUse4.ContainsAny({I_currently_use_this}) Or S29_StreamUse5.ContainsAny({I_currently_use_this}) Or S29_StreamUse6.ContainsAny({I_currently_use_this}) Or S29_StreamUse7.ContainsAny({I_currently_use_this}) Or S29_StreamUse8.ContainsAny({I_currently_use_this}) Or S29_StreamUse9.ContainsAny({I_currently_use_this}) Or S29_StreamUse10.ContainsAny({I_currently_use_this}) Or S29_StreamUse11.ContainsAny({I_currently_use_this}) Or S29_StreamUse12.ContainsAny({I_currently_use_this}) Or S29_StreamUse13.ContainsAny({I_currently_use_this}) Or S29_StreamUse14.ContainsAny({I_currently_use_this}) Or S29_StreamUse15.ContainsAny({I_currently_use_this}) Or S29_StreamUse16.ContainsAny({I_currently_use_this}) Or S29_StreamUse17.ContainsAny({I_currently_use_this}) Or S29_StreamUse18.ContainsAny({I_currently_use_this}) Or S29_StreamUse19.ContainsAny({I_currently_use_this})")
				Ttl[1] = "When Join Streaming Services (By Box)"
				Amg[1] = "Lapsed Users of Each Service"	
				Var[1] = QRE[1] + "LU_T2B '%Less than a year'" + "+" + ListVarsByBox(QRE[1] + "LU", 5) + "+" +  QRE[1] + "LU_B3B '%More than a year'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "S29_StreamUse1.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse2.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse3.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse4.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse5.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse6.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse7.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse8.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse9.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse10.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse11.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse12.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse13.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse14.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse15.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse16.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse17.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse18.ContainsAny({I_used_to_use_this_but_no_longer_do}) Or S29_StreamUse19.ContainsAny({I_used_to_use_this_but_no_longer_do})")

				QRE[1] = "S36_SVODJoin"				
				Ttl[1] = "When Join Streaming Services (Grid)"
				Amg[1] = "Current Subscribers and Any Users <18 Years Old"
				GridBanner = QRE[1] + "A"
				Var[1] = QRE[1] + "A[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")		
				QRE[1] = "S36_SVODJoin"				
				Ttl[1] = "When Join Streaming Services (Grid)"
				Amg[1] = "Current Subscribers and Any Users 18+ Years Old"
				GridBanner = QRE[1] + "AA"
				Var[1] = QRE[1] + "AA[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")	
					
				QRE[1] = "S36_SVODJoin"				
				Ttl[1] = "When Join Streaming Services (Grid)"
				Amg[1] = "Current Subscribers and 1 Person HH"
				GridBanner = QRE[1] + "B"
				Var[1] = QRE[1] + "B[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")	
				QRE[1] = "S36_SVODJoin"				
				Ttl[1] = "When Join Streaming Services (Grid)"
				Amg[1] = "Current Subscribers and 2 Person HH"
				GridBanner = QRE[1] + "BB"
				Var[1] = QRE[1] + "BB[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")	
				QRE[1] = "S36_SVODJoin"				
				Ttl[1] = "When Join Streaming Services (Grid)"
				Amg[1] = "Current Subscribers and 3+ Person HH"
				GridBanner = QRE[1] + "BBB"
				Var[1] = QRE[1] + "BBB[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")	

				ListNum = 19
	
				QRE[1] = "S37_SVODQuit"
				Ttl[1] = "When Cancelled Streaming Services"
				Amg[1] = "Lapsed Users"
				Var[1] = ListVarsSVODB(QRE[1],1, 4) + "+" +  ListVarsSVODB(QRE[1], 6, 17)			
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Ttl[1] = "When Cancelled Streaming Services (By Box)"
				Var[1] = QRE[1] + "_T2B '%Less than a year'" + "+" + ListVarsByBox(QRE[1], 5) + "+" +  QRE[1] + "_B3B '%More than a year'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				ListNum = 19
	
				QRE[1] = "S38_WhoUse"
				Ttl[1] = "Who Uses Streaming Accounts"
				Amg[1] = "Current Users"
				Var[1] = ListVarsUse(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Ttl[1] = Ttl[1] + " Grid"
				Var[1] = QRE[1] + "[..].Column{Base(),Net1 'Child' net({Child_under_6, child_7_12}), Teen_13_17, Net2 'Young Adult' net({Adult_18_24, Adult_25_34}), Net3 'Older Adult' net({Adult_35_44, Adult_45_54, Adult_over_55})}"
				GridBanner = QRE[1]
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
'		Filtered WhoUse Special Request Grids:
				Amg[1] = "Current Subscribers < 1 Year"
				Var[1] = QRE[1] + "A[..].Column{Base(),Net1 'Child' net({Child_under_6, child_7_12}), Teen_13_17, Net2 'Young Adult' net({Adult_18_24, Adult_25_34}), Net3 'Older Adult' net({Adult_35_44, Adult_45_54, Adult_over_55})}"
				GridBanner = QRE[1] + "A"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Amg[1] = "Current Subscribers 1-3 Years"
				Var[1] = QRE[1] + "AA[..].Column{Base(),Net1 'Child' net({Child_under_6, child_7_12}), Teen_13_17, Net2 'Young Adult' net({Adult_18_24, Adult_25_34}), Net3 'Older Adult' net({Adult_35_44, Adult_45_54, Adult_over_55})}"
				GridBanner = QRE[1] + "AA"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Amg[1] = "Current Subscribers 3+ Years"
				Var[1] = QRE[1] + "AAA[..].Column{Base(),Net1 'Child' net({Child_under_6, child_7_12}), Teen_13_17, Net2 'Young Adult' net({Adult_18_24, Adult_25_34}), Net3 'Older Adult' net({Adult_35_44, Adult_45_54, Adult_over_55})}"
				GridBanner = QRE[1] + "AAA"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
				QRE[1] = "S39_WhyMultStrm"
				Ttl[1] = "Why Use Multiple Streaming Services"
				Amg[1] = "Use Multiple Streaming Services & Module B"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")


if Screener <> 1 then ExportTables("Weighted", TableDoc, Project, Sample[S], Cntry[C] +EXPORT_FILE + " part 2")
									
				ListNum = 20
	
				QRE[1] = "S40_WhyStrmDrop"
				Ttl[1] = "Why Drop Streaming Service"
				Amg[1] = "Past Subscribers of Streaming Services"
				Var[1] = ListVars(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = "Why Drop Streaming Service Grid"
				GridBanner = QRE[1] + "{base(), S40_WhyStrmDrop1, S40_WhyStrmDrop2, S40_WhyStrmDrop3, S40_WhyStrmDrop4, S40_WhyStrmDrop5, S40_WhyStrmDrop6, S40_WhyStrmDrop7, S40_WhyStrmDrop8, S40_WhyStrmDrop9, S40_WhyStrmDrop10, S40_WhyStrmDrop11, S40_WhyStrmDrop12, S40_WhyStrmDrop13, S40_WhyStrmDrop14, S40_WhyStrmDrop15, S40_WhyStrmDrop16, S40_WhyStrmDrop17, S40_WhyStrmDrop18, S40_WhyStrmDrop19, S40_WhyStrmDrop20}"
				Var[1] = QRE[1] + "[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
				QRE[1] = "S41_MaxStreamSub, S42_MaxStreamPay, S43_MaxStreamUse"
				Ttl[1] = "Maximum Number of Streaming Services"
				Amg[1] = "All"
				Var[1] = "!
					S41_MaxStreamSub{base(), eMean 'Mean' mean(S41_MaxStreamSub), eMin 'Min' min(S41_MaxStreamSub), eMax 'Max' max(S41_MaxStreamSub), eStddev 'Standard Deviation' stddev(S41_MaxStreamSub), eMedian 'Median' median(S41_MaxStreamSub), _1To50 '1+' expression('S41_MaxStreamSub >= 1 AND S41_MaxStreamSub <= 50'), _2To50 '2+' expression('S41_MaxStreamSub >= 2 AND S41_MaxStreamSub <= 50'), _3To50 '3+' expression('S41_MaxStreamSub >= 3 AND S41_MaxStreamSub <= 50'), _5To50 '5+' expression('S41_MaxStreamSub >= 5 AND S41_MaxStreamSub <= 50'), _10To50 '10+' expression('S41_MaxStreamSub >= 10 AND S41_MaxStreamSub <= 50')}
					+ S42_MaxStreamPay{base(), eMean 'Mean' mean(S42_MaxStreamPay), eMin 'Min' min(S42_MaxStreamPay), eMax 'Max' max(S42_MaxStreamPay), eStddev 'Standard Deviation' stddev(S42_MaxStreamPay), eMedian 'Median' median(S42_MaxStreamPay), _0To9 '<$10' expression('S42_MaxStreamPay >= 0 AND S42_MaxStreamPay <= 9'), _10To200 '$10+' expression('S42_MaxStreamPay >= 10 AND S42_MaxStreamPay <= 200'), _20To200 '$20+' expression('S42_MaxStreamPay >= 20 AND S42_MaxStreamPay <= 200'), _30To200 '$30+' expression('S42_MaxStreamPay >= 30 AND S42_MaxStreamPay <= 200'), _40To200 '$40+' expression('S42_MaxStreamPay >= 40 AND S42_MaxStreamPay <= 200'), _50To200 '$50+' expression('S42_MaxStreamPay >= 50 AND S42_MaxStreamPay <= 200'), _100To200 '$100+' expression('S42_MaxStreamPay >= 100 AND S42_MaxStreamPay <= 200')}
					+ S43_MaxStreamUse{base(), eMean 'Mean' mean(S43_MaxStreamUse), eMin 'Min' min(S43_MaxStreamUse), eMax 'Max' max(S43_MaxStreamUse), eStddev 'Standard Deviation' stddev(S43_MaxStreamUse), eMedian 'Median' median(S43_MaxStreamUse), _1To50 '1+' expression('S43_MaxStreamUse >= 1 AND S43_MaxStreamUse <= 50'), _2To50 '2+' expression('S43_MaxStreamUse >= 2 AND S43_MaxStreamUse <= 50'), _3To50 '3+' expression('S43_MaxStreamUse >= 3 AND S43_MaxStreamUse <= 50'), _5To50 '5+' expression('S43_MaxStreamUse >= 5 AND S43_MaxStreamUse <= 50'), _10To50 '10+' expression('S43_MaxStreamUse >= 10 AND S43_MaxStreamUse <= 50'), _20To50 '20+' expression('S43_MaxStreamUse >= 20 AND S43_MaxStreamUse <= 50')}
					!"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
				QRE[1] = "S44_StreamOrig, StreamOrigN"
				Ttl[1] = "Streaming Originals Watched"
				Amg[1] = "All"
				Var[1] = "S44_StreamOrig + StreamOrigN{base(), Watched_0_Shows [ISFixed = TRUE], Watched_1_Show [IsFixed = TRUE], WAtched_2_Shows [ISFixed = TRUE], WAtched_3_Shows [ISFixed = TRUE]}" + " + ShowCountNetflix{base(), eMean 'Average' mean(ShowCountNetflix)} + ShowCountAmazon{base(), eMean 'Average' mean(ShowCountAmazon)} + ShowCountHulu{base(), eMean 'Average' mean(ShowCountHulu)}"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				QRE[1] = "S45_OrigHowHeard"
				Ttl[1] = "How First Heard of Streaming Service Originals"
				Amg[1] = "All"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				ListNum = 9
	
				QRE[1] = "S46_SVODA"
				Ttl[1] = "Importance of Subscription Features (By Box)"
				Amg[1] = "Module B"
				Var[1] = QRE[1] + "_T2B" + "+" + ListVarsByBox(QRE[1], 5)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				ListNum = 13
	
				QRE[1] = "TVProvider"
				Ttl[1] = "TV Provider"
				Var[1] = ListVarsByBox(QRE[1], 3) + " + " + "ComcastX1Box"
					MakeTab(var[1], Banner, Amg[2] + "/Currently Use Comcast XFINITY", QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				ListNum = 4
	
				QRE[1] = "IPTVProvider"
				Ttl[1] = "IPTV Provider (By Box)"
				Amg[1] = "All"
				Var[1] = ListVarsByBox(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				ListNum = 21
	
				QRE[1] = "ChurnBehavior"
				Ttl[0] = "Churn Behavior"
				Amg[1] = "Current or Lapsed Subscribers"
				Var[1] = ListVars(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[0], TableDoc, 1, "first", 0, "None")
				Ttl[1] = Ttl[0] + " (By Box)"
				Var[1] = ListVarsByBox(QRE[1], 9) + " + " + QRE[1] + "_CB 'Net : Churn Behavior'" + " + " + QRE[1] + "_SB 'Net : Stayed With Service'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = Ttl[0] + " Grid"
				GridBanner = QRE[1]
				Var[1] = QRE[1] + "[..].Column{base(), e2 'Net: Churn' expression('Column.ContainsAny({I_used_a_free_trial_and_then_cancelled, I_cancelled_my_paid_subscription_and_have_not_rejoined, I_cancelled_my_paid_subscription_and_then_rejoined, I_signed_up_to_get_a_free_device_and_cancelled})'), e1 'Net: Stayed with Service' expression('Column.ContainsAny({I_kept_my_service_as_is, I_used_a_free_trial_to_sign_up_and_still_have_this_service, I_upgraded_my_service, I_cancelled_my_paid_subscription_and_then_rejoined, I_signed_up_to_get_a_free_device_and_have_remained_with_the_service})'), I_kept_my_service_as_is..}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Amg[1] = "Current Subscribers < 1 Year"
				GridBanner = QRE[1] + "A"
				Var[1] = QRE[1] + "A[..].Column{base(), e2 'Net: Churn' expression('Column.ContainsAny({I_used_a_free_trial_and_then_cancelled, I_cancelled_my_paid_subscription_and_have_not_rejoined, I_cancelled_my_paid_subscription_and_then_rejoined, I_signed_up_to_get_a_free_device_and_cancelled})'), e1 'Net: Stayed with Service' expression('Column.ContainsAny({I_kept_my_service_as_is, I_used_a_free_trial_to_sign_up_and_still_have_this_service, I_upgraded_my_service, I_cancelled_my_paid_subscription_and_then_rejoined, I_signed_up_to_get_a_free_device_and_have_remained_with_the_service})'), I_kept_my_service_as_is..}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Amg[1] = "Current Subscribers 1-3 Years"
				GridBanner = QRE[1] + "AA"
				Var[1] = QRE[1] + "AA[..].Column{base(), e2 'Net: Churn' expression('Column.ContainsAny({I_used_a_free_trial_and_then_cancelled, I_cancelled_my_paid_subscription_and_have_not_rejoined, I_cancelled_my_paid_subscription_and_then_rejoined, I_signed_up_to_get_a_free_device_and_cancelled})'), e1 'Net: Stayed with Service' expression('Column.ContainsAny({I_kept_my_service_as_is, I_used_a_free_trial_to_sign_up_and_still_have_this_service, I_upgraded_my_service, I_cancelled_my_paid_subscription_and_then_rejoined, I_signed_up_to_get_a_free_device_and_have_remained_with_the_service})'), I_kept_my_service_as_is..}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Amg[1] = "Current Subscribers 3+ Years"
				GridBanner = QRE[1] + "AAA"
				Var[1] = QRE[1] + "AAA[..].Column{base(), e2 'Net: Churn' expression('Column.ContainsAny({I_used_a_free_trial_and_then_cancelled, I_cancelled_my_paid_subscription_and_have_not_rejoined, I_cancelled_my_paid_subscription_and_then_rejoined, I_signed_up_to_get_a_free_device_and_cancelled})'), e1 'Net: Stayed with Service' expression('Column.ContainsAny({I_kept_my_service_as_is, I_used_a_free_trial_to_sign_up_and_still_have_this_service, I_upgraded_my_service, I_cancelled_my_paid_subscription_and_then_rejoined, I_signed_up_to_get_a_free_device_and_have_remained_with_the_service})'), I_kept_my_service_as_is..}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
	
				QRE[1] = "TVServPastYr"
				Ttl[1] = "P12M Pay TV Behavior"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[4], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
					
				QRE[1] = "PayTVWhy"
				Ttl[1] = "Why Subscribe to a Pay TV Service"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[4], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				QRE[1] = "WhyCancel"
				Ttl[1] = "Why Cancel Pay TV Service"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[7], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				QRE[1] = "HowLongPayCurrent, HowLongPayCancel"
				Ttl[1] = "Length of Past/Present Pay TV Subscription"
				Amg[1] = "Past/Present Pay TV Customers"
				Var[1] = RemCom(QRE[1])
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
				QRE[1] = "WhereGoCancelA, WhereGoCancelB"
				Ttl[1] = "Where Watch TV After Cancelled Pay TV Service"
				Var[1] = RemCom(QRE[1])
					MakeTab(var[1], Banner, Amg[7], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				QRE[1] = "WhyNoPayTV"
				Ttl[1] = "Why No Pay TV Subscription"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[6], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				QRE[1] = "WhyKeep"
				Ttl[1] = "Why Keep Pay TV Service"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[2], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				QRE[1] = "SignUpFut"
				Ttl[1] = "Type of Pay TV Willing to Get in the Future"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[5], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
				QRE[1] = "OnlineCableIDA, OnlineCableIDB"
				Ttl[1] = "Awareness and Experience with TV Everywhere"
				Amg[1] = "Module B"
				Var[1] = RemCom(QRE[1])
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
				QRE[1] = "NetSiteFreq, NetSiteDev, NetSiteWhere"
				Ttl[1] = "TV Everywhere Usage"
				Amg[1] = "Used TV Everywhere P3M & Module B"
				Var[1] = RemCom(QRE[1])
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")


if Screener <> 1 then ExportTables("Weighted", TableDoc, Project, Sample[S], Cntry[C] +EXPORT_FILE + " part 3")


		ListNum = 9
	
				QRE[1] = "ProviderRate"
				Ttl[1] = "Rate Elements of VOD Service (By Box)"
				Amg[1] = "Have Cable, Satellite or Fiber TV Service & Module B"
				Var[1] = QRE[1] + "_T2B" + "+" + ListVarsByBox(QRE[1], 5)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = "Rate Elements of VOD Service Grid"
				GridBanner = "Punch_ProviderRate{base(), Net2 'Net : Satellite' net({DIRECTV 'DIRECTV', Dish_Network 'Dish Network'}), Net1 'Net : Cable' net({Bright_House_Networks 'Bright House Networks', Cable_One 'Cable One', Cablevision_Systems_also_known_as_Optimum 'Cablevision Systems (also known as Optimum)', Comcast_XFINITY 'Comcast XFINITY', Cox_Communications 'Cox Communications', Insight_Communications 'Insight Communications', Mediacom 'Mediacom', Suddenlink_Communications 'Suddenlink Communications', Spectrum_formerly_Charter_or_Time_Warner_Cable 'Spectrum (formerly Charter or Time Warner Cable)'}), 'Net : Fiber' net({AT_T_U_Verse 'AT&T U-Verse', Verizon_FiOS_Frontier_Communications 'Verizon FiOS / Frontier Communications'})} 'Provider'"
				Var[1] = ListVars(QRE[1], ListNum)
	      			MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, GetGridSort(GridBanner,C,QRE[1],1), 0, Null)		
	
				ListNum = 9
	
				QRE[1] = "VODImprove"
				Ttl[1] = "Elements of VOD Ranked on Importance"
				Amg[1] = "Have Cable, Satellite or Fiber TV Service & Module B"
				Var[1] = ListVarsVOD(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = Ttl[1] + " Grid"
				Var[1] = ListVarsVOD(QRE[1], ListNum)
				GridBanner = "Punch_ProviderRate{base(), Net2 'Net : Satellite' net({DIRECTV 'DIRECTV', Dish_Network 'Dish Network'}), Net1 'Net : Cable' net({Bright_House_Networks 'Bright House Networks', Cable_One 'Cable One', Cablevision_Systems_also_known_as_Optimum 'Cablevision Systems (also known as Optimum)', Comcast_XFINITY 'Comcast XFINITY', Cox_Communications 'Cox Communications', Insight_Communications 'Insight Communications', Mediacom 'Mediacom', Suddenlink_Communications 'Suddenlink Communications', Spectrum_formerly_Charter_or_Time_Warner_Cable 'Spectrum (formerly Charter or Time Warner Cable)'}), 'Net : Fiber' net({AT_T_U_Verse 'AT&T U-Verse', Verizon_FiOS_Frontier_Communications 'Verizon FiOS / Frontier Communications'})} 'Provider'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
	            QRE[1] = "VidAssign"
				Ttl[1] = "Watching Platforms"
				Var[1] = QRE[1]
					'MakeTab(var[1], Banner, Amg[10], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
				ListNum = 5
	
				QRE[1] = "VidDevShare"
				Ttl[1] = "Share of Time Watching Video Content by Device"
				Amg[1] = "Assigned and Owns Device"
				Var[1] = ListVarsShare(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 1, "VidAssign.ContainsAny({VidDevShare})")
					'And (S15_Equipment2.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment5.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment6.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment8.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}))
					
					
				QRE[1] = "VidDevShare"
				Ttl[1] = "Share of Time Watching Video Content by Device (Rebased)"
				Amg[1] = "Assigned and Owns TV, Tablet, Smartphone, or Computer"
				Var[1] = ListVarsShare(QRE[1] + "A", ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 1, "VidAssign.ContainsAny({VidDevShare}) And (S15_Equipment2.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment5.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment6.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment8.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}))")
					
				ListNum = 5
				
				QRE[1] = "TVDevShare"
				Ttl[1] = "Share of Time Watching TV Shows by Device"
				Ttl[2] = "Share of Time Watching Movies by Device"
				Ttl[3] = "Share of Time Watching Live Sports by Device"
				Ttl[4] = "Share of Time Watching Kids Programming by Device"
				Ttl[5] = "Share of Time Watching Short Online Videos by Device"
				Ttl[6] = "Share of Time Watching Sports Recaps by Device"
				Ttl[7] = "Share of Time Watching Live News by Device"
				Amg[1] = "Assigned and Owns Device"
				
				for i = 1 to 7			
					Var[1] = ListVarsShare(QRE[1] + makestring(i) + "_", ListNum) + "+ TVDevShare_EX" + makestring(i) + "{base('VidAssign.ContainsAny({TVDevShare}) And (S15_Equipment2.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment5.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment6.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}) Or S15_Equipment8.ContainsAny({Own_but_have_not_used_to_watch_video_in_the_past_3_months, Own_and_have_used_to_watch_video_in_the_past_3_months}))'), ..}"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[i], TableDoc, 0, "first", 1, "VidAssign.ContainsAny({TVDevShare})")			
				next	

				Amg[1] = "Assigned and Watches Content"
				for i = 1 to 7			
					Var[1] = ListVarsShare(QRE[1] + "A" + makestring(i) + "_", ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[i] + " (Rebased)", TableDoc, 0, "first", 1, "VidAssign.ContainsAny({TVDevShare}) And Not TVDevShare_EX" + makestring(i) + ".ContainsAny({I_don_t_watch_this_type_of_content})")			
				next	
				

				
	
end if

if S = 1 then
				ListNum = 21
				QRE[1] = "PlatShare"			
					Ttl[1] = "TV Shows"
					Ttl[2] = "Movies"
					Ttl[3] = "Live Sports Programming"
					Ttl[4] = "Live News Programming"
					Ttl[5] = "Kids Programming"
				for i = 1 to 5
					Titl = "Share of Time Watching " + Ttl[i] + " by Platform"
					Amg[1] = "Watched " + Ttl[i] + " and watched anything on Platform Last 3 Months"
					Var[1] = ListVarsShare(QRE[1] + "N" + makestring(i) + "_", ListNum) + "+PlatShareSVOD_" + makestring(i)+ "'SVOD Net' +PlatSharePrem_" + makestring(i)+ " 'Premium (HBO Go/Showtime Anytime) Net' +PlatShareAVOD_" + makestring(i) +  " 'AVOD Net'"
					if PrevWt = 0 then MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 0, "S17_PlatformP3M1.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M10.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M11.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M12.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M13.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M14.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M15.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M16.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M17.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M18.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M2.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M3.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M4.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M5.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M6.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M7.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M8.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M9.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True)")			
				next	
				
				for i = 1 to 5
					Titl = "Share of Time Watching " + Ttl[i] + " by Platform (Rebased)"
					Amg[1] = "Watched " + Ttl[i] + " Last 3 Months"
					Var[1] = ListVarsShare(QRE[1] + "NR" + makestring(i) + "_", ListNum) + "+PlatShareNRSVOD_"+ makestring(i)+ " 'SVOD Net' +PlatShareNRPrem_" + makestring(i)+ "  'Premium (HBO Go/Showtime Anytime) Net' +PlatShareNRAVOD_" + makestring(i)+  " 'AVOD Net'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 0, " NumPlats>0")	
					'S17_PlatformP3M1.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M10.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or
				next	
			
				ListNum = 21
				
				GridBanner = "PlatShareGrid"
				Amg[1] = "Watched on TV/Computer/Tablet/Smartphone in P3M"
				Ttl[1] = "Share of Time Watching Grid"
				Var[1] = ListVars(GridBanner + "[..].S", ListNum) + " + PlatShareGrid[..].SVOD + PlatShareGrid[..].Prem + PlatShareGrid[..].AVOD"
					if PrevWt = 0 then MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "S17_PlatformP3M1.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M10.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M11.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M12.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M13.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M14.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M15.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M16.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M17.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M18.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M2.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M3.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M4.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M5.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M6.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M7.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M8.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M9.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True)")	
				
'				GridBanner = "PlatShareGrid"
'				Amg[1] = "Watched on TV/Computer/Tablet/Smartphone in P3M"
'				Ttl[1] = "Share of Time Watching Grid (Without items 3, 10, 18, 19)"
'				Var[1] = ListVars(GridBanner + "[..].S", 2) + "+" + ListVarsN(GridBanner + "[..].S", 4, 9) + "+" + ListVarsN(GridBanner + "[..].S", 11, 17) +" + PlatShareGrid[..].SVOD + PlatShareGrid[..].Prem + PlatShareGrid[..].AVOD"
'					if PrevWt = 0 then MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "S17_PlatformP3M1.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M10.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M11.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M12.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M13.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M14.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M15.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M16.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M17.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M18.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M2.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M3.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M4.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M5.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M6.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M7.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M8.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M9.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True)")	
				
				GridBanner = "PlatShareAGrid"
				Amg[1] = "All"
				Ttl[1] = "Share of Time Watching Grid (Rebased)"
				Var[1] = ListVars(GridBanner + "[..].S", ListNum) + " + PlatShareAGrid[..].SVOD + PlatShareAGrid[..].Prem + PlatShareAGrid[..].AVOD"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "S17_PlatformP3M1.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M10.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M11.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M12.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M13.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M14.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M15.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M16.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M17.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M18.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M2.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M3.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M4.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M5.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M6.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M7.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M8.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M9.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True)")	
				
				GridBanner = "PlatShareAGrid"
				Amg[1] = "All"
				Ttl[1] = "Share of Time Watching Grid (Rebased) (Without items 3, 10, 18, 19)"
				Var[1] = "PlatShareAGrid[..].S1{base(), eDerived 'NewSum' derived('eSum1+eSum2+eSum4+eSum5+eSum6+eSum7+eSum8+eSum9+eSum11+eSum12+eSum13+eSum14+eSum15+eSum16+eSum17') [IsHidden=True], eDerived1 'On TV live as it aired (not recorded)' derived('eSum1/eDerived') [Decimals=4], eDerived2 'Recorded on a DVR' derived('eSum2/eDerived') [Decimals=4], eDerived3 'Video On Demand for free with commercials through a TV provider’s set-top box' derived('eSum4/eDerived') [Decimals=4], eDerived4 'Video On Demand through subscription to premium channels offered by a TV provider' derived('eSum5/eDerived') [Decimals=4], eDerived5 'On DVDs or Blu-ray Discs' derived('eSum6/eDerived') [Decimals=4], eDerived6 'Online for free with commercials on network websites (e.g. ABC.com or CWTV.com)' derived('eSum7/eDerived') [Decimals=4], eDerived7 'Through network apps with commercials (e.g. TNT app or ABC app)' derived('eSum8/eDerived') [Decimals=4], eDerived8 'Through sites/apps from TV providers (e.g. Comcast Xfinity or U-Verse TV Online)' derived('eSum9/eDerived') [Decimals=4], eDerived9 'Through a Netflix subscription' derived('eSum11/eDerived') [Decimals=4], eDerived10 'Through a Hulu subscription' derived('eSum12/eDerived') [Decimals=4], eDerived11 'Through an Amazon Prime subscription' derived('eSum13/eDerived') [Decimals=4], eDerived12 'Through another paid subscription streaming service (e.g. CBS All Access, HBO Now, or Showtime (the standalone service))' derived('eSum14/eDerived') [Decimals=4], eDerived13 'Through the HBO GO streaming service' derived('eSum15/eDerived') [Decimals=4], eDerived14 'Through the Showtime Anytime streaming service' derived('eSum16/eDerived') [Decimals=4], eDerived15 'Paid to own digitally from sites (e.g. iTunes or Amazon)' derived('eSum17/eDerived') [Decimals=4], eDerived19 'SVOD Net' derived('(eSum11+eSum12+eSum13+eSum14)/eDerived') [Decimals=4], eDerived20 'Premium (HBO Go/Showtime Anytime) Net' derived('(eSum14+eSum15)/eDerived') [Decimals=4], eDerived21 'AVOD Net' derived('(eSum7+eSum8+eSum9)/eDerived') [Decimals=4], eDerived16 'Alternative Platforms Net' derived('(eSum4+eSum5+eSum7+eSum8+eSum9+eSum11+eSum12+eSum13+eSum14+eSum15+eSum16+eSum17)/eDerived') [Decimals=4], eSum1 'Sum1' sum(PlatShareAGrid[..].S1) [IsHidden=True, Decimals=2], eSum2 'Sum2' sum(PlatShareAGrid[..].S2) [IsHidden=True, Decimals=2], eSum4 'Sum4' sum(PlatShareAGrid[..].S4) [IsHidden=True, Decimals=2], eSum5 'Sum5' sum(PlatShareAGrid[..].S5) [IsHidden=True, Decimals=2], eSum6 'Sum6' sum(PlatShareAGrid[..].S6) [IsHidden=True, Decimals=2], eSum7 'Sum7' sum(PlatShareAGrid[..].S7) [IsHidden=True, Decimals=2], eSum8 'Sum8' sum(PlatShareAGrid[..].S8) [IsHidden=True, Decimals=2], eSum9 'Sum9' sum(PlatShareAGrid[..].S9) [IsHidden=True, Decimals=2], eSum11 'Sum11' sum(PlatShareAGrid[..].S11) [IsHidden=True, Decimals=2], eSum12 'Sum12' sum(PlatShareAGrid[..].S12) [IsHidden=True, Decimals=2], eSum13 'Sum13' sum(PlatShareAGrid[..].S13) [IsHidden=True, Decimals=2], eSum14 'Sum14' sum(PlatShareAGrid[..].S14) [IsHidden=True, Decimals=2], eSum15 'Sum15' sum(PlatShareAGrid[..].S15) [IsHidden=True, Decimals=2], eSum16 'Sum16' sum(PlatShareAGrid[..].S16) [IsHidden=True, Decimals=2], eSum17 'Sum17' sum(PlatShareAGrid[..].S17) [IsHidden=True, Decimals=2]} As R1 'Recalculated Mean Incl. Zeros'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "S17_PlatformP3M1.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M10.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M11.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M12.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M13.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M14.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M15.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M16.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M17.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M18.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M2.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M3.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M4.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M5.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M6.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M7.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M8.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M9.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True)")	

				GridBanner = "PlatShareAGrid"
				Amg[1] = "All"
				Ttl[1] = "Share of Time Watching Grid (Rebased) (Without items 19)"
				Var[1] = "PlatShareAGrid[..].S1{base(), eDerived 'NewSum' derived('eSum1+eSum2+eSum3+eSum4+eSum5+eSum6+eSum7+eSum8+eSum9+eSum10+eSum11+eSum12+eSum13+eSum14+eSum15+eSum16+eSum17+eSum18') [IsHidden=True], eDerived1 'On TV live as it aired (not recorded)' derived('eSum1/eDerived') [Decimals=4], eDerived2 'Recorded on a DVR' derived('eSum2/eDerived') [Decimals=4], eDerived3 'Via internet-based services (e.g. DIRECTV NOW, PlayStation Vue or Sling TV) that offer live and on demand programming via internet-connected devices (NOT Netflix, Amazon Prime or Hulu streaming services)' derived('eSum3/eDerived') [Decimals=4], eDerived4 'Video On Demand for free with commercials through a TV provider’s set-top box' derived('eSum4/eDerived') [Decimals=4], eDerived5 'Video On Demand through subscription to premium channels offered by a TV provider' derived('eSum5/eDerived') [Decimals=4], eDerived6 'On DVDs or Blu-ray Discs' derived('eSum6/eDerived') [Decimals=4], eDerived7 'Online for free with commercials on network websites (e.g. ABC.com or CWTV.com)' derived('eSum7/eDerived') [Decimals=4], eDerived8 'Through network apps with commercials (e.g. TNT app or ABC app)' derived('eSum8/eDerived') [Decimals=4], eDerived9 'Through sites/apps from TV providers (e.g. Comcast Xfinity or U-Verse TV Online)' derived('eSum9/eDerived') [Decimals=4], eDerived10 'For free with commercials through websites (e.g. Crackle, Tubi TV or Pluto TV)' derived('eSum10/eDerived') [Decimals=4], eDerived11 'Through a Netflix subscription' derived('eSum11/eDerived') [Decimals=4], eDerived12 'Through a Hulu subscription' derived('eSum12/eDerived') [Decimals=4], eDerived13 'Through an Amazon Prime subscription' derived('eSum13/eDerived') [Decimals=4], eDerived14 'Through another paid subscription streaming service (e.g. CBS All Access, HBO Now, or Showtime (the standalone service))' derived('eSum14/eDerived') [Decimals=4], eDerived15 'Through the HBO GO streaming service' derived('eSum15/eDerived') [Decimals=4], eDerived16 'Through the Showtime Anytime streaming service' derived('eSum16/eDerived') [Decimals=4], eDerived17 'Paid to own digitally from sites (e.g. iTunes or Amazon)' derived('eSum17/eDerived') [Decimals=4], eDerived18 'For free from torrent or similar websites (e.g. SideReel.com, ProjectFreeTV, torrent websites or links found online)' derived('eSum18/eDerived') [Decimals=4], eDerived19 'SVOD Net' derived('(eSum11+eSum12+eSum13+eSum14)/eDerived') [Decimals=4], eDerived20 'Premium (HBO Go/Showtime Anytime) Net' derived('(eSum14+eSum15)/eDerived') [Decimals=4], eDerived21 'AVOD Net' derived('(eSum7+eSum8+eSum9)/eDerived') [Decimals=4], eDerived22 'Alternative Platforms Net' derived('(eSum3+eSum4+eSum5+eSum7+eSum8+eSum9+eSum11+eSum12+eSum13+eSum14+eSum15+eSum16+eSum17+eSum18)/eDerived') [Decimals=4], eSum1 'Sum1' sum(PlatShareAGrid[..].S1) [IsHidden=True, Decimals=2], eSum2 'Sum2' sum(PlatShareAGrid[..].S2) [IsHidden=True, Decimals=2], eSum3 'Sum3' sum(PlatShareAGrid[..].S3) [IsHidden=True, Decimals=2], eSum4 'Sum4' sum(PlatShareAGrid[..].S4) [IsHidden=True, Decimals=2], eSum5 'Sum5' sum(PlatShareAGrid[..].S5) [IsHidden=True, Decimals=2], eSum6 'Sum6' sum(PlatShareAGrid[..].S6) [IsHidden=True, Decimals=2], eSum7 'Sum7' sum(PlatShareAGrid[..].S7) [IsHidden=True, Decimals=2], eSum8 'Sum8' sum(PlatShareAGrid[..].S8) [IsHidden=True, Decimals=2], eSum9 'Sum9' sum(PlatShareAGrid[..].S9) [IsHidden=True, Decimals=2], eSum10 'Sum10' sum(PlatShareAGrid[..].S10) [IsHidden=True, Decimals=2], eSum11 'Sum11' sum(PlatShareAGrid[..].S11) [IsHidden=True, Decimals=2], eSum12 'Sum12' sum(PlatShareAGrid[..].S12) [IsHidden=True, Decimals=2], eSum13 'Sum13' sum(PlatShareAGrid[..].S13) [IsHidden=True, Decimals=2], eSum14 'Sum14' sum(PlatShareAGrid[..].S14) [IsHidden=True, Decimals=2], eSum15 'Sum15' sum(PlatShareAGrid[..].S15) [IsHidden=True, Decimals=2], eSum16 'Sum16' sum(PlatShareAGrid[..].S16) [IsHidden=True, Decimals=2], eSum17 'Sum17' sum(PlatShareAGrid[..].S17) [IsHidden=True, Decimals=2], eSum18 'Sum18' sum(PlatShareAGrid[..].S18) [IsHidden=True, Decimals=2]} As R1 'Recalculated Mean Incl. Zeros'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "S17_PlatformP3M1.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M10.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M11.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M12.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M13.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M14.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M15.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M16.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M17.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M18.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M2.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M3.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M4.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M5.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M6.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M7.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M8.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True) Or S17_PlatformP3M9.ContainsAny({On_a_TV, On_a_computer, On_a_tablet, On_a_smartphone}, True)")	
					
end if

if S = 1 AND PrevWt = 0 then  				
				ListNum = 11
						
				QRE[1] = "PlatValue"
				Amg[1] = "P3M Watched on Any Platform"
				Ttl[1] = "Value Rating of Watching Content Across Platforms (By Box)"
				Var[1] = QRE[1] + "_T2B" + "+" + ListVarsByBox(QRE[1], 5)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")				
				
if Screener <> 1 then ExportTables("Weighted", TableDoc, Project, Sample[S], Cntry[C] +EXPORT_FILE + " part 4")
				
				ListNum = 13
				QRE[1] = "PlatAttributes"
				Ttl[1] = "Why Watch on Different Platforms"
				Amg[1] = "P3M Watched on Any Platform"
				Var[1] = ListVars(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = Ttl[1] + " Grid"
				GridBanner = QRE[1] + "{base(), .., PlatAttributes12 [IsFixed = True], PlatAttributes13 [IsFixed = True]}"
				Var[1] = QRE[1] + "[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")	
					
				ListNum = 3
					
				QRE[1] = "TVKnowShare"
				Ttl[1] = "How Decide What to Watch"
				Amg[1] = "Module B"
				Var[1] = ListVarsShare(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
									
				ListNum = 11
					
				QRE[1] = "WhereBrowse"
				Ttl[1] = "Where Browse for a Show"
				Amg[1] = "Module B"
				Var[1] = ListVarsVOD(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
													
				ListNum = 63
					
				QRE[1] = "ShowPlatFirst"
				Ttl[1] = "Where Started Watching TV Shows"
				Amg[1] = "Regularly Watch Show"
				Var[1] = ListVarsFirst(QRE[1], 1, 22) + "+" + ListVarsFirst(QRE[1], 24, 57) + "+" + ListVarsFirst(QRE[1], 59, 63)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[2] = Ttl[1] + " (By Box)"
				Var[1] = ListVarsByBox(QRE[1], 9) + " + ShowPlatFirst_AB '%Net : Alternative Platforms'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[2], TableDoc, 1, "first", 0, "None")
				Ttl[2] = Ttl[1] + " (By Box) - Type Nets"
				Var[1] = ListVarsByBoxT(QRE[1], 9) + " + ShowPlatFirst_AB{base(),Comb1 'Net : Broadcast' combine({" + QRE[1] + "5 'ARROW', " + QRE[1] + "7 'BLACK-ISH', " + QRE[1] + "9 'BROOKLYN NINE-NINE', " + QRE[1] + "10 'CHICAGO FIRE', " + QRE[1] + "12 'CRIMINAL MINDS', " + QRE[1] + "13 'EMPIRE', " + QRE[1] + "18 'GREAT BRITISH BAKE-OFF', " + QRE[1] + "19 'GREY''S ANATOMY', " + QRE[1] + "24 'KEVIN CAN WAIT', " + QRE[1] + "25 'LETHAL WEAPON', " + QRE[1] + "26 'LITTLE BIG SHOTS', " + QRE[1] + "28 'MODERN FAMILY', " + QRE[1] + "29 'NCIS', " + QRE[1] + "30 'NEW GIRL', " + QRE[1] + "33 'QUANTICO', " + QRE[1] + "35 'SCANDAL', " + QRE[1] + "40 'SUPERGIRL', " + QRE[1] + "41 'SURVIVOR', " + QRE[1] + "44 'THE BACHELOR', " + QRE[1] + "45 'THE BIG BANG THEORY', " + QRE[1] + "46 'THE BLACKLIST', " + QRE[1] + "48 'THE FLASH', " + QRE[1] + "49 'THE GOLDBERGS', " + QRE[1] + "53 'THE VOICE', " + QRE[1] + "55 'THIS IS US'}), Comb2 'Net : Streaming' combine({" + QRE[1] + "8 'BOSCH', " + QRE[1] + "14 'FULLER HOUSE', " + QRE[1] + "20 'HOUSE OF CARDS', " + QRE[1] + "31 'ORANGE IS THE NEW BLACK', " + QRE[1] + "38 'STRANGER THINGS', " + QRE[1] + "50 'THE HANDMAID''S TALE', " + QRE[1] + "51 'THE RANCH', " + QRE[1] + "56 'TRANSPARENT', " + QRE[1] + "57 'ULTIMATE BEAST MASTER'}), Comb3 'Net : Premium' combine({" + QRE[1] + "15 'GAME OF THRONES', " + QRE[1] + "16 'GIRLS', " + QRE[1] + "36 'SILICON VALLEY', " + QRE[1] + "43 'THE AFFAIR', " + QRE[1] + "59 'VEEP', " + QRE[1] + "61 'WESTWORLD'}), 'Net : Cable' combine({" + QRE[1] + "1 'AMERICAN DAD', " + QRE[1] + "2 'AMERICAN HORROR STORY', " + QRE[1] + "3 'ANGIE TRIBECA', " + QRE[1] + "4 'ANIMAL KINGDOM', " + QRE[1] + "6 'BEING MARY JANE', " + QRE[1] + "11 'CLAWS', " + QRE[1] + "17 'GOLD RUSH', " + QRE[1] + "21 'INSIDE AMY SCHUMER', " + QRE[1] + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + QRE[1] + "27 'LOVE & HIP HOP', " + QRE[1] + "32 'PRETTY LITTLE LIARS', " + QRE[1] + "34 'QUEEN SUGAR', " + QRE[1] + "37 'SOUTH PARK', " + QRE[1] + "39 'SUITS', " + QRE[1] + "42 'TEEN MOM', " + QRE[1] + "47 'THE DETOUR', " + QRE[1] + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + QRE[1] + "54 'THE WALKING DEAD', " + QRE[1] + "60 'VIKINGS', " + QRE[1] + "62 'WRECKED'}), " + QRE[1] + "63} '%Net : Alternative Platforms'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[2], TableDoc, 1, "first", 0, "None")
				Ttl[2] = Ttl[1] + " (By Box) - Genre 1 Nets"
				Var[1] = ListVarsByBoxG1(QRE[1], 9) + " + ShowPlatFirst_AB{base(), Comb2 'Net : Unscripted' combine({" + QRE[1] + "17 'GOLD RUSH', " + QRE[1] + "18 'GREAT BRITISH BAKE-OFF', " + QRE[1] + "26 'LITTLE BIG SHOTS', " + QRE[1] + "27 'LOVE & HIP HOP', " + QRE[1] + "41 'SURVIVOR', " + QRE[1] + "42 'TEEN MOM', " + QRE[1] + "44 'THE BACHELOR', " + QRE[1] + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + QRE[1] + "53 'THE VOICE', " + QRE[1] + "57 'ULTIMATE BEAST MASTER'}), Comb1 'Net : Drama' combine({" + QRE[1] + "2 'AMERICAN HORROR STORY', " + QRE[1] + "4 'ANIMAL KINGDOM', " + QRE[1] + "5 'ARROW', " + QRE[1] + "6 'BEING MARY JANE', " + QRE[1] + "8 'BOSCH', " + QRE[1] + "10 'CHICAGO FIRE', " + QRE[1] + "11 'CLAWS', " + QRE[1] + "12 'CRIMINAL MINDS', " + QRE[1] + "13 'EMPIRE', " + QRE[1] + "15 'GAME OF THRONES', " + QRE[1] + "19 'GREY''S ANATOMY', " + QRE[1] + "20 'HOUSE OF CARDS', " + QRE[1] + "25 'LETHAL WEAPON', " + QRE[1] + "29 'NCIS', " + QRE[1] + "32 'PRETTY LITTLE LIARS', " + QRE[1] + "33 'QUANTICO', " + QRE[1] + "34 'QUEEN SUGAR', " + QRE[1] + "35 'SCANDAL', " + QRE[1] + "38 'STRANGER THINGS', " + QRE[1] + "39 'SUITS', " + QRE[1] + "40 'SUPERGIRL', " + QRE[1] + "43 'THE AFFAIR', " + QRE[1] + "46 'THE BLACKLIST', " + QRE[1] + "48 'THE FLASH', " + QRE[1] + "50 'THE HANDMAID''S TALE', " + QRE[1] + "54 'THE WALKING DEAD', " + QRE[1] + "55 'THIS IS US', " + QRE[1] + "60 'VIKINGS', " + QRE[1] + "61 'WESTWORLD'}), 'Net : Comedy' combine({" + QRE[1] + "1 'AMERICAN DAD', " + QRE[1] + "3 'ANGIE TRIBECA', " + QRE[1] + "7 'BLACK-ISH', " + QRE[1] + "9 'BROOKLYN NINE-NINE', " + QRE[1] + "14 'FULLER HOUSE', " + QRE[1] + "16 'GIRLS', " + QRE[1] + "21 'INSIDE AMY SCHUMER', " + QRE[1] + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + QRE[1] + "24 'KEVIN CAN WAIT', " + QRE[1] + "28 'MODERN FAMILY', " + QRE[1] + "30 'NEW GIRL', " + QRE[1] + "31 'ORANGE IS THE NEW BLACK', " + QRE[1] + "36 'SILICON VALLEY', " + QRE[1] + "37 'SOUTH PARK', " + QRE[1] + "45 'THE BIG BANG THEORY', " + QRE[1] + "47 'THE DETOUR', " + QRE[1] + "49 'THE GOLDBERGS', " + QRE[1] + "51 'THE RANCH', " + QRE[1] + "56 'TRANSPARENT', " + QRE[1] + "59 'VEEP', " + QRE[1] + "62 'WRECKED'}), " + QRE[1] + "63}'%Net : Alternative Platforms'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[2], TableDoc, 1, "first", 0, "None")
				Ttl[2] = Ttl[1] + " (By Box) - Genre 2 Nets"
				Var[1] = ListVarsByBoxG2(QRE[1], 9) + " + ShowPlatFirst_AB{base(), " + QRE[1] + "5 'Superhero : ARROW', " + QRE[1] + "21 'Not Animated : INSIDE AMY SCHUMER', 'Net : Animated' combine({" + QRE[1] + "1 'AMERICAN DAD', " + QRE[1] + "37 'SOUTH PARK'}), Comb3 'Net : Procedural' combine({" + QRE[1] + "10 'CHICAGO FIRE', " + QRE[1] + "12 'CRIMINAL MINDS', " + QRE[1] + "19 'GREY''S ANATOMY', " + QRE[1] + "25 'LETHAL WEAPON', " + QRE[1] + "29 'NCIS', " + QRE[1] + "39 'SUITS'}), Comb4 'Net : Other (Unscripted)' combine({" + QRE[1] + "17 'GOLD RUSH', " + QRE[1] + "18 'GREAT BRITISH BAKE-OFF', " + QRE[1] + "26 'LITTLE BIG SHOTS', " + QRE[1] + "27 'LOVE & HIP HOP', " + QRE[1] + "41 'SURVIVOR', " + QRE[1] + "42 'TEEN MOM', " + QRE[1] + "44 'THE BACHELOR', " + QRE[1] + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + QRE[1] + "53 'THE VOICE', " + QRE[1] + "57 'ULTIMATE BEAST MASTER'}), Comb1 'Net : Serialized' combine({" + QRE[1] + "2 'AMERICAN HORROR STORY', " + QRE[1] + "4 'ANIMAL KINGDOM', " + QRE[1] + "6 'BEING MARY JANE', " + QRE[1] + "8 'BOSCH', " + QRE[1] + "11 'CLAWS', " + QRE[1] + "13 'EMPIRE', " + QRE[1] + "15 'GAME OF THRONES', " + QRE[1] + "20 'HOUSE OF CARDS', " + QRE[1] + "32 'PRETTY LITTLE LIARS', " + QRE[1] + "33 'QUANTICO', " + QRE[1] + "34 'QUEEN SUGAR', " + QRE[1] + "35 'SCANDAL', " + QRE[1] + "38 'STRANGER THINGS', " + QRE[1] + "40 'SUPERGIRL', " + QRE[1] + "43 'THE AFFAIR', " + QRE[1] + "46 'THE BLACKLIST', " + QRE[1] + "48 'THE FLASH', " + QRE[1] + "50 'THE HANDMAID''S TALE', " + QRE[1] + "54 'THE WALKING DEAD', " + QRE[1] + "55 'THIS IS US', " + QRE[1] + "60 'VIKINGS', " + QRE[1] + "61 'WESTWORLD'}), Comb2 'Net : Sitcom' combine({" + QRE[1] + "3 'ANGIE TRIBECA', " + QRE[1] + "7 'BLACK-ISH', " + QRE[1] + "9 'BROOKLYN NINE-NINE', " + QRE[1] + "14 'FULLER HOUSE', " + QRE[1] + "16 'GIRLS', " + QRE[1] + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + QRE[1] + "24 'KEVIN CAN WAIT', " + QRE[1] + "28 'MODERN FAMILY', " + QRE[1] + "30 'NEW GIRL', " + QRE[1] + "31 'ORANGE IS THE NEW BLACK', " + QRE[1] + "36 'SILICON VALLEY', " + QRE[1] + "45 'THE BIG BANG THEORY', " + QRE[1] + "47 'THE DETOUR', " + QRE[1] + "49 'THE GOLDBERGS', " + QRE[1] + "51 'THE RANCH', " + QRE[1] + "56 'TRANSPARENT', " + QRE[1] + "59 'VEEP', " + QRE[1] + "62 'WRECKED'}), " + QRE[1] + "63}'%Net : Alternative Platforms'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[2], TableDoc, 1, "first", 0, "None")
					
				GridBanner = QRE[1] + "{base(), eTotal 'Total: All Shows' total(), ShowPlatFirst1 [IsHidden=True], ShowPlatFirst2 [IsHidden=True], ShowPlatFirst3 [IsHidden=True], ShowPlatFirst4 [IsHidden=True], ShowPlatFirst5 [IsHidden=True], ShowPlatFirst6 [IsHidden=True], ShowPlatFirst7 [IsHidden=True], ShowPlatFirst8 [IsHidden=True], ShowPlatFirst9 [IsHidden=True], ShowPlatFirst10 [IsHidden=True], ShowPlatFirst11 [IsHidden=True], ShowPlatFirst12 [IsHidden=True], ShowPlatFirst13 [IsHidden=True], ShowPlatFirst14 [IsHidden=True], ShowPlatFirst15 [IsHidden=True], ShowPlatFirst16 [IsHidden=True], ShowPlatFirst17 [IsHidden=True], ShowPlatFirst18 [IsHidden=True], ShowPlatFirst19 [IsHidden=True], ShowPlatFirst20 [IsHidden=True], ShowPlatFirst21 [IsHidden=True], ShowPlatFirst22 [IsHidden=True], ShowPlatFirst24 [IsHidden=True], ShowPlatFirst25 [IsHidden=True], ShowPlatFirst26 [IsHidden=True], ShowPlatFirst27 [IsHidden=True], ShowPlatFirst28 [IsHidden=True], ShowPlatFirst29 [IsHidden=True], ShowPlatFirst30 [IsHidden=True], ShowPlatFirst31 [IsHidden=True], ShowPlatFirst32 [IsHidden=True], ShowPlatFirst33 [IsHidden=True], ShowPlatFirst34 [IsHidden=True], ShowPlatFirst35 [IsHidden=True], ShowPlatFirst36 [IsHidden=True], ShowPlatFirst37 [IsHidden=True], ShowPlatFirst38 [IsHidden=True], ShowPlatFirst39 [IsHidden=True], ShowPlatFirst40 [IsHidden=True], ShowPlatFirst41 [IsHidden=True], ShowPlatFirst42 [IsHidden=True], ShowPlatFirst43 [IsHidden=True], ShowPlatFirst44 [IsHidden=True], ShowPlatFirst45 [IsHidden=True], ShowPlatFirst46 [IsHidden=True], ShowPlatFirst47 [IsHidden=True], ShowPlatFirst48 [IsHidden=True], ShowPlatFirst49 [IsHidden=True], ShowPlatFirst50 [IsHidden=True], ShowPlatFirst51 [IsHidden=True], ShowPlatFirst52 [IsHidden=True], ShowPlatFirst53 [IsHidden=True], ShowPlatFirst54 [IsHidden=True], ShowPlatFirst55 [IsHidden=True], ShowPlatFirst56 [IsHidden=True], ShowPlatFirst57 [IsHidden=True], ShowPlatFirst59 [IsHidden=True], ShowPlatFirst60 [IsHidden=True], ShowPlatFirst61 [IsHidden=True], ShowPlatFirst62 [IsHidden=True], ShowPlatFirst63 [IsHidden=True], ShowPlatFirst23 [IsHidden=True], ShowPlatFirst58 [IsHidden=True]}" + " + " + Banner
				Ttl[2] = Ttl[1] + " Overall"
				Var[1] = QRE[1] + "[..].Column{base(), e1 'Alternative Platform Net' expression('Column.ContainsAny({On_Video_On_Demand_through_a_TV_provider_or_subscription_to_premium_channels_e_g_Xfinity_HBO_Go, Online_for_free_from_network_websites_or_apps, Paid_to_own_it_digitally_from_sites_e_g_iTunes_or_Amazon, Through_a_streaming_service_subscription_e_g_Netflix_Amazon_Hulu_HBO_Now, Through_sites_apps_from_TV_providers_e_g_Comcast_Xfinity_or_U_Verse_TV_Online})') [IsFixed=True], 'Net : Through TV Provider' net({On_TV_live_as_it_aired_not_recorded 'On TV live as it aired (not recorded)', Recorded_on_a_DVR 'Recorded on a DVR', On_Video_On_Demand_through_a_TV_provider_or_subscription_to_premium_channels_e_g_Xfinity_HBO_Go 'On Video On Demand through a TV provider or subscription to premium channels (e.g. Xfinity, HBO Go)'}), Net1 'Net : Own on Disc or Digital' net({On_DVDs_or_Blu_ray_Discs 'On DVDs or Blu-ray Discs', Paid_to_own_it_digitally_from_sites_e_g_iTunes_or_Amazon 'Paid to own it digitally from sites (e.g. iTunes or Amazon)'}), Through_a_streaming_service_subscription_e_g_Netflix_Amazon_Hulu_HBO_Now, Net2 'Net : Other Online Streaming' net({Online_for_free_from_network_websites_or_apps 'Online for free from network websites or apps', Through_sites_apps_from_TV_providers_e_g_Comcast_Xfinity_or_U_Verse_TV_Online 'Through sites/apps from TV providers (e.g. Comcast Xfinity or U-Verse TV Online)'}), Other [IsFixed=True]}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[2], TableDoc, 1, "first", 0, "None")
				
				Ttl[0] = Ttl[1] + " Grid"
				GridBanner = QRE[1] + "{Base(),.., ShowPlatFirst23 [IsHidden=True], ShowPlatFirst58 [IsHidden=True]}"
				Var[1] = QRE[1] + "[..].Column{base(), e1 'Alternative Platform Net' expression('Column.ContainsAny({On_Video_On_Demand_through_a_TV_provider_or_subscription_to_premium_channels_e_g_Xfinity_HBO_Go, Online_for_free_from_network_websites_or_apps, Paid_to_own_it_digitally_from_sites_e_g_iTunes_or_Amazon, Through_a_streaming_service_subscription_e_g_Netflix_Amazon_Hulu_HBO_Now, Through_sites_apps_from_TV_providers_e_g_Comcast_Xfinity_or_U_Verse_TV_Online})') [IsFixed=True], 'Net : Through TV Provider' net({On_TV_live_as_it_aired_not_recorded 'On TV live as it aired (not recorded)', Recorded_on_a_DVR 'Recorded on a DVR', On_Video_On_Demand_through_a_TV_provider_or_subscription_to_premium_channels_e_g_Xfinity_HBO_Go 'On Video On Demand through a TV provider or subscription to premium channels (e.g. Xfinity, HBO Go)'}), Net1 'Net : Own on Disc or Digital' net({On_DVDs_or_Blu_ray_Discs 'On DVDs or Blu-ray Discs', Paid_to_own_it_digitally_from_sites_e_g_iTunes_or_Amazon 'Paid to own it digitally from sites (e.g. iTunes or Amazon)'}), Through_a_streaming_service_subscription_e_g_Netflix_Amazon_Hulu_HBO_Now, Net2 'Net : Other Online Streaming' net({Online_for_free_from_network_websites_or_apps 'Online for free from network websites or apps', Through_sites_apps_from_TV_providers_e_g_Comcast_Xfinity_or_U_Verse_TV_Online 'Through sites/apps from TV providers (e.g. Comcast Xfinity or U-Verse TV Online)'}), Other [IsFixed=True]}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 1, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Type Nets"
				GridBanner = QRE[1] + "{base(), comb1 'Net : Broadcast' combine({" + QRE[1]+ "5 'ARROW', " + QRE[1]+ "7 'BLACK-ISH', " + QRE[1]+ "9 'BROOKLYN NINE-NINE', " + QRE[1]+ "10 'CHICAGO FIRE', " + QRE[1]+ "12 'CRIMINAL MINDS', " + QRE[1]+ "13 'EMPIRE', " + QRE[1]+ "18 'GREAT BRITISH BAKE-OFF', " + QRE[1]+ "19 'GREY''S ANATOMY', " + QRE[1]+ "24 'KEVIN CAN WAIT', " + QRE[1]+ "25 'LETHAL WEAPON', " + QRE[1]+ "26 'LITTLE BIG SHOTS', " + QRE[1]+ "28 'MODERN FAMILY', " + QRE[1]+ "29 'NCIS', " + QRE[1]+ "30 'NEW GIRL', " + QRE[1]+ "33 'QUANTICO', " + QRE[1]+ "35 'SCANDAL', " + QRE[1]+ "40 'SUPERGIRL', " + QRE[1]+ "41 'SURVIVOR', " + QRE[1]+ "44 'THE BACHELOR', " + QRE[1]+ "45 'THE BIG BANG THEORY', " + QRE[1]+ "46 'THE BLACKLIST', " + QRE[1]+ "48 'THE FLASH', " + QRE[1]+ "49 'THE GOLDBERGS', " + QRE[1]+ "53 'THE VOICE', " + QRE[1]+ "55 'THIS IS US'}), comb2 'Net : Streaming' combine({" + QRE[1]+ "8 'BOSCH', " + QRE[1]+ "14 'FULLER HOUSE', " + QRE[1]+ "20 'HOUSE OF CARDS', " + QRE[1]+ "31 'ORANGE IS THE NEW BLACK', " + QRE[1]+ "38 'STRANGER THINGS', " + QRE[1]+ "50 'THE HANDMAID''S TALE', " + QRE[1]+ "51 'THE RANCH', " + QRE[1]+ "56 'TRANSPARENT', " + QRE[1]+ "57 'ULTIMATE BEAST MASTER'}), comb3 'Net : Premium' combine({" + QRE[1]+ "15 'GAME OF THRONES', " + QRE[1]+ "16 'GIRLS', " + QRE[1]+ "36 'SILICON VALLEY', " + QRE[1]+ "43 'THE AFFAIR', " + QRE[1]+ "59 'VEEP', " + QRE[1]+ "61 'WESTWORLD'}), comb45 'Net : Cable' combine({" + QRE[1]+ "1 'AMERICAN DAD', " + QRE[1]+ "2 'AMERICAN HORROR STORY', " + QRE[1]+ "3 'ANGIE TRIBECA', " + QRE[1]+ "4 'ANIMAL KINGDOM', " + QRE[1]+ "6 'BEING MARY JANE', " + QRE[1]+ "11 'CLAWS', " + QRE[1]+ "17 'GOLD RUSH', " + QRE[1]+ "21 'INSIDE AMY SCHUMER', " + QRE[1]+ "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + QRE[1]+ "27 'LOVE & HIP HOP', " + QRE[1]+ "32 'PRETTY LITTLE LIARS', " + QRE[1]+ "34 'QUEEN SUGAR', " + QRE[1]+ "37 'SOUTH PARK', " + QRE[1]+ "39 'SUITS', " + QRE[1]+ "42 'TEEN MOM', " + QRE[1]+ "47 'THE DETOUR', " + QRE[1]+ "52 'THE REAL HOUSEWIVES OF ATLANTA', " + QRE[1]+ "54 'THE WALKING DEAD', " + QRE[1]+ "60 'VIKINGS', " + QRE[1]+ "62 'WRECKED'}), " + QRE[1]+ "63}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 1  Nets"
				GridBanner = QRE[1] + "{base(), comb2 'Net : Unscripted' combine({" + QRE[1]+ "17 'GOLD RUSH', " + QRE[1]+ "18 'GREAT BRITISH BAKE-OFF', " + QRE[1]+ "26 'LITTLE BIG SHOTS', " + QRE[1]+ "27 'LOVE & HIP HOP', " + QRE[1]+ "41 'SURVIVOR', " + QRE[1]+ "42 'TEEN MOM', " + QRE[1]+ "44 'THE BACHELOR', " + QRE[1]+ "52 'THE REAL HOUSEWIVES OF ATLANTA', " + QRE[1]+ "53 'THE VOICE', " + QRE[1]+ "57 'ULTIMATE BEAST MASTER'}), comb1 'Net : Drama' combine({" + QRE[1]+ "2 'AMERICAN HORROR STORY', " + QRE[1]+ "4 'ANIMAL KINGDOM', " + QRE[1]+ "5 'ARROW', " + QRE[1]+ "6 'BEING MARY JANE', " + QRE[1]+ "8 'BOSCH', " + QRE[1]+ "10 'CHICAGO FIRE', " + QRE[1]+ "11 'CLAWS', " + QRE[1]+ "12 'CRIMINAL MINDS', " + QRE[1]+ "13 'EMPIRE', " + QRE[1]+ "15 'GAME OF THRONES', " + QRE[1]+ "19 'GREY''S ANATOMY', " + QRE[1]+ "20 'HOUSE OF CARDS', " + QRE[1]+ "25 'LETHAL WEAPON', " + QRE[1]+ "29 'NCIS', " + QRE[1]+ "32 'PRETTY LITTLE LIARS', " + QRE[1]+ "33 'QUANTICO', " + QRE[1]+ "34 'QUEEN SUGAR', " + QRE[1]+ "35 'SCANDAL', " + QRE[1]+ "38 'STRANGER THINGS', " + QRE[1]+ "39 'SUITS', " + QRE[1]+ "40 'SUPERGIRL', " + QRE[1]+ "43 'THE AFFAIR', " + QRE[1]+ "46 'THE BLACKLIST', " + QRE[1]+ "48 'THE FLASH', " + QRE[1]+ "50 'THE HANDMAID''S TALE', " + QRE[1]+ "54 'THE WALKING DEAD', " + QRE[1]+ "55 'THIS IS US', " + QRE[1]+ "60 'VIKINGS', " + QRE[1]+ "61 'WESTWORLD'}), comb45 'Net : Comedy' combine({" + QRE[1]+ "1 'AMERICAN DAD', " + QRE[1]+ "3 'ANGIE TRIBECA', " + QRE[1]+ "7 'BLACK-ISH', " + QRE[1]+ "9 'BROOKLYN NINE-NINE', " + QRE[1]+ "14 'FULLER HOUSE', " + QRE[1]+ "16 'GIRLS', " + QRE[1]+ "21 'INSIDE AMY SCHUMER', " + QRE[1]+ "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + QRE[1]+ "24 'KEVIN CAN WAIT', " + QRE[1]+ "28 'MODERN FAMILY', " + QRE[1]+ "30 'NEW GIRL', " + QRE[1]+ "31 'ORANGE IS THE NEW BLACK', " + QRE[1]+ "36 'SILICON VALLEY', " + QRE[1]+ "37 'SOUTH PARK', " + QRE[1]+ "45 'THE BIG BANG THEORY', " + QRE[1]+ "47 'THE DETOUR', " + QRE[1]+ "49 'THE GOLDBERGS', " + QRE[1]+ "51 'THE RANCH', " + QRE[1]+ "56 'TRANSPARENT', " + QRE[1]+ "59 'VEEP', " + QRE[1]+ "62 'WRECKED'}), " + QRE[1]+ "63}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 2  Nets"
				GridBanner =QRE[1] + "{base(), " + QRE[1]+ "5 'Superhero : ARROW', " + QRE[1]+ "21 'Not Animated : INSIDE AMY SCHUMER', comb45 'Net : Animated' combine({" + QRE[1]+ "1 'AMERICAN DAD', " + QRE[1]+ "37 'SOUTH PARK'}), comb3 'Net : Procedural' combine({" + QRE[1]+ "10 'CHICAGO FIRE', " + QRE[1]+ "12 'CRIMINAL MINDS', " + QRE[1]+ "19 'GREY''S ANATOMY', " + QRE[1]+ "25 'LETHAL WEAPON', " + QRE[1]+ "29 'NCIS', " + QRE[1]+ "39 'SUITS'}), comb4 'Net : Other (Unscripted)' combine({" + QRE[1]+ "17 'GOLD RUSH', " + QRE[1]+ "18 'GREAT BRITISH BAKE-OFF', " + QRE[1]+ "26 'LITTLE BIG SHOTS', " + QRE[1]+ "27 'LOVE & HIP HOP', " + QRE[1]+ "41 'SURVIVOR', " + QRE[1]+ "42 'TEEN MOM', " + QRE[1]+ "44 'THE BACHELOR', " + QRE[1]+ "52 'THE REAL HOUSEWIVES OF ATLANTA', " + QRE[1]+ "53 'THE VOICE', " + QRE[1]+ "57 'ULTIMATE BEAST MASTER'}), comb1 'Net : Serialized' combine({" + QRE[1]+ "2 'AMERICAN HORROR STORY', " + QRE[1]+ "4 'ANIMAL KINGDOM', " + QRE[1]+ "6 'BEING MARY JANE', " + QRE[1]+ "8 'BOSCH', " + QRE[1]+ "11 'CLAWS', " + QRE[1]+ "13 'EMPIRE', " + QRE[1]+ "15 'GAME OF THRONES', " + QRE[1]+ "20 'HOUSE OF CARDS', " + QRE[1]+ "32 'PRETTY LITTLE LIARS', " + QRE[1]+ "33 'QUANTICO', " + QRE[1]+ "34 'QUEEN SUGAR', " + QRE[1]+ "35 'SCANDAL', " + QRE[1]+ "38 'STRANGER THINGS', " + QRE[1]+ "40 'SUPERGIRL', " + QRE[1]+ "43 'THE AFFAIR', " + QRE[1]+ "46 'THE BLACKLIST', " + QRE[1]+ "48 'THE FLASH', " + QRE[1]+ "50 'THE HANDMAID''S TALE', " + QRE[1]+ "54 'THE WALKING DEAD', " + QRE[1]+ "55 'THIS IS US', " + QRE[1]+ "60 'VIKINGS', " + QRE[1]+ "61 'WESTWORLD'}), comb2 'Net : Sitcom' combine({" + QRE[1]+ "3 'ANGIE TRIBECA', " + QRE[1]+ "7 'BLACK-ISH', " + QRE[1]+ "9 'BROOKLYN NINE-NINE', " + QRE[1]+ "14 'FULLER HOUSE', " + QRE[1]+ "16 'GIRLS', " + QRE[1]+ "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + QRE[1]+ "24 'KEVIN CAN WAIT', " + QRE[1]+ "28 'MODERN FAMILY', " + QRE[1]+ "30 'NEW GIRL', " + QRE[1]+ "31 'ORANGE IS THE NEW BLACK', " + QRE[1]+ "36 'SILICON VALLEY', " + QRE[1]+ "45 'THE BIG BANG THEORY', " + QRE[1]+ "47 'THE DETOUR', " + QRE[1]+ "49 'THE GOLDBERGS', " + QRE[1]+ "51 'THE RANCH', " + QRE[1]+ "56 'TRANSPARENT', " + QRE[1]+ "59 'VEEP', " + QRE[1]+ "62 'WRECKED'}), " + QRE[1]+ "63}"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
					
					
					
				QRE[1] = "CatchUpA"
				Ttl[1] = "How Watch Once Caught Up"
				Amg[1] = "Regularly Watch 1+ TV Show"
				Var[1] = QRE[1] + "{base(), 'Net : Caught Up' net({Yes_I_ve_started_watching_on_live_or_recorded_TV 'Yes, I''ve started watching on live or recorded TV', No_I_m_caught_up_but_still_watch_in_other_ways_instead_of_live_or_recorded_TV 'No, I''m ''''caught up'''' but still watch in other ways, instead of live or recorded TV'}), Net1 'Net : Not Caught Up' net({No_I_haven_t_caught_up_to_the_current_episodes_of_the_newest_season_yet 'No, I haven''t ''''caught up'''' to the current episodes of the newest season yet', I_didn_t_catch_up_to_the_current_episodes_but_started_watching_the_newest_season_anyway 'I didn''t ''''catch up'''' to the current episodes, but started watching the newest season anyway'})}"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid"
				GridBanner = "quota_CatchUpA{base(), ..,Kangaroo_Court [IsHidden= TRUE], Vampire_Style [IsHidden = TRUE]} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Type Nets"
				GridBanner = "quota_CatchUpA{base(), comb1 'Net : Broadcast' combine({ARROW, BLACK_ISH, BROOKLYN_NINE_NINE, CHICAGO_FIRE, CRIMINAL_MINDS, EMPIRE, GREAT_BRITISH_BAKE_OFF, GREY_S_ANATOMY, KEVIN_CAN_WAIT, LETHAL_WEAPON, LITTLE_BIG_SHOTS, MODERN_FAMILY, NCIS, NEW_GIRL, QUANTICO, SCANDAL, SUPERGIRL, SURVIVOR, THE_BACHELOR, THE_BIG_BANG_THEORY, THE_BLACKLIST, THE_FLASH, THE_GOLDBERGS, THE_VOICE, THIS_IS_US}), comb2 'Net : Streaming' combine({BOSCH, FULLER_HOUSE, HOUSE_OF_CARDS, ORANGE_IS_THE_NEW_BLACK,  STRANGER_THINGS, THE_HANDMAID_S_TALE, THE_RANCH, TRANSPARENT, ULTIMATE_BEAST_MASTER}), comb3 'Net : Premium' combine({GAME_OF_THRONES, GIRLS,  SILICON_VALLEY, THE_AFFAIR, VEEP, WESTWORLD}), 'Net : Cable' combine({AMERICAN_DAD, AMERICAN_HORROR_STORY, ANGIE_TRIBECA, ANIMAL_KINGDOM, BEING_MARY_JANE, CLAWS, GOLD_RUSH, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA,  LOVE_HIP_HOP, PRETTY_LITTLE_LIARS,  QUEEN_SUGAR,  SOUTH_PARK,  SUITS, TEEN_MOM, THE_DETOUR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_WALKING_DEAD, VIKINGS, WRECKED})} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 1  Nets"
				GridBanner = "quota_CatchUpA{base(), comb2 'Net : Unscripted' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS,  LOVE_HIP_HOP, SURVIVOR, TEEN_MOM, THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Drama' combine({AMERICAN_HORROR_STORY, ANIMAL_KINGDOM, ARROW, BEING_MARY_JANE, BOSCH, CHICAGO_FIRE, CLAWS, CRIMINAL_MINDS, EMPIRE, GAME_OF_THRONES, GREY_S_ANATOMY, HOUSE_OF_CARDS, LETHAL_WEAPON, NCIS, PRETTY_LITTLE_LIARS, QUANTICO,  QUEEN_SUGAR, SCANDAL,  STRANGER_THINGS,  SUITS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), 'Net : Comedy' combine({AMERICAN_DAD, ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT, MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK,  SILICON_VALLEY,  SOUTH_PARK, THE_BIG_BANG_THEORY, THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED})} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 2  Nets"
				GridBanner = "quota_CatchUpA{base(), ARROW 'Superhero : ARROW', INSIDE_AMY_SCHUMER 'Not Animated : INSIDE AMY SCHUMER', comb10 'Net : Animated' combine({AMERICAN_DAD, SOUTH_PARK}), comb3 'Net : Procedural' combine({CHICAGO_FIRE,CRIMINAL_MINDS, GREY_S_ANATOMY,LETHAL_WEAPON, NCIS, SUITS}), comb4 'Net : Other (Unscripted)' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS, LOVE_HIP_HOP, SURVIVOR, TEEN_MOM,  THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA,THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Serialized' combine({AMERICAN_HORROR_STORY,ANIMAL_KINGDOM, BEING_MARY_JANE, BOSCH, CLAWS, EMPIRE, GAME_OF_THRONES, HOUSE_OF_CARDS, PRETTY_LITTLE_LIARS, QUANTICO, QUEEN_SUGAR, SCANDAL, STRANGER_THINGS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), comb2 'Net : Sitcom' combine({ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT,MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK, SILICON_VALLEY, THE_BIG_BANG_THEORY,THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED})} 'Shows'"	
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
					
				QRE[1] = "CatchUpB"
				Ttl[1] = "How Likely to Watch on TV Once Caught Up"
				Amg[1] = "Regularly Watch and Have Not Caught Up 1+ TV Show"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid"
				GridBanner = "quota_CatchUpA{base(), ..,Kangaroo_Court [IsHidden= TRUE], Vampire_Style [IsHidden = TRUE]} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Type Nets"
				GridBanner = "quota_CatchUpA{base(), comb1 'Net : Broadcast' combine({ARROW, BLACK_ISH, BROOKLYN_NINE_NINE, CHICAGO_FIRE, CRIMINAL_MINDS, EMPIRE, GREAT_BRITISH_BAKE_OFF, GREY_S_ANATOMY, KEVIN_CAN_WAIT, LETHAL_WEAPON, LITTLE_BIG_SHOTS, MODERN_FAMILY, NCIS, NEW_GIRL, QUANTICO, SCANDAL, SUPERGIRL, SURVIVOR, THE_BACHELOR, THE_BIG_BANG_THEORY, THE_BLACKLIST, THE_FLASH, THE_GOLDBERGS, THE_VOICE, THIS_IS_US}), comb2 'Net : Streaming' combine({BOSCH, FULLER_HOUSE, HOUSE_OF_CARDS, ORANGE_IS_THE_NEW_BLACK,  STRANGER_THINGS, THE_HANDMAID_S_TALE, THE_RANCH, TRANSPARENT, ULTIMATE_BEAST_MASTER}), comb3 'Net : Premium' combine({GAME_OF_THRONES, GIRLS,  SILICON_VALLEY, THE_AFFAIR, VEEP, WESTWORLD}), 'Net : Cable' combine({AMERICAN_DAD, AMERICAN_HORROR_STORY, ANGIE_TRIBECA, ANIMAL_KINGDOM, BEING_MARY_JANE, CLAWS, GOLD_RUSH, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA,  LOVE_HIP_HOP, PRETTY_LITTLE_LIARS,  QUEEN_SUGAR,  SOUTH_PARK,  SUITS, TEEN_MOM, THE_DETOUR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_WALKING_DEAD, VIKINGS, WRECKED})} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 1  Nets"
				GridBanner = "quota_CatchUpA{base(), comb2 'Net : Unscripted' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS,  LOVE_HIP_HOP, SURVIVOR, TEEN_MOM, THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Drama' combine({AMERICAN_HORROR_STORY, ANIMAL_KINGDOM, ARROW, BEING_MARY_JANE, BOSCH, CHICAGO_FIRE, CLAWS, CRIMINAL_MINDS, EMPIRE, GAME_OF_THRONES, GREY_S_ANATOMY, HOUSE_OF_CARDS, LETHAL_WEAPON, NCIS, PRETTY_LITTLE_LIARS, QUANTICO,  QUEEN_SUGAR, SCANDAL,  STRANGER_THINGS,  SUITS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), 'Net : Comedy' combine({AMERICAN_DAD, ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT, MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK,  SILICON_VALLEY,  SOUTH_PARK, THE_BIG_BANG_THEORY, THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED})} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 2  Nets"
				GridBanner = "quota_CatchUpA{base(), ARROW 'Superhero : ARROW', INSIDE_AMY_SCHUMER 'Not Animated : INSIDE AMY SCHUMER', comb10 'Net : Animated' combine({AMERICAN_DAD, SOUTH_PARK}), comb3 'Net : Procedural' combine({CHICAGO_FIRE,CRIMINAL_MINDS, GREY_S_ANATOMY,LETHAL_WEAPON, NCIS, SUITS}), comb4 'Net : Other (Unscripted)' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS, LOVE_HIP_HOP, SURVIVOR, TEEN_MOM,  THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA,THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Serialized' combine({AMERICAN_HORROR_STORY,ANIMAL_KINGDOM, BEING_MARY_JANE, BOSCH, CLAWS, EMPIRE, GAME_OF_THRONES, HOUSE_OF_CARDS, PRETTY_LITTLE_LIARS, QUANTICO, QUEEN_SUGAR, SCANDAL, STRANGER_THINGS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), comb2 'Net : Sitcom' combine({ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT,MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK, SILICON_VALLEY, THE_BIG_BANG_THEORY,THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED})} 'Shows'"	
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")


					
				ListNum = 3
					
				QRE[1] = "CatchUpC"
				Ttl[1] = "How Likely To Watch on TV/DVR/On Demand"
				Amg[1] = "Regularly Watch and Have Not Caught Up 1+ TV Show"
				Var[1] = ListVars(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid"
				GridBanner = "quota_CatchUpA{base(), ..,Kangaroo_Court [IsHidden= TRUE], Vampire_Style [IsHidden = TRUE]} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Type Nets"
				GridBanner = "quota_CatchUpA{base(), comb1 'Net : Broadcast' combine({ARROW, BLACK_ISH, BROOKLYN_NINE_NINE, CHICAGO_FIRE, CRIMINAL_MINDS, EMPIRE, GREAT_BRITISH_BAKE_OFF, GREY_S_ANATOMY, KEVIN_CAN_WAIT, LETHAL_WEAPON, LITTLE_BIG_SHOTS, MODERN_FAMILY, NCIS, NEW_GIRL, QUANTICO, SCANDAL, SUPERGIRL, SURVIVOR, THE_BACHELOR, THE_BIG_BANG_THEORY, THE_BLACKLIST, THE_FLASH, THE_GOLDBERGS, THE_VOICE, THIS_IS_US}), comb2 'Net : Streaming' combine({BOSCH, FULLER_HOUSE, HOUSE_OF_CARDS, ORANGE_IS_THE_NEW_BLACK,  STRANGER_THINGS, THE_HANDMAID_S_TALE, THE_RANCH, TRANSPARENT, ULTIMATE_BEAST_MASTER}), comb3 'Net : Premium' combine({GAME_OF_THRONES, GIRLS,  SILICON_VALLEY, THE_AFFAIR, VEEP, WESTWORLD}), 'Net : Cable' combine({AMERICAN_DAD, AMERICAN_HORROR_STORY, ANGIE_TRIBECA, ANIMAL_KINGDOM, BEING_MARY_JANE, CLAWS, GOLD_RUSH, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA,  LOVE_HIP_HOP, PRETTY_LITTLE_LIARS,  QUEEN_SUGAR,  SOUTH_PARK,  SUITS, TEEN_MOM, THE_DETOUR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_WALKING_DEAD, VIKINGS, WRECKED})} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 1  Nets"
				GridBanner = "quota_CatchUpA{base(), comb2 'Net : Unscripted' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS,  LOVE_HIP_HOP, SURVIVOR, TEEN_MOM, THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Drama' combine({AMERICAN_HORROR_STORY, ANIMAL_KINGDOM, ARROW, BEING_MARY_JANE, BOSCH, CHICAGO_FIRE, CLAWS, CRIMINAL_MINDS, EMPIRE, GAME_OF_THRONES, GREY_S_ANATOMY, HOUSE_OF_CARDS, LETHAL_WEAPON, NCIS, PRETTY_LITTLE_LIARS, QUANTICO,  QUEEN_SUGAR, SCANDAL,  STRANGER_THINGS,  SUITS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), 'Net : Comedy' combine({AMERICAN_DAD, ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT, MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK,  SILICON_VALLEY,  SOUTH_PARK, THE_BIG_BANG_THEORY, THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED})} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 2  Nets"
				GridBanner = "quota_CatchUpA{base(), ARROW 'Superhero : ARROW', INSIDE_AMY_SCHUMER 'Not Animated : INSIDE AMY SCHUMER', comb10 'Net : Animated' combine({AMERICAN_DAD, SOUTH_PARK}), comb3 'Net : Procedural' combine({CHICAGO_FIRE,CRIMINAL_MINDS, GREY_S_ANATOMY,LETHAL_WEAPON, NCIS, SUITS}), comb4 'Net : Other (Unscripted)' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS, LOVE_HIP_HOP, SURVIVOR, TEEN_MOM,  THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA,THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Serialized' combine({AMERICAN_HORROR_STORY,ANIMAL_KINGDOM, BEING_MARY_JANE, BOSCH, CLAWS, EMPIRE, GAME_OF_THRONES, HOUSE_OF_CARDS, PRETTY_LITTLE_LIARS, QUANTICO, QUEEN_SUGAR, SCANDAL, STRANGER_THINGS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), comb2 'Net : Sitcom' combine({ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT,MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK, SILICON_VALLEY, THE_BIG_BANG_THEORY,THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED})} 'Shows'"	
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
					
				QRE[1] = "ShowHowHeard"
				Ttl[1] = "How First Heard of Show"
				Amg[1] = "Regularly Watch 1+ TV Show"
				Var[1] = QRE[1] + "{base(), 'Net : Word of Mouth' net({Family_or_friend_told_me 'Family or friend told me', Saw_or_read_about_it_from_friends_or_family_on_social_media 'Saw or read about it from friends or family on social media'}), Net1 'Net : Ads' net({Ads_on_live_or_recorded_TV 'Ads on live or recorded TV', Ads_on_a_website 'Ads on a website', Ads_on_social_media 'Ads on social media', Other_types_of_ads_e_g_outdoor_print 'Other types of ads (e.g. outdoor, print)'}), Net2 'Net : UI' net({Recommended_by_a_subscription_streaming_service 'Recommended by a subscription streaming service', Conducted_a_search_on_Video_On_Demand_on_the_screen_guide 'Conducted a search on Video On Demand on the screen guide', Conducted_a_search_on_a_subscription_streaming_site 'Conducted a search on a subscription streaming site'}), Net3 'Net : Other' net({Received_an_email_from_a_subscription_streaming_service 'Received an email from a subscription streaming service', Came_across_it_while_channel_surfing 'Came across it while channel surfing', Programming_guide_on_TV 'Programming guide on TV', Reviews 'Reviews'}), Other [IsFixed=True], I_have_no_idea [IsFixed=True]}"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid"
				GridBanner = "quota_ShowHowHeard{base(), ..,Kangaroo_Court [IsHidden= TRUE], Vampire_Style [IsHidden = TRUE]} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Type Nets"
				GridBanner = "quota_ShowHowHeard{base(), comb1 'Net : Broadcast' combine({ARROW, BLACK_ISH, BROOKLYN_NINE_NINE, CHICAGO_FIRE, CRIMINAL_MINDS, EMPIRE, GREAT_BRITISH_BAKE_OFF, GREY_S_ANATOMY, KEVIN_CAN_WAIT, LETHAL_WEAPON, LITTLE_BIG_SHOTS, MODERN_FAMILY, NCIS, NEW_GIRL, QUANTICO, SCANDAL, SUPERGIRL, SURVIVOR, THE_BACHELOR, THE_BIG_BANG_THEORY, THE_BLACKLIST, THE_FLASH, THE_GOLDBERGS, THE_VOICE, THIS_IS_US}), comb2 'Net : Streaming' combine({BOSCH, FULLER_HOUSE, HOUSE_OF_CARDS, ORANGE_IS_THE_NEW_BLACK,  STRANGER_THINGS, THE_HANDMAID_S_TALE, THE_RANCH, TRANSPARENT, ULTIMATE_BEAST_MASTER}), comb3 'Net : Premium' combine({GAME_OF_THRONES, GIRLS,  SILICON_VALLEY, THE_AFFAIR, VEEP, WESTWORLD}), 'Net : Cable' combine({AMERICAN_DAD, AMERICAN_HORROR_STORY, ANGIE_TRIBECA, ANIMAL_KINGDOM, BEING_MARY_JANE, CLAWS, GOLD_RUSH, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA,  LOVE_HIP_HOP, PRETTY_LITTLE_LIARS,  QUEEN_SUGAR,  SOUTH_PARK,  SUITS, TEEN_MOM, THE_DETOUR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_WALKING_DEAD, VIKINGS, WRECKED})} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 1  Nets"
				GridBanner = "quota_ShowHowHeard{base(), comb2 'Net : Unscripted' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS,  LOVE_HIP_HOP, SURVIVOR, TEEN_MOM, THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA, THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Drama' combine({AMERICAN_HORROR_STORY, ANIMAL_KINGDOM, ARROW, BEING_MARY_JANE, BOSCH, CHICAGO_FIRE, CLAWS, CRIMINAL_MINDS, EMPIRE, GAME_OF_THRONES, GREY_S_ANATOMY, HOUSE_OF_CARDS, LETHAL_WEAPON, NCIS, PRETTY_LITTLE_LIARS, QUANTICO,  QUEEN_SUGAR, SCANDAL,  STRANGER_THINGS,  SUITS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), 'Net : Comedy' combine({AMERICAN_DAD, ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, INSIDE_AMY_SCHUMER, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT, MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK,  SILICON_VALLEY,  SOUTH_PARK, THE_BIG_BANG_THEORY, THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED})} 'Shows'"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
				Ttl[0] = Ttl[1] + " Grid - Genre 2  Nets"
				GridBanner = "quota_ShowHowHeard{base(), ARROW 'Superhero : ARROW', INSIDE_AMY_SCHUMER 'Not Animated : INSIDE AMY SCHUMER', comb10 'Net : Animated' combine({AMERICAN_DAD, SOUTH_PARK}), comb3 'Net : Procedural' combine({CHICAGO_FIRE,CRIMINAL_MINDS, GREY_S_ANATOMY,LETHAL_WEAPON, NCIS, SUITS}), comb4 'Net : Other (Unscripted)' combine({GOLD_RUSH, GREAT_BRITISH_BAKE_OFF, LITTLE_BIG_SHOTS, LOVE_HIP_HOP, SURVIVOR, TEEN_MOM,  THE_BACHELOR, THE_REAL_HOUSEWIVES_OF_ATLANTA,THE_VOICE, ULTIMATE_BEAST_MASTER}), comb1 'Net : Serialized' combine({AMERICAN_HORROR_STORY,ANIMAL_KINGDOM, BEING_MARY_JANE, BOSCH, CLAWS, EMPIRE, GAME_OF_THRONES, HOUSE_OF_CARDS, PRETTY_LITTLE_LIARS, QUANTICO, QUEEN_SUGAR, SCANDAL, STRANGER_THINGS, SUPERGIRL, THE_AFFAIR, THE_BLACKLIST, THE_FLASH, THE_HANDMAID_S_TALE, THE_WALKING_DEAD, THIS_IS_US, VIKINGS, WESTWORLD}), comb2 'Net : Sitcom' combine({ANGIE_TRIBECA, BLACK_ISH, BROOKLYN_NINE_NINE, FULLER_HOUSE, GIRLS, IT_S_ALWAYS_SUNNY_IN_PHILADELPHIA, KEVIN_CAN_WAIT,MODERN_FAMILY, NEW_GIRL, ORANGE_IS_THE_NEW_BLACK, SILICON_VALLEY, THE_BIG_BANG_THEORY,THE_DETOUR, THE_GOLDBERGS, THE_RANCH, TRANSPARENT, VEEP, WRECKED})} 'Shows'"	
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[0], TableDoc, 0, "first", 0, "None")
					
				QRE[1] = "OldShows"
				Ttl[1] = "Old Shows Watched P3M"
				Amg[1] = "All"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
	if Screener <> 1 then ExportTables("Weighted", TableDoc, Project, Sample[S], Cntry[C] +EXPORT_FILE + " part 5")
	
				Ttl[1] = "BONES"
				Ttl[2] = "CASTLE"
				Ttl[3] = "CHARMED"
				Ttl[4] = "CSI"
				Ttl[5] = "FRIENDS"
				Ttl[6] = "GILMORE GIRLS"
				Ttl[7] = "HOW I MET YOUR MOTHER"
				Ttl[8] = "KING OF QUEENS"
				Ttl[9] = "LAW & ORDER"
				Ttl[10] = "SEINFELD"
				Ttl[11] = "THE OFFICE"
									
				ListNum = 8
				QRE[1] = "OldShowsHow"
				Amg[1] = "Watched on Platform Last 3 Months"
				for i = 1 to 11
					Titl = "Share of Time Watching " + Ttl[i] + " by Platform"
					Var[1] = ListVarsShare(QRE[1] + "N" + makestring(i) + "_", ListNum)
						MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 0, "None")
				
				next
				
				Ttl[1] = "Share of Time Watching ALL SHOWS by Platform"
				Amg[1] = "Watched Any on Platform Last 3 Months"
				var[1] = "!
							OldShowsSum1{base(), eDerived 'Mean (incl.zeros)' derived('eSumA/eSum') [Decimals=4], eSum 'Sum' sum(OldShowsSum) [IsHidden=True], eSumA 'Sum' sum(OldShowsSum1) [IsHidden=True], eMean 'Mean (incl. zeros)' mean(OldShowsSum1) [IsHidden=True, Decimals=2], eMean2 'Mean (excl. zeros)' mean(OldShowsSum1, 'OldShowsSum1') [IsHidden=True, Decimals=2], eMinimum 'Minimum' min(OldShowsSum1) [Decimals=2], eMaximum 'Maximum' max(OldShowsSum1) [Decimals=2], _0To19 '0 - 19' expression('OldShowsSum1 >= 0 AND OldShowsSum1 <= 19'), _20To39 '20 - 39' expression('OldShowsSum1 >= 20 AND OldShowsSum1 <= 39'), _40To59 '40 - 59' expression('OldShowsSum1 >= 40 AND OldShowsSum1 <= 59'), _60To79 '60 - 79' expression('OldShowsSum1 >= 60 AND OldShowsSum1 <= 79'), _80To100 '80 - 100' expression('OldShowsSum1 >= 80 AND OldShowsSum1 <= 100')} 'On my local channel (e.g. KTLA)' 
							+ OldShowsSum2{base(), eDerived 'Mean (incl.zeros)' derived('eSumA/eSum') [Decimals=4], eSum 'Sum' sum(OldShowsSum) [IsHidden=True], eSumA 'Sum' sum(OldShowsSum2) [IsHidden=True], eMean 'Mean (incl. zeros)' mean(OldShowsSum2) [IsHidden=True, Decimals=2], eMean2 'Mean (excl. zeros)' mean(OldShowsSum2, 'OldShowsSum2') [IsHidden=True, Decimals=2], eMinimum 'Minimum' min(OldShowsSum2) [Decimals=2], eMaximum 'Maximum' max(OldShowsSum2) [Decimals=2], _0To19 '0 - 19' expression('OldShowsSum2 >= 0 AND OldShowsSum2 <= 19'), _20To39 '20 - 39' expression('OldShowsSum2 >= 20 AND OldShowsSum2 <= 39'), _40To59 '40 - 59' expression('OldShowsSum2 >= 40 AND OldShowsSum2 <= 59'), _60To79 '60 - 79' expression('OldShowsSum2 >= 60 AND OldShowsSum2 <= 79'), _80To100 '80 - 100' expression('OldShowsSum2 >= 80 AND OldShowsSum2 <= 100')} 'On a cable network (e.g. TBS or FXX)' 
							+ OldShowsSum3{base(), eDerived 'Mean (incl.zeros)' derived('eSumA/eSum') [Decimals=4], eSum 'Sum' sum(OldShowsSum) [IsHidden=True], eSumA 'Sum' sum(OldShowsSum3) [IsHidden=True], eMean 'Mean (incl. zeros)' mean(OldShowsSum3) [IsHidden=True, Decimals=2], eMean2 'Mean (excl. zeros)' mean(OldShowsSum3, 'OldShowsSum3') [IsHidden=True, Decimals=2], eMinimum 'Minimum' min(OldShowsSum3) [Decimals=2], eMaximum 'Maximum' max(OldShowsSum3) [Decimals=2], _0To19 '0 - 19' expression('OldShowsSum3 >= 0 AND OldShowsSum3 <= 19'), _20To39 '20 - 39' expression('OldShowsSum3 >= 20 AND OldShowsSum3 <= 39'), _40To59 '40 - 59' expression('OldShowsSum3 >= 40 AND OldShowsSum3 <= 59'), _60To79 '60 - 79' expression('OldShowsSum3 >= 60 AND OldShowsSum3 <= 79'), _80To100 '80 - 100' expression('OldShowsSum3 >= 80 AND OldShowsSum3 <= 100')} 'Viewed from the Internet using a streaming service (e.g. Netflix, Hulu, Amazon Prime)' 
							+ OldShowsSum4{base(), eDerived 'Mean (incl.zeros)' derived('eSumA/eSum') [Decimals=4], eSum 'Sum' sum(OldShowsSum) [IsHidden=True], eSumA 'Sum' sum(OldShowsSum4) [IsHidden=True], eMean 'Mean (incl. zeros)' mean(OldShowsSum4) [IsHidden=True, Decimals=2], eMean2 'Mean (excl. zeros)' mean(OldShowsSum4, 'OldShowsSum4') [IsHidden=True, Decimals=2], eMinimum 'Minimum' min(OldShowsSum4) [Decimals=2], eMaximum 'Maximum' max(OldShowsSum4) [Decimals=2], _0To19 '0 - 19' expression('OldShowsSum4 >= 0 AND OldShowsSum4 <= 19'), _20To39 '20 - 39' expression('OldShowsSum4 >= 20 AND OldShowsSum4 <= 39'), _40To59 '40 - 59' expression('OldShowsSum4 >= 40 AND OldShowsSum4 <= 59'), _60To79 '60 - 79' expression('OldShowsSum4 >= 60 AND OldShowsSum4 <= 79'), _80To100 '80 - 100' expression('OldShowsSum4 >= 80 AND OldShowsSum4 <= 100')} 'Viewed for free on websites (e.g. Crackle)' 
							+ OldShowsSum5{base(), eDerived 'Mean (incl.zeros)' derived('eSumA/eSum') [Decimals=4], eSum 'Sum' sum(OldShowsSum) [IsHidden=True], eSumA 'Sum' sum(OldShowsSum5) [IsHidden=True], eMean 'Mean (incl. zeros)' mean(OldShowsSum5) [IsHidden=True, Decimals=2], eMean2 'Mean (excl. zeros)' mean(OldShowsSum5, 'OldShowsSum5') [IsHidden=True, Decimals=2], eMinimum 'Minimum' min(OldShowsSum5) [Decimals=2], eMaximum 'Maximum' max(OldShowsSum5) [Decimals=2], _0To19 '0 - 19' expression('OldShowsSum5 >= 0 AND OldShowsSum5 <= 19'), _20To39 '20 - 39' expression('OldShowsSum5 >= 20 AND OldShowsSum5 <= 39'), _40To59 '40 - 59' expression('OldShowsSum5 >= 40 AND OldShowsSum5 <= 59'), _60To79 '60 - 79' expression('OldShowsSum5 >= 60 AND OldShowsSum5 <= 79'), _80To100 '80 - 100' expression('OldShowsSum5 >= 80 AND OldShowsSum5 <= 100')} 'Viewed for free through network websites or apps (e.g. TBS.com, FX.com, TNT app)' 
							+ OldShowsSum6{base(), eDerived 'Mean (incl.zeros)' derived('eSumA/eSum') [Decimals=4], eSum 'Sum' sum(OldShowsSum) [IsHidden=True], eSumA 'Sum' sum(OldShowsSum6) [IsHidden=True], eMean 'Mean (incl. zeros)' mean(OldShowsSum6) [IsHidden=True, Decimals=2], eMean2 'Mean (excl. zeros)' mean(OldShowsSum6, 'OldShowsSum6') [IsHidden=True, Decimals=2], eMinimum 'Minimum' min(OldShowsSum6) [Decimals=2], eMaximum 'Maximum' max(OldShowsSum6) [Decimals=2], _0To19 '0 - 19' expression('OldShowsSum6 >= 0 AND OldShowsSum6 <= 19'), _20To39 '20 - 39' expression('OldShowsSum6 >= 20 AND OldShowsSum6 <= 39'), _40To59 '40 - 59' expression('OldShowsSum6 >= 40 AND OldShowsSum6 <= 59'), _60To79 '60 - 79' expression('OldShowsSum6 >= 60 AND OldShowsSum6 <= 79'), _80To100 '80 - 100' expression('OldShowsSum6 >= 80 AND OldShowsSum6 <= 100')} 'Viewed episodes from paid sites (e.g. iTunes or Amazon)' 
							+ OldShowsSum7{base(), eDerived 'Mean (incl.zeros)' derived('eSumA/eSum') [Decimals=4], eSum 'Sum' sum(OldShowsSum) [IsHidden=True], eSumA 'Sum' sum(OldShowsSum7) [IsHidden=True], eMean 'Mean (incl. zeros)' mean(OldShowsSum7) [IsHidden=True, Decimals=2], eMean2 'Mean (excl. zeros)' mean(OldShowsSum7, 'OldShowsSum7') [IsHidden=True, Decimals=2], eMinimum 'Minimum' min(OldShowsSum7) [Decimals=2], eMaximum 'Maximum' max(OldShowsSum7) [Decimals=2], _0To19 '0 - 19' expression('OldShowsSum7 >= 0 AND OldShowsSum7 <= 19'), _20To39 '20 - 39' expression('OldShowsSum7 >= 20 AND OldShowsSum7 <= 39'), _40To59 '40 - 59' expression('OldShowsSum7 >= 40 AND OldShowsSum7 <= 59'), _60To79 '60 - 79' expression('OldShowsSum7 >= 60 AND OldShowsSum7 <= 79'), _80To100 '80 - 100' expression('OldShowsSum7 >= 80 AND OldShowsSum7 <= 100')} 'Viewed for free from websites (e.g. SideReel.com, ProjectFreeTV, torrent websites or links found online)' 
							+ OldShowsSum8{base(), eDerived 'Mean (incl.zeros)' derived('eSumA/eSum') [Decimals=4], eSum 'Sum' sum(OldShowsSum) [IsHidden=True], eSumA 'Sum' sum(OldShowsSum8) [IsHidden=True], eMean 'Mean (incl. zeros)' mean(OldShowsSum8) [IsHidden=True, Decimals=2], eMean2 'Mean (excl. zeros)' mean(OldShowsSum8, 'OldShowsSum8') [IsHidden=True, Decimals=2], eMinimum 'Minimum' min(OldShowsSum8) [Decimals=2], eMaximum 'Maximum' max(OldShowsSum8) [Decimals=2], _0To19 '0 - 19' expression('OldShowsSum8 >= 0 AND OldShowsSum8 <= 19'), _20To39 '20 - 39' expression('OldShowsSum8 >= 20 AND OldShowsSum8 <= 39'), _40To59 '40 - 59' expression('OldShowsSum8 >= 40 AND OldShowsSum8 <= 59'), _60To79 '60 - 79' expression('OldShowsSum8 >= 60 AND OldShowsSum8 <= 79'), _80To100 '80 - 100' expression('OldShowsSum8 >= 80 AND OldShowsSum8 <= 100')} 'On DVDs or Blu-ray Discs'
				!"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				
				
				GridBanner = "OldShowsGrid"
				Ttl[1] = "Share of Time Watching Old Shows Grid"
				Var[1] = GridBanner + "[..].J1 + " + GridBanner + "[..].J2 + " + GridBanner + "[..].J3 + " + GridBanner + "[..].J4 + " + GridBanner + "[..].J5 + " + GridBanner + "[..].J6 + " + GridBanner + "[..].J7 + " + GridBanner + "[..].J8 + " + GridBanner + "[..].J9 + " + GridBanner + "[..].J10 + " + GridBanner + "[..].J11"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				

'				ListNum = 11
'				QRE[1] = "OldShowsHow"
'				
'				Ttl[1] = "On my local channel (e.g. KTLA)"
'				Ttl[2] = "On a cable network (e.g. TBS or FXX)"
'				Ttl[3] = "Viewed from the Internet using a streaming service (e.g. Netflix, Hulu, Amazon Prime)"
'				Ttl[4] = "Viewed for free on websites (e.g. Crackle)"
'				Ttl[5] = "Viewed for free through network websites or apps (e.g. TBS.com, FX.com, TNT app)"
'				Ttl[6] = "Viewed episodes from paid sites (e.g. iTunes or Amazon)"
'				Ttl[7] = "Viewed for free from websites (e.g. SideReel.com, ProjectFreeTV, torrent websites or links found online)"
'				Ttl[8] = "On DVDs or Blu-ray Discs"
'	
'				Amg[1] = "Watched Shows in Last 3 Months"
'				for i = 1 to 8
'					Titl = "Share of Time WatchingOld Shows " + Ttl[i]
'					Var[1] = ListVarsShare(QRE[1] + makestring(i) + "_", ListNum)
'					MakeTab(var[1], Banner, Amg[1], QRE[1], Titl, TableDoc, 0, "first", 0, "None")
'				
'				next
'										
				ListNum = 6
					
				QRE[1] = "SocialMedFreq"
				Ttl[1] = "How Often Watch Videos on Social Media/Platforms (By Box)"
				Var[1] = ListVarsByBox(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[11] + " and Module A", QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
											
				ListNum = 12
					
				QRE[1] = "SocialVidTime"
				Ttl[1] = "Time Spent Watching Videos on Platforms"
				Var[1] = ListVarsShare(QRE[1], ListNum) + " 'Net Sum of All Services'"
					MakeTab(var[1], Banner, Amg[11] + " and Module A", QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
											
				ListNum = 2
				
				QRE[1] = "SocialVidWhen"
				Ttl[1] = "When Watch Videos on Apps/Platforms"
				Var[1] = ListVars(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[11] + " and Module A", QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				Ttl[1] = Ttl[1] + " Grid"
				GridBanner = QRE[1]
				Var[1] = QRE[1] + "[..].Column"
					MakeTab(var[1], GridBanner, Amg[1] + " and Module A", QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
				ListNum = 5
				
				QRE[1] = "SocVidType"
				Ttl[1] = "Type of Video Watched on Apps/Websites"
				Amg[1] = "Watched Video Content on FB/Instagram/Snapchat/Twitter/Youtube P3M"
				Var[1] = ListVars(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1] + " and Module A", QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = Ttl[1] + " Grid"
				GridBanner = QRE[1] + "{base(), eTotal 'Overall' total(), SocVidType1, SocVidType2, SocVidType3, SocVidType4, SocVidType5}"
				Var[1] = QRE[1] + "[..].Column"
					MakeTab(var[1], GridBanner, Amg[1] + " and Module A", QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
				QRE[1] = "YTChannelSub"
				Ttl[1] = "Subscribe to Any Youtube Channels"
				Amg[1] = "Watched Video Content on Youtube P3M"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[1] + " and Module A", QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
											
				ListNum = 2
					
				QRE[1] = "YTReplace"
				Ttl[1] = "Feelings Toward Youtube and Social Media"
				Amg[1] = "Module A"
				Var[1] = ListVars(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
										
				ListNum = 4
					
				QRE[1] = "HowVidSoc"
				Ttl[1] = "How Videos are Typically Watched on Different Platforms (By Box)"
				Var[1] = ListVarsByBox(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[11] + " and Module A", QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
										
				ListNum = 5
					
				QRE[1] = "SMOrigInt"
				Ttl[0] = "How Likely to Watch an Original Series From These Platforms/Apps"
				Ttl[1] = Ttl[0] + " (By Box)"
				Amg[1] = "Module A"
				Var[1] = ListVarsByBox(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = Ttl[0] + " Grid"
				GridBanner = QRE[1]
				Var[1] = QRE[1] + "[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
				ListNum = 6
					
				QRE[1] = "SMOrigLength"
				Ttl[0] = "Episode Length Preference for Original Series"
				Ttl[1] = Ttl[0] + " (By Box)"
				Amg[1] = "Those Who Are Interested"
				Var[1] = ListVarsByBox(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1] + " and Module A", QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = Ttl[0] + " Grid"
				GridBanner = QRE[1]
				Var[1] = QRE[1] + "[..].Column"
					MakeTab(var[1], GridBanner, Amg[1] + " and Module A", QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
				
				ListNum = 11
				Ttl[0] = "Episode Length Preference for Original Series Midpoint Means"
				Var[1] = ListVarsM(QRE[1] + "V", 1, ListNum)
					MakeTab(var[1], Banner, Amg[1] + " and Module A", QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				
				ListNum = 5
					
				QRE[1] = "FullSportsInt"
				Ttl[0] = "How Likely to Watch Full Live Sports Games on Streaming Services/Social Media"
				Ttl[1] = Ttl[0] + " (By Box)"
				Amg[1] = "Module A"
				Var[1] = ListVarsByBox(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
				Ttl[1] = Ttl[0] + " Grid"
				GridBanner = QRE[1]
				Var[1] = QRE[1] + "[..].Column"
					MakeTab(var[1], GridBanner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
	
	


			ListNum = 6
				
				QRE[1] = "PayMo"
				Ttl[1] = "How Much HH Spend on Subscriptions Per Month"
				Amg[1] = "All"
				Var[1] = ListVarsShare(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
	
	            QRE[1] = "AutoPayMo"
				Ttl[1] = "Total Spend on Subscriptions Per Month"
				Amg[1] = "All"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
								
				ListNum = 2
					
				QRE[1] = "TVAdFeelings"
				Ttl[1] = "Feelings about Ads"
				Amg[1] = "Module B"
				Var[1] = ListVars(QRE[1], ListNum)
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
				QRE[1] = "HowAdInt"
				Ttl[1] = "What Would Make Commercials More Interesting"
				Amg[1] = "Module B"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
					
				QRE[1] = "QData, DataAware, UnlimitedUsage, LikelyBBCancel"
				Ttl[1] = "Type of Cell Phone Data Plan"
				Amg[1] = "Smartphone Owners"
				Var[1] = RemCom(QRE[1])
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
				QRE[1] = "PhoneProv, ISP"
				Ttl[1] = "Home Internet Provider and Cell Phone Carrier"
				Amg[1] = "Own Smartphone and Have Internet Connection at Home"
				Var[1] = RemCom(QRE[1])
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
					
				QRE[1] = "S9_EthnicityA, S10_EthnicityB"
				Ttl[1] = "Race/Ethnicity"
				Amg[1] = "All"
				Var[1] = RemCom(QRE[1])
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
				QRE[1] = "SportsFan, HHRes, MarStat, Edu, Employ, Income, Home, Quota_Region 'Region'"
				Ttl[1] = "Demographics Information"
				Amg[1] = "All"
				if Client = 0 then Var[1] = RemCom(QRE[1])
				if Client = 1 then Var[1] = "SportsFan + HHRes + MarStat + Edu{base('Age > 17'), Some_high_school [IsHidden=True], eExpression 'Some high school' expression('Edu.ContainsAny({Some_high_school}) And Age5.ContainsAny({_18_24, _25_34, _35_49, _50_64})'), High_school_graduate, Some_college, College_graduate, Graduate_school, Technical_Trade_school, Prefer_not_to_answer} 'What is the highest level of education you have completed? (Amg 18+)' + Employ + Income +  Home + Quota_Region 'Region'"
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")				
				
				QRE[1] = "CookiesConsent"
				Ttl[1] = "Consent to Using Cookies"
				Amg[1] = "All"
				Var[1] = QRE[1]
					MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 0, "first", 0, "None")
					
				if Screener <> 1 then ExportTables("Weighted", TableDoc, Project, Sample[S], Cntry[C] +EXPORT_FILE + " part 6")	
end if 			



			'----------------------------
			'Coded Opens
			'----------------------------
			
			'OEList[1]= "OEHowWatch"
			'OEList[2]= "OEWhyInt"
			'OEList[3]= "OEUnique"
	
			
			'for i = 1 to 3
			'	QRE[1] = OEList[i]
			'	Ttl[1] = "Coded Open - " + OEList[i]
			'	Var[1] = OEList[i] + "_Code"
			'		MakeTab(var[1], Banner, Amg[1], QRE[1], Ttl[1], TableDoc, 1, "first", 0, "None")
			'next
	
			
			'----------------------------
			'Weights
			'----------------------------
			if Screener = 1 then
				For we = 0 to TableDoc.Tables.Count-1
					TableDoc.Tables[we].weight = WgtVar
				next
			end if
				
		End With
		if Screener = 1 then
				'----------------------------
			'Populate the Tables
			'----------------------------
		  	TableDoc.Populate()
		
			'----------------------------
			'Save the tables document
			'----------------------------
		  	if Client = 0 and Neilsen = 0 then TableDoc.Save(Project + " " + Sample[S] + " " + Cntry[C] + " V2.mtd")
		  	if Client = 0 and Neilsen = 1 then TableDoc.Save(Project + " " + Sample[S] + " " + Cntry[C] + " Neilsen V2.mtd")
		  	if Client = 1 and Neilsen = 0 then TableDoc.Save(Project + " " + Sample[S] + " " + Cntry[C] + " Client V2.mtd")
		  	if Client = 1 and Neilsen = 1 then TableDoc.Save(Project + " " + Sample[S] + " " + Cntry[C] + " Neilsen UE Client V2.mtd")
		  	if Client = 1 and Counts = 1 then TableDoc.Save(Project + " " + Sample[S] + " " + Cntry[C] + " Client V2 Counts.mtd")		
		  	if Client = 1 and PerCounts = 1 then TableDoc.Save(Project + " " + Sample[S] + " " + Cntry[C] + " Client V2 Percentage Counts.mtd")		
			'----------------------------
			'Export the tables 
			'----------------------------
			if PrevWt = 0 then EXPORT_FILE = myPath + "Tabs\Tab Prep\Exports\Export " + Sample[S] + " " + Cntry[C] + " v2.xlsx"
	
			if Client = 1 then EXPORT_FILE = myPath + "Tabs\Tab Prep\Exports\Export " + Sample[S] + " " + Cntry[C] + " (Client).xlsx"
			if Client = 1 and Counts = 1 then EXPORT_FILE = myPath + "Tabs\Tab Prep\Exports\Export " + Sample[S] + " " + Cntry[C] + " Counts (Client).xlsx"
			if Client = 1 and PerCounts = 1 then EXPORT_FILE = myPath + "Tabs\Tab Prep\Exports\Export " + Sample[S] + " " + Cntry[C] + " Percents & Counts (Client).xlsx"
			if PrevWt = 1 then EXPORT_FILE = myPath + "Tabs\Tab Prep\Exports\Export " + Sample[S] + " " + Cntry[C] + " (Client Original Weights).xlsx"
			if Neilsen = 1 then EXPORT_FILE = myPath + "Tabs\Tab Prep\Exports\Export " + Sample[S] + " " + Cntry[C] + " Neilsen.xlsx"

			With TableDoc
					With .Exports["VergeExcelExport"]
						.Properties["DisplayAnnotations"] = True
						.Properties["FileFormat"] = "Excel 2007"
						.Properties["Interactive"] = False
						.Properties["LaunchApplication"] = False
						.Properties["OverwriteOutput"] = True
						.Properties["ElementLabels"] = True
						.Properties["VariableLabels"] = True
						.Properties["Destination"] = EXPORT_FILE
						.Properties["ShowHeadings"] = True
						.Properties["TableOfContents"] = False
						.Properties["FreezeFrames"] = False
						.Properties["PageSetup.LeftMargin"] = 0.15
						.Properties["PageSetup.RightMargin"] = 0.15
						.Properties["PageSetup.TopMargin"] = 0.25
						.Properties["PageSetup.BottomMargin"] = 0.25
						.Properties["PageSetup.HeaderMargin"] = 0.25
						.Properties["PageSetup.FooterMargin"] = 0.25
						.Properties["PageSetup.Orientation"] = 2
						.Properties["MinimumAnnotationWidth"] = 5
						.Properties["TopElementWidth"] = 7.5
						.Properties["SideElementWidth"] = 30
						.Properties["Colors.VariableLabelCell"] = "#C5D9F1"
						.Properties["Colors.SignificanceCell"] = "#006100"
						.Properties["Colors.SignificanceText"] = "#C6EFCE"
						.Export()
					End With
			End With
		end if
		
'		ElseIf Screener = 0 AND PrevWt = 0 Then
'		
'	
'	  With TableDoc.Exports["mrHtmlExport"]
'	      .Properties["Interactive"] = False
'	      .Properties["OverwriteOutput"] = True
'	      .Properties["LaunchApplication"] = True
'	      .Properties["DisplayOption"] = "Table Only"
'	      .Properties["LayoutStyle"] = "Frame Table of Contents"
'	      .Properties["PresentationStyle"] = "Black and White"
'	      .Export(Project + Sample[S] + Cntry[C] +".htm")
'	   End With 
'	   
'	   End If

	Next
Next
	


'*******************************************'
'	SubRoutines & Functions - DO NOT EDIT	'
'*******************************************'

Sub MakeTab (Side, Top, Amg, QRE, Titl, TableDoc, Sort, SortCol, Filter, FilterSpec)
With TableDoc
	.Tables.AddNew("Table" + CText(TableDoc.Tables.Count + 1),  Side + "*" + Top, Titl)
	.Tables[TableDoc.Tables.Count-1].Annotations[2 ].Specification = "Among " + Amg
	.Tables[TableDoc.Tables.Count-1].Annotations[4 	].Specification = QRE
	
	
'	if .Tables[TableDoc.Tables.Count-1].Axes[0].SubAxes.Count = 1 then
'		.Tables[TableDoc.Tables.Count-1].Rules.AddNew(0 '! Hide !', 0 '! Row !', 0, 1 '! LessEqual !', 0)
'	end if
'	
'	if Right(.Tables[TableDoc.Tables.Count-1].Description, 17) = "(Top & Top 2 Box)" then
'		.Tables[TableDoc.Tables.Count-1].Rules.AddNew(0 '! Hide !', 0 '! Row !', 0, 1 '! LessEqual !', 0)
'	end if
'	
'	
'	if Right(.Tables[TableDoc.Tables.Count-1].Description, 8) = "(By Box)" then
'		.Tables[TableDoc.Tables.Count-1].Rules.AddNew(0 '! Hide !', 0 '! Row !', 0, 1 '! LessEqual !', 0)
'	end if
	
	If Sort = 1 then .Tables[TableDoc.Tables.Count-1].SortColumn = SortCol
	If Filter = 1 then .Tables[TableDoc.Tables.Count-1].Filters.AddNew("Filter1" + CText(TableDoc.Tables.Count + 1), FilterSpec)	
	
End With	

End Sub


Function ListVars (VarName, Numb)
Dim i
	ListVars = ""
	For i = 1 to Numb
		if i = 1 then ListVars = VarName + makestring(i)
		if i > 1 then ListVars = ListVars + " + " + VarName + makestring(i)
	next

End Function

Function ListVarsChurn (VarName, Numb)
Dim i
	ListVarsChurn = ""
	For i = 1 to Numb
		if i = 1 then ListVarsChurn = VarName + makestring(i) + "{base(), I_kept_my_service_as_is, I_used_a_free_trial_to_sign_up_and_still_have_this_service, I_upgraded_my_service, I_signed_up_to_get_a_free_device_and_have_remained_with_the_service, Net1 'Churn' net({I_used_a_free_trial_and_then_cancelled 'I used a free trial, and then cancelled', I_cancelled_my_paid_subscription_and_have_not_rejoined 'I cancelled my paid subscription, and have not rejoined', I_cancelled_my_paid_subscription_and_then_rejoined 'I cancelled my paid subscription, and then rejoined', I_signed_up_to_get_a_free_device_and_cancelled 'I signed up to get a free device, and cancelled'}), I_did_not_sign_up_for_this_service [IsFixed = TRUE]}"
		if i > 1 then ListVarsChurn = ListVarsChurn + " + " + VarName + makestring(i) + "{base(), I_kept_my_service_as_is, I_used_a_free_trial_to_sign_up_and_still_have_this_service, I_upgraded_my_service, I_signed_up_to_get_a_free_device_and_have_remained_with_the_service, Net1 'Churn' net({I_used_a_free_trial_and_then_cancelled 'I used a free trial, and then cancelled', I_cancelled_my_paid_subscription_and_have_not_rejoined 'I cancelled my paid subscription, and have not rejoined', I_cancelled_my_paid_subscription_and_then_rejoined 'I cancelled my paid subscription, and then rejoined', I_signed_up_to_get_a_free_device_and_cancelled 'I signed up to get a free device, and cancelled'}), I_did_not_sign_up_for_this_service [IsFixed = TRUE]}"
	next

End Function

Function ListVarsPlatform (VarName, Numb1, Numb2)
Dim i
	ListVarsPlatform = ""
	For i = Numb1 To Numb2
		if i = Numb1 then ListVarsPlatform = VarName + makestring(i) + "{base(), 'On a TV, Computer, Tablet or Smartphone' net({On_a_TV 'On a TV', On_a_computer 'On a computer', Net1 'Mobile Device' net({On_a_tablet 'On a tablet', On_a_smartphone 'On a smartphone'})}), None_of_these [IsFixed = TRUE]} "
		if i > Numb1 then ListVarsPlatform = ListVarsPlatform + " + " + VarName + makestring(i) + "{base(), 'On a TV, Computer, Tablet or Smartphone' net({On_a_TV 'On a TV', On_a_computer 'On a computer', Net1 'Mobile Device' net({On_a_tablet 'On a tablet', On_a_smartphone 'On a smartphone'})}), None_of_these [IsFixed = TRUE]} "
	next

End Function

'Function ListVarsPlatformClient (VarName, Numb)
'Dim i
'	ListVarsPlatform = ""
'	For i = 1 to Numb
'		if i = 1 then ListVarsPlatform = VarName + makestring(i) + "{base(), 'On a TV, Computer, Tablet or Smartphone' net({On_a_TV 'On a TV', On_a_computer 'On a computer', On_a_tablet 'On a tablet', On_a_smartphone 'On a smartphone'}), None_of_these}"
'		if i > 1 then ListVarsPlatform = ListVarsPlatform + " + " + VarName + makestring(i) + "{base(), 'On a TV, Computer, Tablet or Smartphone' net({On_a_TV 'On a TV', On_a_computer 'On a computer', On_a_tablet 'On a tablet', On_a_smartphone 'On a smartphone'}), None_of_these}"
'	next
'
'End Function

Function ListVarsOvPlatform (VarName, Numb)
Dim i
	ListVarsOvPlatform = ""
	For i = 1 to Numb
		if i = 1 then ListVarsOvPlatform = VarName + makestring(i) + "{Base('Overall=1'), 'On a TV, Computer, Tablet or Smartphone' net({On_a_TV 'On a TV', On_a_computer 'On a computer', Net1 'Mobile Device' net({On_a_tablet 'On a tablet', On_a_smartphone 'On a smartphone'})}), None_of_these [IsFixed = TRUE]}"
		if i > 1 then ListVarsOvPlatform = ListVarsOvPlatform + " + " + VarName + makestring(i) + "{Base('Overall=1'), 'On a TV, Computer, Tablet or Smartphone' net({On_a_TV 'On a TV', On_a_computer 'On a computer', Net1 'Mobile Device' net({On_a_tablet 'On a tablet', On_a_smartphone 'On a smartphone'})}), None_of_these [IsFixed = TRUE]}"
	next

End Function

Function ListVarsOv (VarName, Numb)
Dim i
	ListVarsOv = ""
	For i = 1 to Numb
		if i = 1 then ListVarsOv = VarName + makestring(i) + "{Base('Overall=1'),..}"
		if i > 1 then ListVarsOv = ListVarsOv + " + " + VarName + makestring(i) + "{Base('Overall=1'),..}"
	next

End Function
Function ListVarsUse (VarName, Numb)
Dim i
	ListVarsUse = ""
	For i = 1 to Numb
		if i = 1 then ListVarsUse = VarName + makestring(i) + "{Base(),Net1 'Child' net({Child_under_6, child_7_12}), Teen_13_17, Net2 'Young Adult' net({Adult_18_24, Adult_25_34}), Net3 'Older Adult' net({Adult_35_44, Adult_45_54, Adult_over_55})}"
		if i > 1 then ListVarsUse = ListVarsUse + " + " + VarName + makestring(i) + "{Base(),Net1 'Child' net({Child_under_6, child_7_12}), Teen_13_17, Net2 'Young Adult' net({Adult_18_24, Adult_25_34}), Net3 'Older Adult' net({Adult_35_44, Adult_45_54, Adult_over_55})}"
	next

End Function

Function ListVarsOth (VarName, Numb)
Dim i
	ListVarsOth = ""
	For i = 1 to Numb
		if i = 1 then ListVarsOth = VarName + makestring(i) + "{Base(),.., Other [IsFixed = TRUE]}"
		if i > 1 then ListVarsOth = ListVarsOth + " + " + VarName + makestring(i) + "{Base(),.., Other [IsFixed = TRUE]}"
	next

End Function

Function ListVarsFirst (VarName, Numb1, Numb2)
Dim i
	ListVarsFirst = ""
	For i = Numb1 to Numb2
		if i = Numb1 then ListVarsFirst = VarName + makestring(i) + "{base(), 'Net : Through TV Provider' net({On_TV_live_as_it_aired_not_recorded 'On TV live as it aired (not recorded)', Recorded_on_a_DVR 'Recorded on a DVR', On_Video_On_Demand_through_a_TV_provider_or_subscription_to_premium_channels_e_g_Xfinity_HBO_Go 'On Video On Demand through a TV provider or subscription to premium channels (e.g. Xfinity, HBO Go)'}), Net1 'Net : Own on Disc or Digital' net({On_DVDs_or_Blu_ray_Discs 'On DVDs or Blu-ray Discs', Paid_to_own_it_digitally_from_sites_e_g_iTunes_or_Amazon 'Paid to own it digitally from sites (e.g. iTunes or Amazon)'}), Through_a_streaming_service_subscription_e_g_Netflix_Amazon_Hulu_HBO_Now, Net2 'Net : Other Online Streaming' net({Online_for_free_from_network_websites_or_apps 'Online for free from network websites or apps', Through_sites_apps_from_TV_providers_e_g_Comcast_Xfinity_or_U_Verse_TV_Online 'Through sites/apps from TV providers (e.g. Comcast Xfinity or U-Verse TV Online)'}), e1 'Alternative Platform Net' expression('ShowPlatFirst1.ContainsAny({On_Video_On_Demand_through_a_TV_provider_or_subscription_to_premium_channels_e_g_Xfinity_HBO_Go, Online_for_free_from_network_websites_or_apps, Paid_to_own_it_digitally_from_sites_e_g_iTunes_or_Amazon, Through_a_streaming_service_subscription_e_g_Netflix_Amazon_Hulu_HBO_Now, Through_sites_apps_from_TV_providers_e_g_Comcast_Xfinity_or_U_Verse_TV_Online})') [IsFixed=True], Other [IsFixed=True]}"
		if i > Numb1 then ListVarsFirst = ListVarsFirst + " + " + VarName + makestring(i) + "{base(), 'Net : Through TV Provider' net({On_TV_live_as_it_aired_not_recorded 'On TV live as it aired (not recorded)', Recorded_on_a_DVR 'Recorded on a DVR', On_Video_On_Demand_through_a_TV_provider_or_subscription_to_premium_channels_e_g_Xfinity_HBO_Go 'On Video On Demand through a TV provider or subscription to premium channels (e.g. Xfinity, HBO Go)'}), Net1 'Net : Own on Disc or Digital' net({On_DVDs_or_Blu_ray_Discs 'On DVDs or Blu-ray Discs', Paid_to_own_it_digitally_from_sites_e_g_iTunes_or_Amazon 'Paid to own it digitally from sites (e.g. iTunes or Amazon)'}), Through_a_streaming_service_subscription_e_g_Netflix_Amazon_Hulu_HBO_Now, Net2 'Net : Other Online Streaming' net({Online_for_free_from_network_websites_or_apps 'Online for free from network websites or apps', Through_sites_apps_from_TV_providers_e_g_Comcast_Xfinity_or_U_Verse_TV_Online 'Through sites/apps from TV providers (e.g. Comcast Xfinity or U-Verse TV Online)'}), e1 'Alternative Platform Net' expression('ShowPlatFirst1.ContainsAny({On_Video_On_Demand_through_a_TV_provider_or_subscription_to_premium_channels_e_g_Xfinity_HBO_Go, Online_for_free_from_network_websites_or_apps, Paid_to_own_it_digitally_from_sites_e_g_iTunes_or_Amazon, Through_a_streaming_service_subscription_e_g_Netflix_Amazon_Hulu_HBO_Now, Through_sites_apps_from_TV_providers_e_g_Comcast_Xfinity_or_U_Verse_TV_Online})') [IsFixed=True], Other [IsFixed=True]}"
	next

End Function


Function ListVarsSVODA (VarName, Numb)
Dim i
	ListVarsSVODA = ""
	For i = 1 to Numb
		if i = 1 then ListVarsSVODA = VarName + makestring(i) + "{base(), 'Net : Less than a year' net({Within_the_past_six_months 'Within the past six months', Six_months_to_less_than_1_year_ago 'Six months to less than 1 year ago'}), Net1 'Net : More than a year' net({_1_year_to_less_than_3_years_ago '1 year to less than 3 years ago', _3_years_to_less_than_7_years_ago '3 years to less than 7 years ago', _7_or_more_years_ago '7 or more years ago'})}"
		if i > 1 then ListVarsSVODA = ListVarsSVODA + " + " + VarName + makestring(i) + "{base(), 'Net : Less than a year' net({Within_the_past_six_months 'Within the past six months', Six_months_to_less_than_1_year_ago 'Six months to less than 1 year ago'}), Net1 'Net : More than a year' net({_1_year_to_less_than_3_years_ago '1 year to less than 3 years ago', _3_years_to_less_than_7_years_ago '3 years to less than 7 years ago', _7_or_more_years_ago '7 or more years ago'})}"
	next

End Function

Function ListVarsSVODB (VarName, Numb1, Numb2)
Dim i
	ListVarsSVODB = ""
	For i = Numb1 to Numb2
		if i = Numb1 then ListVarsSVODB = VarName + makestring(i) + "{base(), 'Net : Less than a year' net({Less_than_six_months, Six_months_to_less_than_a_year}), Net1 'Net : More than a year' net({_1_2_years, _3_4_years, _5_or_more_years})}"
		if i > Numb1 then ListVarsSVODB = ListVarsSVODB + " + " + VarName + makestring(i) + "{base(), 'Net : Less than a year' net({Less_than_six_months, Six_months_to_less_than_a_year}), Net1 'Net : More than a year' net({_1_2_years, _3_4_years, _5_or_more_years})}"
	next

End Function

Function ListVarsM (VarName, Numb1, Numb2)
Dim i
	ListVarsM = ""
	For i = Numb1 to Numb2
		if i = Numb1 then ListVarsM = VarName + makestring(i) + "{base(), e1 'Midpoint Mean' mean(" + VarName + makestring(i) + ")}"
		if i > Numb1 then ListVarsM = ListVarsM + " + " + VarName + makestring(i) + "{base(), e1 'Midpoint Mean' mean(" + VarName + makestring(i) + ")}"
	next

End Function

Function ListVarsN (VarName, Numb1, Numb2)
Dim i
	ListVarsN = ""
	For i = Numb1 to Numb2
		if i = Numb1 then ListVarsN = VarName + makestring(i)
		if i > Numb1 then ListVarsN = ListVarsN + " + " + VarName + makestring(i)
	next

End Function


Function ListVarsX (VarName, Numb1, Numb2)
Dim i
	ListVarsX = ""
	For i = Numb1 to Numb2
		if i = Numb1 then ListVarsX = VarName + makestring(i)
		if i > Numb1 then ListVarsX = ListVarsX + " + " + VarName + makestring(i)
	next

End Function

Function ListVarsInt (VarName, Numb)
Dim i
	ListVarsInt = ""
	For i = 1 to Numb
		if i = 1 then ListVarsInt = VarName + makestring(i) + "{base(), 'Top 2 Box' net({Definitely_interested, Probably_interested}), Net1 'Bottom 2 Box' net({Probably_not_interested, Definitely_not_interested })}"
		if i > 1 then ListVarsInt = ListVarsInt + " + " + VarName + makestring(i)+ "{base(), 'Top 2 Box' net({Definitely_interested, Probably_interested}), Net1 'Bottom 2 Box' net({Probably_not_interested, Definitely_not_interested })}"
	next

End Function

Function RemCom (VarName)
Dim i, sp,leng
	RemCom = ""
	sp = split(VarName,",")
	leng = len(sp)
	For i = 1 to leng
		if i = 1 then RemCom = sp[i-1]
		if i > 1 then RemCom = RemCom + " + " + sp[i-1]
	next

End Function

Function RemComOv (VarName)
Dim i, sp,leng
	RemComOv = ""
	sp = split(VarName,",")
	leng = len(sp)
	For i = 1 to leng
		if i = 1 then RemComOv = sp[i-1] + "{Base('Overall=1'),..}"
		if i > 1 then RemComOv = RemComOv + " + " + sp[i-1] + "{Base('Overall=1'),..}"
	next

End Function



Function GetGridSort(QRE, C, Slice, SlNum)
	if C = 0 then GetGridSort = "TerrGrid{Base} >" + QRE + "{" + Slice + makestring(SlNum) + "}"
	if C > 0 then GetGridSort = QRE + "{" + Slice + makestring(SlNum) + "}"
End Function	

Function ListVarsShare (VarName, Numb)
Dim i
      ListVarsShare = ""
      For i = 1 to Numb
            if i = 1 then ListVarsShare = VarName + makestring(i) + "{base(), eMean 'Mean (incl. zeros)' mean(" + Varname + makestring(i) + ") [Decimals=2], eMean2 'Mean (excl. zeros)' mean(" + Varname + makestring(i) + ", '" + Varname + makestring(i) + "'), eMinimum 'Minimum' min(" + Varname + makestring(i) + ") [Decimals=2], eMaximum 'Maximum' max(" + Varname + makestring(i) + ") [Decimals=2], _0To19 '0 - 19' expression('" + Varname + makestring(i) + " >= 0 AND " + Varname + makestring(i) + " <= 19'), _20To39 '20 - 39' expression('" + Varname + makestring(i) + " >= 20 AND " + Varname + makestring(i) + " <= 39'), _40To59 '40 - 59' expression('" + Varname + makestring(i) + " >= 40 AND " + Varname + makestring(i) + " <= 59'), _60To79 '60 - 79' expression('" + Varname + makestring(i) + " >= 60 AND " + Varname + makestring(i) + " <= 79'), _80To100 '80 - 100' expression('" + Varname + makestring(i) + " >= 80 AND " + Varname + makestring(i) + " <= 100')}"
            if i > 1 then ListVarsShare = ListVarsShare + " + " + VarName + makestring(i)+ "{base(), eMean 'Mean (incl. zeros)' mean(" + Varname + makestring(i) + ") [Decimals=2], eMean2 'Mean (excl. zeros)' mean(" + Varname + makestring(i) + ", '" + Varname + makestring(i) + "'), eMinimum 'Minimum' min(" + Varname + makestring(i) + ") [Decimals=2], eMaximum 'Maximum' max(" + Varname + makestring(i) + ") [Decimals=2], _0To19 '0 - 19' expression('" + Varname + makestring(i) + " >= 0 AND " + Varname + makestring(i) + " <= 19'), _20To39 '20 - 39' expression('" + Varname + makestring(i) + " >= 20 AND " + Varname + makestring(i) + " <= 39'), _40To59 '40 - 59' expression('" + Varname + makestring(i) + " >= 40 AND " + Varname + makestring(i) + " <= 59'), _60To79 '60 - 79' expression('" + Varname + makestring(i) + " >= 60 AND " + Varname + makestring(i) + " <= 79'), _80To100 '80 - 100' expression('" + Varname + makestring(i) + " >= 80 AND " + Varname + makestring(i) + " <= 100')}"
      next

End Function

Function ListVarsShareChopped (VarName, Numb1, Numb2)
Dim i
      ListVarsShareChopped = ""
      For i = Numb1 To Numb2
            if i = Numb1 then ListVarsShareChopped = VarName + makestring(i) + "{base(), eMean 'Mean (incl. zeros)' mean(" + Varname + makestring(i) + ") [Decimals=2], eMean2 'Mean (excl. zeros)' mean(" + Varname + makestring(i) + ", '" + Varname + makestring(i) + "'), eMinimum 'Minimum' min(" + Varname + makestring(i) + ") [Decimals=2], eMaximum 'Maximum' max(" + Varname + makestring(i) + ") [Decimals=2], _0To19 '0 - 19' expression('" + Varname + makestring(i) + " >= 0 AND " + Varname + makestring(i) + " <= 19'), _20To39 '20 - 39' expression('" + Varname + makestring(i) + " >= 20 AND " + Varname + makestring(i) + " <= 39'), _40To59 '40 - 59' expression('" + Varname + makestring(i) + " >= 40 AND " + Varname + makestring(i) + " <= 59'), _60To79 '60 - 79' expression('" + Varname + makestring(i) + " >= 60 AND " + Varname + makestring(i) + " <= 79'), _80To100 '80 - 100' expression('" + Varname + makestring(i) + " >= 80 AND " + Varname + makestring(i) + " <= 100')}"
            if i > Numb1 then ListVarsShareChopped = ListVarsShareChopped + " + " + VarName + makestring(i)+ "{base(), eMean 'Mean (incl. zeros)' mean(" + Varname + makestring(i) + ") [Decimals=2], eMean2 'Mean (excl. zeros)' mean(" + Varname + makestring(i) + ", '" + Varname + makestring(i) + "'), eMinimum 'Minimum' min(" + Varname + makestring(i) + ") [Decimals=2], eMaximum 'Maximum' max(" + Varname + makestring(i) + ") [Decimals=2], _0To19 '0 - 19' expression('" + Varname + makestring(i) + " >= 0 AND " + Varname + makestring(i) + " <= 19'), _20To39 '20 - 39' expression('" + Varname + makestring(i) + " >= 20 AND " + Varname + makestring(i) + " <= 39'), _40To59 '40 - 59' expression('" + Varname + makestring(i) + " >= 40 AND " + Varname + makestring(i) + " <= 59'), _60To79 '60 - 79' expression('" + Varname + makestring(i) + " >= 60 AND " + Varname + makestring(i) + " <= 79'), _80To100 '80 - 100' expression('" + Varname + makestring(i) + " >= 80 AND " + Varname + makestring(i) + " <= 100')}"
      next

End Function

Function ListVarsVOD (VarName, Numb)
Dim i
      ListVarsVOD = ""
      For i = 1 to Numb
            if i = 1 then ListVarsVOD = VarName + makestring(i) + "{base(), eMean 'Mean' mean(" + Varname + makestring(i) + ") [Decimals=2], eMinimum 'Minimum' min(" + Varname + makestring(i) + ") [Decimals=2], eMaximum 'Maximum' max(" + Varname + makestring(i) + ") [Decimals=2], _1 '1' expression('" + Varname + makestring(i) + " =1')" + ", _12 '1-2' expression('" + Varname + makestring(i) + " =1 or " + Varname + makestring(i) + "=2')" + ", _123 '1-3' expression('" + Varname + makestring(i) + " <=3')}"
            if i > 1 then ListVarsVOD = ListVarsVOD + " + " + VarName + makestring(i) + "{base(), eMean 'Mean' mean(" + Varname + makestring(i) + ") [Decimals=2], eMinimum 'Minimum' min(" + Varname + makestring(i) + ") [Decimals=2], eMaximum 'Maximum' max(" + Varname + makestring(i) + ") [Decimals=2], _1 '1' expression('" + Varname + makestring(i) + " =1')" + ", _12 '1-2' expression('" + Varname + makestring(i) + " =1 or " + Varname + makestring(i) + "=2')" + ", _123 '1-3' expression('" + Varname + makestring(i) + " <=3')}"
      next

End Function

Function ListVarsByBoxPlat338 (VarName, Numb)
Dim i
      ListVarsByBoxPlat338 = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBoxPlat338 = VarName + "_TB"
            if i > 1 then ListVarsByBoxPlat338 = ListVarsByBoxPlat338 + " + " + VarName + "_" + makestring(i) + "B"
      next

End Function

Function ListVarsByBox (VarName, Numb)
Dim i
      ListVarsByBox = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBox = VarName + "_TB"
            if i > 1 then ListVarsByBox = ListVarsByBox + " + " + VarName + "_" + makestring(i) + "B"
      next

End Function

Function ListVarsByBoxPlat (VarName, Numb)
Dim i
      ListVarsByBoxPlat = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBoxPlat = VarName + "_TB{base(), .., S17_PlatformP3M19 [isFixed = True], S17_PlatformP3M20 [isFixed = True], S17_PlatformP3M21 [isFixed = True],S17_PlatformP3M22 [IsFixed = TRUE]}"
            if i > 1 then ListVarsByBoxPlat = ListVarsByBoxPlat + " + " + VarName + "_" + makestring(i) + "B{base(), .., S17_PlatformP3M19 [isFixed = True], S17_PlatformP3M20 [isFixed = True], S17_PlatformP3M21 [isFixed = True],S17_PlatformP3M22 [IsFixed = TRUE]}"
      next

End Function

Function ListVarsByBoxPlatOv (VarName, Numb)
Dim i
      ListVarsByBoxPlatOv = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBoxPlatOv = VarName + "_TB{base('Overall=1'), .., S17_PlatformP3M19 [isFixed = True], S17_PlatformP3M20 [isFixed = True], S17_PlatformP3M21 [IsFixed = TRUE], S17_PlatformP3M22 [IsFixed = TRUE], S17_PlatformP3M23 [IsFixed = TRUE], S17_PlatformP3M24 [IsFixed = TRUE]}"
            if i > 1 then ListVarsByBoxPlatOv = ListVarsByBoxPlatOv + " + " + VarName + "_" + makestring(i) + "B{base('Overall=1'), .., S17_PlatformP3M19 [isFixed = True], S17_PlatformP3M20 [isFixed = True], S17_PlatformP3M21 [IsFixed = TRUE],S17_PlatformP3M22 [IsFixed = TRUE], S17_PlatformP3M23 [IsFixed = TRUE], S17_PlatformP3M24 [IsFixed = TRUE]}"
      next

End Function

Function ListVarsByBoxOv (VarName, Numb)
Dim i
      ListVarsByBoxOv = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBoxOv = VarName + "_TB" + "{Base('Overall=1'),..}"
            if i > 1 then ListVarsByBoxOv = ListVarsByBoxOv + " + " + VarName + "_" + makestring(i) + "B" + "{Base('Overall=1'),..}"
      next

End Function

Function ListVarsByBoxFirst (VarName, Numb)
Dim i
      ListVarsByBoxFirst = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBoxFirst = VarName + "_TB" + "{base(), ..}"
            if i > 1 then ListVarsByBoxFirst = ListVarsByBoxFirst + " + " + VarName + "_" + makestring(i) + "B" + "{base(), [IsFixed=True], ..}"
      next

End Function

Function ListVarsByBoxT (VarName, Numb)
Dim i
      ListVarsByBoxT = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBoxT = VarName + "_TB" + "{base(),Comb1 'Net : Broadcast' combine({" + VarName + "5 'ARROW', " + VarName + "7 'BLACK-ISH', " + VarName + "9 'BROOKLYN NINE-NINE', " + VarName + "10 'CHICAGO FIRE', " + VarName + "12 'CRIMINAL MINDS', " + VarName + "13 'EMPIRE', " + VarName + "18 'GREAT BRITISH BAKE-OFF', " + VarName + "19 'GREY''S ANATOMY', " + VarName + "24 'KEVIN CAN WAIT', " + VarName + "25 'LETHAL WEAPON', " + VarName + "26 'LITTLE BIG SHOTS', " + VarName + "28 'MODERN FAMILY', " + VarName + "29 'NCIS', " + VarName + "30 'NEW GIRL', " + VarName + "33 'QUANTICO', " + VarName + "35 'SCANDAL', " + VarName + "40 'SUPERGIRL', " + VarName + "41 'SURVIVOR', " + VarName + "44 'THE BACHELOR', " + VarName + "45 'THE BIG BANG THEORY', " + VarName + "46 'THE BLACKLIST', " + VarName + "48 'THE FLASH', " + VarName + "49 'THE GOLDBERGS', " + VarName + "53 'THE VOICE', " + VarName + "55 'THIS IS US'}), Comb2 'Net : Streaming' combine({" + VarName + "8 'BOSCH', " + VarName + "14 'FULLER HOUSE', " + VarName + "20 'HOUSE OF CARDS', " + VarName + "31 'ORANGE IS THE NEW BLACK', " + VarName + "38 'STRANGER THINGS', " + VarName + "50 'THE HANDMAID''S TALE', " + VarName + "51 'THE RANCH', " + VarName + "56 'TRANSPARENT', " + VarName + "57 'ULTIMATE BEAST MASTER'}), Comb3 'Net : Premium' combine({" + VarName + "15 'GAME OF THRONES', " + VarName + "16 'GIRLS', " + VarName + "36 'SILICON VALLEY', " + VarName + "43 'THE AFFAIR', " + VarName + "59 'VEEP', " + VarName + "61 'WESTWORLD'}), 'Net : Cable' combine({" + VarName + "1 'AMERICAN DAD', " + VarName + "2 'AMERICAN HORROR STORY', " + VarName + "3 'ANGIE TRIBECA', " + VarName + "4 'ANIMAL KINGDOM', " + VarName + "6 'BEING MARY JANE', " + VarName + "11 'CLAWS', " + VarName + "17 'GOLD RUSH', " + VarName + "21 'INSIDE AMY SCHUMER', " + VarName + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + VarName + "27 'LOVE & HIP HOP', " + VarName + "32 'PRETTY LITTLE LIARS', " + VarName + "34 'QUEEN SUGAR', " + VarName + "37 'SOUTH PARK', " + VarName + "39 'SUITS', " + VarName + "42 'TEEN MOM', " + VarName + "47 'THE DETOUR', " + VarName + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + VarName + "54 'THE WALKING DEAD', " + VarName + "60 'VIKINGS', " + VarName + "62 'WRECKED'}), " + VarName + "63}"
            if i > 1 then ListVarsByBoxT = ListVarsByBoxT + " + " + VarName + "_" + makestring(i) + "B" + "{base(), Comb1 'Net : Broadcast' combine({" + VarName + "5 'ARROW', " + VarName + "7 'BLACK-ISH', " + VarName + "9 'BROOKLYN NINE-NINE', " + VarName + "10 'CHICAGO FIRE', " + VarName + "12 'CRIMINAL MINDS', " + VarName + "13 'EMPIRE', " + VarName + "18 'GREAT BRITISH BAKE-OFF', " + VarName + "19 'GREY''S ANATOMY', " + VarName + "24 'KEVIN CAN WAIT', " + VarName + "25 'LETHAL WEAPON', " + VarName + "26 'LITTLE BIG SHOTS', " + VarName + "28 'MODERN FAMILY', " + VarName + "29 'NCIS', " + VarName + "30 'NEW GIRL', " + VarName + "33 'QUANTICO', " + VarName + "35 'SCANDAL', " + VarName + "40 'SUPERGIRL', " + VarName + "41 'SURVIVOR', " + VarName + "44 'THE BACHELOR', " + VarName + "45 'THE BIG BANG THEORY', " + VarName + "46 'THE BLACKLIST', " + VarName + "48 'THE FLASH', " + VarName + "49 'THE GOLDBERGS', " + VarName + "53 'THE VOICE', " + VarName + "55 'THIS IS US'}), Comb2 'Net : Streaming' combine({" + VarName + "8 'BOSCH', " + VarName + "14 'FULLER HOUSE', " + VarName + "20 'HOUSE OF CARDS', " + VarName + "31 'ORANGE IS THE NEW BLACK', " + VarName + "38 'STRANGER THINGS', " + VarName + "50 'THE HANDMAID''S TALE', " + VarName + "51 'THE RANCH', " + VarName + "56 'TRANSPARENT', " + VarName + "57 'ULTIMATE BEAST MASTER'}), Comb3 'Net : Premium' combine({" + VarName + "15 'GAME OF THRONES', " + VarName + "16 'GIRLS', " + VarName + "36 'SILICON VALLEY', " + VarName + "43 'THE AFFAIR', " + VarName + "59 'VEEP', " + VarName + "61 'WESTWORLD'}), 'Net : Cable' combine({" + VarName + "1 'AMERICAN DAD', " + VarName + "2 'AMERICAN HORROR STORY', " + VarName + "3 'ANGIE TRIBECA', " + VarName + "4 'ANIMAL KINGDOM', " + VarName + "6 'BEING MARY JANE', " + VarName + "11 'CLAWS', " + VarName + "17 'GOLD RUSH', " + VarName + "21 'INSIDE AMY SCHUMER', " + VarName + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + VarName + "27 'LOVE & HIP HOP', " + VarName + "32 'PRETTY LITTLE LIARS', " + VarName + "34 'QUEEN SUGAR', " + VarName + "37 'SOUTH PARK', " + VarName + "39 'SUITS', " + VarName + "42 'TEEN MOM', " + VarName + "47 'THE DETOUR', " + VarName + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + VarName + "54 'THE WALKING DEAD', " + VarName + "60 'VIKINGS', " + VarName + "62 'WRECKED'}), " + VarName + "63}"
      next

End Function


Function ListVarsByBoxG1 (VarName, Numb)
Dim i
      ListVarsByBoxG1 = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBoxG1 = VarName + "_TB" + "{base(), Comb2 'Net : Unscripted' combine({" + VarName + "17 'GOLD RUSH', " + VarName + "18 'GREAT BRITISH BAKE-OFF', " + VarName + "26 'LITTLE BIG SHOTS', " + VarName + "27 'LOVE & HIP HOP', " + VarName + "41 'SURVIVOR', " + VarName + "42 'TEEN MOM', " + VarName + "44 'THE BACHELOR', " + VarName + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + VarName + "53 'THE VOICE', " + VarName + "57 'ULTIMATE BEAST MASTER'}), Comb1 'Net : Drama' combine({" + VarName + "2 'AMERICAN HORROR STORY', " + VarName + "4 'ANIMAL KINGDOM', " + VarName + "5 'ARROW', " + VarName + "6 'BEING MARY JANE', " + VarName + "8 'BOSCH', " + VarName + "10 'CHICAGO FIRE', " + VarName + "11 'CLAWS', " + VarName + "12 'CRIMINAL MINDS', " + VarName + "13 'EMPIRE', " + VarName + "15 'GAME OF THRONES', " + VarName + "19 'GREY''S ANATOMY', " + VarName + "20 'HOUSE OF CARDS', " + VarName + "25 'LETHAL WEAPON', " + VarName + "29 'NCIS', " + VarName + "32 'PRETTY LITTLE LIARS', " + VarName + "33 'QUANTICO', " + VarName + "34 'QUEEN SUGAR', " + VarName + "35 'SCANDAL', " + VarName + "38 'STRANGER THINGS', " + VarName + "39 'SUITS', " + VarName + "40 'SUPERGIRL', " + VarName + "43 'THE AFFAIR', " + VarName + "46 'THE BLACKLIST', " + VarName + "48 'THE FLASH', " + VarName + "50 'THE HANDMAID''S TALE', " + VarName + "54 'THE WALKING DEAD', " + VarName + "55 'THIS IS US', " + VarName + "60 'VIKINGS', " + VarName + "61 'WESTWORLD'}), 'Net : Comedy' combine({" + VarName + "1 'AMERICAN DAD', " + VarName + "3 'ANGIE TRIBECA', " + VarName + "7 'BLACK-ISH', " + VarName + "9 'BROOKLYN NINE-NINE', " + VarName + "14 'FULLER HOUSE', " + VarName + "16 'GIRLS', " + VarName + "21 'INSIDE AMY SCHUMER', " + VarName + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + VarName + "24 'KEVIN CAN WAIT', " + VarName + "28 'MODERN FAMILY', " + VarName + "30 'NEW GIRL', " + VarName + "31 'ORANGE IS THE NEW BLACK', " + VarName + "36 'SILICON VALLEY', " + VarName + "37 'SOUTH PARK', " + VarName + "45 'THE BIG BANG THEORY', " + VarName + "47 'THE DETOUR', " + VarName + "49 'THE GOLDBERGS', " + VarName + "51 'THE RANCH', " + VarName + "56 'TRANSPARENT', " + VarName + "59 'VEEP', " + VarName + "62 'WRECKED'}), " + VarName + "63}"
            if i > 1 then ListVarsByBoxG1 = ListVarsByBoxG1 + " + " + VarName + "_" + makestring(i) + "B" + "{base(), Comb2 'Net : Unscripted' combine({" + VarName + "17 'GOLD RUSH', " + VarName + "18 'GREAT BRITISH BAKE-OFF', " + VarName + "26 'LITTLE BIG SHOTS', " + VarName + "27 'LOVE & HIP HOP', " + VarName + "41 'SURVIVOR', " + VarName + "42 'TEEN MOM', " + VarName + "44 'THE BACHELOR', " + VarName + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + VarName + "53 'THE VOICE', " + VarName + "57 'ULTIMATE BEAST MASTER'}), Comb1 'Net : Drama' combine({" + VarName + "2 'AMERICAN HORROR STORY', " + VarName + "4 'ANIMAL KINGDOM', " + VarName + "5 'ARROW', " + VarName + "6 'BEING MARY JANE', " + VarName + "8 'BOSCH', " + VarName + "10 'CHICAGO FIRE', " + VarName + "11 'CLAWS', " + VarName + "12 'CRIMINAL MINDS', " + VarName + "13 'EMPIRE', " + VarName + "15 'GAME OF THRONES', " + VarName + "19 'GREY''S ANATOMY', " + VarName + "20 'HOUSE OF CARDS', " + VarName + "25 'LETHAL WEAPON', " + VarName + "29 'NCIS', " + VarName + "32 'PRETTY LITTLE LIARS', " + VarName + "33 'QUANTICO', " + VarName + "34 'QUEEN SUGAR', " + VarName + "35 'SCANDAL', " + VarName + "38 'STRANGER THINGS', " + VarName + "39 'SUITS', " + VarName + "40 'SUPERGIRL', " + VarName + "43 'THE AFFAIR', " + VarName + "46 'THE BLACKLIST', " + VarName + "48 'THE FLASH', " + VarName + "50 'THE HANDMAID''S TALE', " + VarName + "54 'THE WALKING DEAD', " + VarName + "55 'THIS IS US', " + VarName + "60 'VIKINGS', " + VarName + "61 'WESTWORLD'}), 'Net : Comedy' combine({" + VarName + "1 'AMERICAN DAD', " + VarName + "3 'ANGIE TRIBECA', " + VarName + "7 'BLACK-ISH', " + VarName + "9 'BROOKLYN NINE-NINE', " + VarName + "14 'FULLER HOUSE', " + VarName + "16 'GIRLS', " + VarName + "21 'INSIDE AMY SCHUMER', " + VarName + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + VarName + "24 'KEVIN CAN WAIT', " + VarName + "28 'MODERN FAMILY', " + VarName + "30 'NEW GIRL', " + VarName + "31 'ORANGE IS THE NEW BLACK', " + VarName + "36 'SILICON VALLEY', " + VarName + "37 'SOUTH PARK', " + VarName + "45 'THE BIG BANG THEORY', " + VarName + "47 'THE DETOUR', " + VarName + "49 'THE GOLDBERGS', " + VarName + "51 'THE RANCH', " + VarName + "56 'TRANSPARENT', " + VarName + "59 'VEEP', " + VarName + "62 'WRECKED'}), " + VarName + "63}"
            next

End Function

Function ListVarsByBoxG2 (VarName, Numb)
Dim i
      ListVarsByBoxG2 = ""
      For i = 1 to Numb
            if i = 1 then ListVarsByBoxG2 = VarName + "_TB" + "{base(), " + VarName + "5 'Superhero : ARROW', " + VarName + "21 'Not Animated : INSIDE AMY SCHUMER', 'Net : Animated' combine({" + VarName + "1 'AMERICAN DAD', " + VarName + "37 'SOUTH PARK'}), Comb3 'Net : Procedural' combine({" + VarName + "10 'CHICAGO FIRE', " + VarName + "12 'CRIMINAL MINDS', " + VarName + "19 'GREY''S ANATOMY', " + VarName + "25 'LETHAL WEAPON', " + VarName + "29 'NCIS', " + VarName + "39 'SUITS'}), Comb4 'Net : Other (Unscripted)' combine({" + VarName + "17 'GOLD RUSH', " + VarName + "18 'GREAT BRITISH BAKE-OFF', " + VarName + "26 'LITTLE BIG SHOTS', " + VarName + "27 'LOVE & HIP HOP', " + VarName + "41 'SURVIVOR', " + VarName + "42 'TEEN MOM', " + VarName + "44 'THE BACHELOR', " + VarName + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + VarName + "53 'THE VOICE', " + VarName + "57 'ULTIMATE BEAST MASTER'}), Comb1 'Net : Serialized' combine({" + VarName + "2 'AMERICAN HORROR STORY', " + VarName + "4 'ANIMAL KINGDOM', " + VarName + "6 'BEING MARY JANE', " + VarName + "8 'BOSCH', " + VarName + "11 'CLAWS', " + VarName + "13 'EMPIRE', " + VarName + "15 'GAME OF THRONES', " + VarName + "20 'HOUSE OF CARDS', " + VarName + "32 'PRETTY LITTLE LIARS', " + VarName + "33 'QUANTICO', " + VarName + "34 'QUEEN SUGAR', " + VarName + "35 'SCANDAL', " + VarName + "38 'STRANGER THINGS', " + VarName + "40 'SUPERGIRL', " + VarName + "43 'THE AFFAIR', " + VarName + "46 'THE BLACKLIST', " + VarName + "48 'THE FLASH', " + VarName + "50 'THE HANDMAID''S TALE', " + VarName + "54 'THE WALKING DEAD', " + VarName + "55 'THIS IS US', " + VarName + "60 'VIKINGS', " + VarName + "61 'WESTWORLD'}), Comb2 'Net : Sitcom' combine({" + VarName + "3 'ANGIE TRIBECA', " + VarName + "7 'BLACK-ISH', " + VarName + "9 'BROOKLYN NINE-NINE', " + VarName + "14 'FULLER HOUSE', " + VarName + "16 'GIRLS', " + VarName + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + VarName + "24 'KEVIN CAN WAIT', " + VarName + "28 'MODERN FAMILY', " + VarName + "30 'NEW GIRL', " + VarName + "31 'ORANGE IS THE NEW BLACK', " + VarName + "36 'SILICON VALLEY', " + VarName + "45 'THE BIG BANG THEORY', " + VarName + "47 'THE DETOUR', " + VarName + "49 'THE GOLDBERGS', " + VarName + "51 'THE RANCH', " + VarName + "56 'TRANSPARENT', " + VarName + "59 'VEEP', " + VarName + "62 'WRECKED'}), " + VarName + "63}"
            if i > 1 then ListVarsByBoxG2 = ListVarsByBoxG2 + " + " + VarName + "_" + makestring(i) + "B" + "{base(), " + VarName + "5 'Superhero : ARROW', " + VarName + "21 'Not Animated : INSIDE AMY SCHUMER', 'Net : Animated' combine({" + VarName + "1 'AMERICAN DAD', " + VarName + "37 'SOUTH PARK'}), Comb3 'Net : Procedural' combine({" + VarName + "10 'CHICAGO FIRE', " + VarName + "12 'CRIMINAL MINDS', " + VarName + "19 'GREY''S ANATOMY', " + VarName + "25 'LETHAL WEAPON', " + VarName + "29 'NCIS', " + VarName + "39 'SUITS'}), Comb4 'Net : Other (Unscripted)' combine({" + VarName + "17 'GOLD RUSH', " + VarName + "18 'GREAT BRITISH BAKE-OFF', " + VarName + "26 'LITTLE BIG SHOTS', " + VarName + "27 'LOVE & HIP HOP', " + VarName + "41 'SURVIVOR', " + VarName + "42 'TEEN MOM', " + VarName + "44 'THE BACHELOR', " + VarName + "52 'THE REAL HOUSEWIVES OF ATLANTA', " + VarName + "53 'THE VOICE', " + VarName + "57 'ULTIMATE BEAST MASTER'}), Comb1 'Net : Serialized' combine({" + VarName + "2 'AMERICAN HORROR STORY', " + VarName + "4 'ANIMAL KINGDOM', " + VarName + "6 'BEING MARY JANE', " + VarName + "8 'BOSCH', " + VarName + "11 'CLAWS', " + VarName + "13 'EMPIRE', " + VarName + "15 'GAME OF THRONES', " + VarName + "20 'HOUSE OF CARDS', " + VarName + "32 'PRETTY LITTLE LIARS', " + VarName + "33 'QUANTICO', " + VarName + "34 'QUEEN SUGAR', " + VarName + "35 'SCANDAL', " + VarName + "38 'STRANGER THINGS', " + VarName + "40 'SUPERGIRL', " + VarName + "43 'THE AFFAIR', " + VarName + "46 'THE BLACKLIST', " + VarName + "48 'THE FLASH', " + VarName + "50 'THE HANDMAID''S TALE', " + VarName + "54 'THE WALKING DEAD', " + VarName + "55 'THIS IS US', " + VarName + "60 'VIKINGS', " + VarName + "61 'WESTWORLD'}), Comb2 'Net : Sitcom' combine({" + VarName + "3 'ANGIE TRIBECA', " + VarName + "7 'BLACK-ISH', " + VarName + "9 'BROOKLYN NINE-NINE', " + VarName + "14 'FULLER HOUSE', " + VarName + "16 'GIRLS', " + VarName + "22 'IT''S ALWAYS SUNNY IN PHILADELPHIA', " + VarName + "24 'KEVIN CAN WAIT', " + VarName + "28 'MODERN FAMILY', " + VarName + "30 'NEW GIRL', " + VarName + "31 'ORANGE IS THE NEW BLACK', " + VarName + "36 'SILICON VALLEY', " + VarName + "45 'THE BIG BANG THEORY', " + VarName + "47 'THE DETOUR', " + VarName + "49 'THE GOLDBERGS', " + VarName + "51 'THE RANCH', " + VarName + "56 'TRANSPARENT', " + VarName + "59 'VEEP', " + VarName + "62 'WRECKED'}), " + VarName + "63}"
      next

End Function





Function ListVarsGrid (VarName, Numb)
Dim i
	ListVarsGrid = ""
	For i = 1 to Numb
		if i = 1 then ListVarsGrid = VarName + makestring(i) + "[..].Column"
		if i > 1 then ListVarsGrid = ListVarsGrid + " + " + VarName + makestring(i) + "[..].Column"
	next

End Function		



Sub ExportTables(Wtd, TableDoc, Project, Samp, Cntry)

dim we
		'----------------------------
		'Weights
		'----------------------------	
		if Wtd = "Weighted" then
			For we = 0 to TableDoc.Tables.Count-1
				TableDoc.Tables[we].weight = "weight"
			next
		end if	
		'----------------------------
		'Populate the Tables
		'----------------------------
	

	  	Dim bSuccess
	  	bSuccess = TableDoc.Populate()
	  	
	  	If bSuccess <> True Then
			Dim Table
		   	For Each Table in TableDoc.Tables
				If Len(Table.PopulateError) > 0 Then
					TableDoc.Populate(Table.Name)
				End If
		   	Next
		End If
	
		'----------------------------
		'Save the tables document
		'----------------------------
	  	TableDoc.Save(Project + " " + Samp + " " + Cntry + " " + Wtd + " V1.mtd")
	  	
	  	
		
		'----------------------------
		'Export the tables 
		'----------------------------
		Dim EXPORT_FILE
		EXPORT_FILE = myPath + "Tabs\Tab Prep\Exports\Export " + Samp + " " + Cntry + " " + Wtd +  ".xlsx"
	
		With TableDoc
				With .Exports["VergeExcelExport"]
					.Properties["DisplayAnnotations"] = True
					.Properties["FileFormat"] = "Excel 2007"
					.Properties["Interactive"] = False
					.Properties["LaunchApplication"] = False
					.Properties["OverwriteOutput"] = True
					.Properties["ElementLabels"] = True
					.Properties["VariableLabels"] = True
					.Properties["Destination"] = EXPORT_FILE
					.Properties["ShowHeadings"] = True
					.Properties["TableOfContents"] = False
					.Properties["FreezeFrames"] = False
					.Properties["PageSetup.LeftMargin"] = 0.15
					.Properties["PageSetup.RightMargin"] = 0.15
					.Properties["PageSetup.TopMargin"] = 0.25
					.Properties["PageSetup.BottomMargin"] = 0.25
					.Properties["PageSetup.HeaderMargin"] = 0.25
					.Properties["PageSetup.FooterMargin"] = 0.25
					.Properties["PageSetup.Orientation"] = 2
					.Properties["MinimumAnnotationWidth"] = 5
					.Properties["TopElementWidth"] = 7.5
					.Properties["SideElementWidth"] = 30
					.Properties["Colors.VariableLabelCell"] = "#C5D9F1"
					.Properties["Colors.SignificanceCell"] = "#006100"
					.Properties["Colors.SignificanceText"] = "#C6EFCE"
					.Export()
				End With
		End With
	
		TableDoc.Tables.Clear()
End Sub
